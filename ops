{"version":1,"ops":[{"type":1,"author":{"id":"54edb2db9eb9b7cc6fbbb0681df88d5b1d14abe6"},"timestamp":1546555047,"metadata":{"github-id":"MDU6SXNzdWUzOTU3NDk3MTg=","github-url":"https://github.com/DFHack/dfhack/issues/1420","origin":"github"},"title":"Recent CoreSuspender refactoring altered the behaviour of CoreSuspendClaimer in some situations","message":"https://github.com/DFHack/dfhack/commit/f6b0ac78196474c99f92c50bc275e4dd5855f3bc\n@suokko \n\nPreviously, `CoreSuspendClaimer` was effectively a no-op, while now it's an alias to `CoreSuspender`. This change breaks Remote, which suspends the core a different way while processing its commands. If Remote calls some code in DFHack which in turn uses `CoreSuspendClaimer`, it will now hang.\n\nTwo places this happens for sure is when I'm destroying a Lua-based screen, which uses `CoreSuspendClaimer` in `dfhack_lua_viewscreen::safe_call_lua`, and also `eventful` plugin has it in `workshop_hook::interpose_fn_fillSidebarMenu` which is called when I simulate a keypress in a workshop.","files":null}]}