{"version":1,"ops":[{"type":1,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1469021221,"metadata":{"github-id":"MDU6SXNzdWUxNjY1ODA4MTk=","github-url":"https://github.com/DFHack/dfhack/issues/964","origin":"github"},"title":"Improve stockpile serialization error handling","message":"ErgZay from #dfhack reported an issue where protobuf threw an exception when serializing a stockpile, apparently leaving the .dfstock file partially-saved and unusable. This was logged to the console, but there wasn't any additional feedback:\n\n```\n./hack/lua/plugins/stockpiles.lua:187: Cannot invoke field (global).stockpiles.stockpiles_save(): C++ exception: CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of the message.\n```\n\nThis probably would have crashed DF had the `savestock` command been run directly.\n\nSome discussions suggest that this could be due to uninitialized boolean fields - if those exist in the stockpile structure, there's not much we can do about that. I _think_ catching `FatalException`s in the serialization code should be enough to at least display a more friendly error message and clean up a corrupted file, though.","files":null}]}