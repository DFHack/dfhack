{"version":1,"ops":[{"type":3,"author":{"id":"20b694d874766b15e6137a91b7131cbaa64faed8"},"timestamp":1322879342,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI5OTg1ODU=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-2998585"},"message":"also you really dont want a huge program such as stonesense be injected into DF, which itself has a dozend dependencies on external libraries which in some cases even overlap with the one used by DF itself","files":null},{"type":3,"author":{"id":"20b694d874766b15e6137a91b7131cbaa64faed8"},"timestamp":1322879625,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI5OTg2MDg=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-2998608"},"message":"if there's really a good reason that DFHack has to run in DF's process, it should only load a minimal runtime which uses some client/server mechanism (for example using zeromq)","files":null},{"type":3,"author":{"id":"20b694d874766b15e6137a91b7131cbaa64faed8"},"timestamp":1322880627,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI5OTg2ODY=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-2998686"},"message":"another advantage of a client/server approach is that you could attach to dfhack using the network.\nthat way you could run stonesense on a dfferent computer than DF for better performance","files":null},{"type":3,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1322934784,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMDE4OTY=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-3001896"},"message":"Yes. Eventually it will work like that, with the server-side plugins being mostly simple text tools like now or protocol extensions for zeromq/protobufs. I have to agree that current stonesense is crazy :D\n\nAnd yes. DFHack has to run inside DF. It makes the code much cleaner and makes things like allocating/freeing memory and calling DF's functions much easier. Easier to the point where it's actually possible without horrible unmaintainable hacks ;)","files":null},{"type":3,"author":{"id":"20b694d874766b15e6137a91b7131cbaa64faed8"},"timestamp":1322941392,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMDI1MDE=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-3002501"},"message":"what i have in mind is to load a minimum server dll into the DF process which only features something like\nwrite_memory_address(void\\* addr, void\\* buffer, size_t numbytes)\nread_memory_address(void\\* addr, void\\* buffer, size_t numbytes)\nand listens on a tcp port.\n\na client, such as liquids, would be linked against dfhack_client.so which can be used in the same way (API) then before, with the only difference that it sends a read/write command to the server instead of writing to the actual memory.","files":null},{"type":3,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1322994481,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMDU3ODY=","github-url":"https://github.com/DFHack/dfhack/issues/124#issuecomment-3005786"},"message":"That would really defeat the purpose of the server entirely. So, no.\nI already tried this approach and it was bad.","files":null},{"type":4,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1330112547,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTAxOTA0Mjg="},"status":2},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1423176346,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIzMTEyNTU5MA=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1423176349,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIzMTEyNTYyNA=="},"added":["internal"],"removed":[]}]}