{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1460839844,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDYzMDA3OTYwNQ=="},"added":["idea"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1460839897,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMDg5OTgxMg==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-210899812"},"message":"(Links in markdown are `[title](url)`, not `[url](title)` - fixed)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1460840022,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMDg5OTkwMw==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-210899903"},"message":"Would this be easy to integrate?\nI've been using libSegFault on Linux and something like it on OS X - the one disadvantage is that they only produce backtraces for a single thread (not always the one that caused the crash), but it would be easy enough to integrate too.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1460895318,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMTAwODI0NA==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-211008244"},"message":"i think it produces all thread traces. But not sure.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1460987658,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMTM5MDgwNw==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-211390807"},"message":"[Here is the code i'm using](https://gist.github.com/warmist/1c0406e444bd2992fbb9816c5200f9d9) It's a bit stupid that it dynamically loads the libs as you can link them, but this way you don't need to change linking settings :P","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1461015170,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMTU5MjI3Mg==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-211592272"},"message":"Regarding google-breakpad, I found [this](https://google-breakpad.googlecode.com/svn/wiki/LinuxStarterGuide.wiki), which is a pretty simple example (and evidently doesn't require networking/server setup at all). I still haven't investigated how to integrate it, though.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1461042602,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMTczMDg0NQ==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-211730845"},"message":"But it seems that it makes the dump in it's own format: i.e you need to format symbols in special way and you need a special tool to walk through stack. Native way lets you make dumps that MSVC opens and lets you debug. Also this has 0 dependencies - windows already have all the libraries.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1461184047,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjU4OTgzNQ==","github-url":"https://github.com/DFHack/dfhack/issues/895#issuecomment-212589835"},"message":"I was under the impression that the format was pretty similar to Windows minidumps, but I don't know if they'd be usable with MSVC.\nAnyway, the advantage is that would produce consistent reports on _every_ platform, and you could read them on every platform as well, as long as you have the necessary symbol files. I really haven't found something else that's comparable yet, although I guess distributing the symbol files would be a little inconvenient, so we can keep looking.","files":null}]}