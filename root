{"version":1,"ops":[{"type":1,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1521621920,"metadata":{"github-id":"MDU6SXNzdWUzMDcxNTgxNDA=","github-url":"https://github.com/DFHack/dfhack/issues/1246","origin":"github"},"title":"fix/dead-units.lua has a significant bug","message":"I've made a post in the DFHack thread, but this is really the appropriate place for it:\nThe script uses flags1.dead as if it indicated that the unit was dead, rather than just inactive. This causes the script to remove incoming critters and units that happen not to have entered the map yet when the script is executed (in the case of a quester infiltrator army, the tricking onto the map takes weeks for 120 units after the mastodon announcement of their arrival is made).\n\nWhile at it, I've tweaked a few other annoying properties of the script. The \"--###\" sections indicate changes I'd like discussed. Obviously, the script version below is not intended as the final version, but rather a starting point for a discussion. The trace type output again is there because I use it to see what the script does, and doesn't belong to an updated version of the script. To just fix the script bug you really only need to add the first change, i.e. a test against \"flags2.killed\".\n\n```-- Remove uninteresting dead units from the unit list.\n--[====[\n\nfix/dead-units\n==============\nRemoves uninteresting dead units from the unit list. Doesn't seem to give any\nnoticeable performance gain, but migrants normally stop if the unit list grows\nto around 3000 units, and this script reduces it back.\n\n]====]\nlocal units = df.global.world.units.active\n--local dwarf_race = df.global.ui.race_id\nlocal dwarf_civ = df.global.ui.civ_id\nlocal count = 0\nlocal month = 1200 * 28\nlocal year = month * 12\n\nfor i=#units-1,0,-1 do\n    local unit = units[i]\n    local flags1 = unit.flags1\n    local flags2 = unit.flags2\n    if flags1.dead and  --  Probably redundant, but if a killed unit is still active we probably don't want to remove it.\n       flags2.killed then --and\n       --unit.race ~= dwarf_race then  --###  Keeping dead non civ dwarves in the list does not make sense anymore.\n                                       --###  It did make sense in 0.40.24 when all dead dwarves went to the corpse\n                                       --###  stockpile and everyone else to the refuse one.\n        local remove = false\n        if flags2.slaughter then\n            remove = true\n        elseif unit.hist_figure_id == -1 then  --### I don't want to keep animals DFHack named for various purposes in the\n        --elseif not unit.name.has_name then   --### dead unit list. A better criterion ought to be if they have a histfig id.\n            remove = true\n        elseif unit.civ_id ~= dwarf_civ and  --###  What about visitors from our own civ? If we have to bury them we\n                                             --###  may want to keep them, but otherwise I see no reason. I don't know about burial, though...\n               not flags1.merchant then\n               --not (flags1.merchant or flags1.diplomat) then  --###  Questers that have demanded artifacts and then return are flagged as\n                                                                --###  \"diplomats\" even if the demand happened during a previous visit, i.e.\n                                                                --###  the diplomat flag isn't cleared.\n            remove = true\n        end\n        if unit.counters.death_id ~= -1 then  --###  Keep recent deaths around for a month before culling them. It's annoying to have that\n                                              --###  rampaging FB just be gone from both the other and dead lists, and you may want to keep\n                                              --###  killed wildlife around for a while too.\n                                              --###  If a unit doesn't have a death_id, is it actually dead, or should those units be blocked\n                                              --###  from removal as well?\n          local incident = df.incident.find(unit.counters.death_id)\n          if incident then\n            local incident_time = incident.event_year * year + incident.event_time\n            local now = df.global.cur_year * year + df.global.cur_year_tick\n            if now - incident_time \u003c month then\n              dfhack.println (\"Not time yet\", now - incident_time, month)\n              remove = false\n            end\n          end\n        else\n          dfhack.println (\"Missing death_id!\")\n        end\n        \n        if remove then\n          dfhack.println (\"Removing \" .. dfhack.TranslateName (unit.name, false) .. \" with unit id \" .. tostring (unit.id) .. \" race: \" .. df.global.world.raws.creatures.all [unit.race].name [0])\n          count = count + 1\n          units:erase(i)\n        end\n    end\nend\n\nprint('Units removed from active: '..count)\n```\n\nAlso note that this is what prompted issue #247 under DFHack/df-structures.\n\nEdit: Apparently slaughtered animals do not have a death_id, so they will have to be removed directly.","files":null}]}