{"version":1,"ops":[{"type":5,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1583862277,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMxMTU3ODI4Njg="},"added":["question"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583862557,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyNDQ2NA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597224464"},"message":"The error doesn't mean \"2015 or 2017 or newer\" - the [check](https://github.com/DFHack/dfhack/blob/b9841110c3363765485e696dd9395efb981a2971/CMakeLists.txt#L57-L59) is for a specific range of versions, and won't allow anything newer or older.\nI don't build on Windows so I don't know if VS2019 works or not, but BenLubar or someone else might.","files":null},{"type":3,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1583862600,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyNDgxNw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597224817"},"message":"If you want to try building on VS2019, change the `1919` on line 58 of CMakeLists.txt to `1929`. It might work, or it might break horribly.","files":null},{"type":3,"author":{"id":"03f4b3bfff955b4c1600c7569fd6d53e3a24ef76"},"timestamp":1583862728,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyNTgyMA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597225820"},"message":"\u003eWhy is it saying MSVC 2015 or 2017 is required if I have visual studio 2019? Thanks I appreciate you guys always helping me as im still learning.\n\nBecause 2019 isn't the same as 2015 or 2017. Visual Studio is weird like that.\n\nYou can install older build tools by running the Visual Studio Installer (if you have Visual Studio installed, you probably also have this installed; try searching for it using Windows search), then clicking on \"More\" next to Visual Studio, selecting \"Modify\", clicking on the \"Individual components\" tab, and enabling \"MSVC v140 - VS 2015 C++ build tools\" (or the 2017 one, if you prefer).","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583862731,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyNTg1NA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597225854"},"message":"lol ok thanks ill try now. Can I build  the windows dfhack on linux then? Id love to do that instead i didnt think i could do that. that's called cross compiling right?","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583863076,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyODQ5NQ==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597228495"},"message":"Thank you all for your help but it seems I already have that installed. And you cant see it in the pic but if you were to scroll down it never goes up to 15 it only shows me up to v142. Thanks for the help https://imgur.com/a/IDKHqxj","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583863198,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIyOTQ3NA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597229474"},"message":"v142 is 2019, and v141 is 2017 - can you set Visual Studio to use v141 somehow? (I don't know how to do this, but I expect VS2019 defaults to v142.)","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583863641,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzIzMzExMw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597233113"},"message":"I did what brndd said to do and edited the cmake file it configured perfectly now I just have to figure out the commands to compile it as make and gmake give an error (does not exist.)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583865271,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzI0NTc4Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597245783"},"message":"Right, on Windows, CMake will generate a Visual Studio project by default, so `make` won't work. https://dfhack.readthedocs.io/en/latest/docs/Compile.html#windows should have more detailed instructions.","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583865401,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzI0NjI4Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597246282"},"message":"I just booted gentoo and had this running in two minutes. \ngit clone https://github.com/DFHack/dfhack.git\nmkdir build \u0026\u0026 cd build\ngit submodule update --init\ncmake ..\nmake\nThanks for the help and sorry for the noise, ill just do this on gentoo. I hate windows anyway.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583865401,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MDYxMTY5"},"target":"8e2acd053ef61147face9552b2c7bff4e4194195e931c0ce75430b2c19614c07","message":"I just booted gentoo and had this running in two minutes. \ngit clone https://github.com/DFHack/dfhack.git\nmkdir build \u0026\u0026 cd build\ngit submodule update --init\ncmake ..\nmake\nThanks for the help and sorry for the noise, ill just do this on gentoo. I hate windows anyway. Thank you all for your help I really appreciate what you do with these programs and plugins to make DF more fun. It's appreciated.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583865728,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzI0OTMzNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597249335"},"message":"If you want faster incremental builds, replacing `make` with `ninja` might help: https://dfhack.readthedocs.io/en/latest/docs/Compile.html#generator","files":null},{"type":6,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583865728,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MDYyNDk3"},"target":"0dd19238939ef818b926efe590d8dee8a6426b8a3ef0be8333ed4d0618607c3a","message":"FYI, if you want faster incremental builds, replacing `make` with `ninja` might help: https://dfhack.readthedocs.io/en/latest/docs/Compile.html#generator","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583873930,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzMxMTQ5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597311490"},"message":"Yes I tried using ninja earlier because you recommended it a few days ago to me. but it failed so im taking it one step at a time. Im 42 years old it used to be simple. ./configure  make  make install. I suppose its still simple I just havent learned yet. Ill continue to read the links thanks for them.","files":null},{"type":3,"author":{"id":"03f4b3bfff955b4c1600c7569fd6d53e3a24ef76"},"timestamp":1583942094,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzcxNDgwMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597714801"},"message":"You need to tell CMake to use the older build tools. I don't quite remember how this is done and don't have the build environment set up right now, but there should be an argument you can pass to it. Perhaps this page will help: https://cmake.org/cmake/help/v3.12/variable/CMAKE_GENERATOR_TOOLSET.html","files":null},{"type":6,"author":{"id":"03f4b3bfff955b4c1600c7569fd6d53e3a24ef76"},"timestamp":1583942094,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MzA1NTkx"},"target":"aedb79a0491a2bc966b83cf0f9cf442e31ce1ebb24434964df27544504a09672","message":"You need to tell CMake to use the older build tools. I don't quite remember how this is done and don't have the build environment set up right now, but there should be an argument you can pass to it. Perhaps this page will help: https://cmake.org/cmake/help/v3.12/variable/CMAKE_GENERATOR_TOOLSET.html\n\nMaybe this too: https://stackoverflow.com/questions/47154454/cmake-how-to-specify-vs2015-3-toolset-with-vs2017-installed","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1583944872,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5Nzc0MDU3Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597740576"},"message":"To clarify, that's for Windows, and some of our [Windows generate-* scripts](https://github.com/DFHack/dfhack/tree/develop/build/win64) specify v140 already","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583955076,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5Nzc2NzY5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597767690"},"message":"Thank you both for the help. I now successfully generated the files using cmake-gui and the info in that stackoverflow link. However I am used to the old school ./configure ; make; make install. cmake is new to me. Now that the files are generated using cmake, I still don't see a make file was that supposed to get built? What is the proper make command I am getting command not found. I also tried gmake but it says no make file found. Thank you all so much for your help.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583955076,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MzYxMTYz"},"target":"c0aa30600c53a6a311af6c4584f863ff98011629252567fe00124842b16760de","message":"Thank you both for the help. I now successfully generated the files using cmake-gui and the info in that stackoverflow link. However I am used to the old school ./configure ; make; make install. cmake is new to me. Now that the files are generated using cmake, I still don't see a make file was that supposed to get built? What is the proper make command I am getting command not found. I also tried gmake but it says no make file found. I installed gnu make but it says its not in my path. I am also struggling with certain perl modules. I tried both active perl and strawberry perl with cpan but no luck. I think I am just going to wait for the windows builds I hate hacving to bother you guys. Its so much easier on Linux. I don't know why windows has to be difficult but we all know that's nothing new. Thank you all so much for your help.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583955156,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MzYxNDcw"},"target":"c0aa30600c53a6a311af6c4584f863ff98011629252567fe00124842b16760de","message":"Thank you both for the help. I now successfully configured and generated the files using cmake-gui and the info in that stackoverflow link. However I am used to the old school ./configure ; make; make install. cmake is new to me. Now that the files are generated using cmake, I still don't see a make file was that supposed to get built? What is the proper make command I am getting command not found. I also tried gmake but it says no make file found. I installed gnu make but it says its not in my path. I am also struggling with certain perl modules. I tried both active perl and strawberry perl with cpan but no luck. I think I am just going to wait for the windows builds I hate hacving to bother you guys. Its so much easier on Linux. I don't know why windows has to be difficult but we all know that's nothing new. Thank you all so much for your help.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583955209,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3MzYxNjcw"},"target":"c0aa30600c53a6a311af6c4584f863ff98011629252567fe00124842b16760de","message":"Thank you both for the help. I now successfully configured and generated the files using cmake-gui and the info in that stackoverflow link. However I am used to the old school ./configure ; make; make install. cmake is new to me. Now that the files are generated using cmake, I still don't see a make file was that supposed to get built? What is the proper make command I am getting command not found. I also tried gmake but it says no make file found. I installed gnu make but it says its not in my path. I am also struggling with certain perl modules. I tried both active perl and strawberry perl with cpan but no luck. I think I am just going to wait for the windows builds I hate hacving to bother you guys. Its so much easier on Linux. I don't know why windows has to be difficult but we all know that's nothing new. Thank you all so much for your help. I'll just wait for you guys. You seem to work really fast anyway.","files":null},{"type":4,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583955211,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzEyMDIzNTcxNg=="},"status":2},{"type":3,"author":{"id":"03f4b3bfff955b4c1600c7569fd6d53e3a24ef76"},"timestamp":1583956137,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzgzMzgxMw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597833813"},"message":"https://docs.dfhack.org/en/stable/docs/Compile.html#windows the instructions here should get you going with compiling it on Windows. The generation scripts should create .bat files you can run to compile dfhack (or open to see the commands to do so yourself), and they also create a Visual Studio project file (`.sln`) that you can open in the Visual Studio IDE and compile from there.","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583967181,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5NzkxOTQ5NA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597919494"},"message":"Thanks I didn't want to have to give up for now, i'll read this, more and keep going. Thanks for the link.","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583982029,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5Nzk3OTcwNg==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597979706"},"message":"Well I didnt want to give up and some of you guys inspired me to keep going. I installed the linux subsystem for windows, got a few perl modules going, hit a few barriers and overcame them. This is where I am not though, at a dead stop but the good news is im at 97% .... \n\n\n[ 97%] Built target labormanager\n[ 97%] Linking CXX shared module RemoteFortressReader.plug.so\n/usr/bin/ld: cannot find -lSDL\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/build.make:223: plugins/remotefortressreader/RemoteFortressReader.plug.so] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:5034: plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/all] Error 2\nmake: *** [Makefile:152: all] Error 2\nroot@CORE:/mnt/c/Users/jdion/Downloads/dfhack/build#\n\nPlease let me know if you have an idea how I may continue. I hit problems like this and was able to search for the packages and install them, but now this. what is -ISDL? thanks.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583982029,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3NDMyMzM0"},"target":"8ace7f46a377a73a28faa17ec44047d1366af72b0d3f1af9f643d9bbc393751e","message":"Well I didnt want to give up and some of you guys inspired me to keep going. I installed the linux subsystem for windows, got a few perl modules going, hit a few barriers and overcame them. This is where I am not though, at a dead stop but the good news is im at 97% .... \n\n\n[ 97%] Built target labormanager\n[ 97%] Linking CXX shared module RemoteFortressReader.plug.so\n/usr/bin/ld: cannot find -lSDL\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/build.make:223: plugins/remotefortressreader/RemoteFortressReader.plug.so] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:5034: plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/all] Error 2\nmake: *** [Makefile:152: all] Error 2\nroot@CORE:/mnt/c/Users/jdion/Downloads/dfhack/build#\n\nPlease let me know if you have an idea how I may continue. I hit problems like this and was able to search for the packages and install them because of the linux subsystem i chose debian which is a dist i am comfortable with, but now this. what is -ISDL? thanks.","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583983377,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3NDM1Mzgz"},"target":"8ace7f46a377a73a28faa17ec44047d1366af72b0d3f1af9f643d9bbc393751e","message":"Well I didnt want to give up and some of you guys inspired me to keep going. I installed the linux subsystem for windows, got a few perl modules going, hit a few barriers and overcame them. This is where I am now though, at a dead stop but the good news is im at 97% .... \n\n\n[ 97%] Built target labormanager\n[ 97%] Linking CXX shared module RemoteFortressReader.plug.so\n/usr/bin/ld: cannot find -lSDL\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/build.make:223: plugins/remotefortressreader/RemoteFortressReader.plug.so] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:5034: plugins/remotefortressreader/CMakeFiles/RemoteFortressReader.dir/all] Error 2\nmake: *** [Makefile:152: all] Error 2\nroot@CORE:/mnt/c/Users/jdion/Downloads/dfhack/build#\n\nPlease let me know if you have an idea how I may continue. I hit problems like this and was able to search for the packages and install them because of the linux subsystem i chose debian which is a dist i am comfortable with, but now this. what is -ISDL? thanks.","files":null},{"type":4,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583981407,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQzMTIxMjE0MDMw"},"status":1},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583983824,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5Nzk4ODYyNA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597988624"},"message":"It compiled thanks guys, for the help. I had to install a few SDL packages in the linux subsystem.","files":null},{"type":4,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583983824,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzEyMTI3NTY5Ng=="},"status":2},{"type":3,"author":{"id":"52aea7b2b365ca5dc2709cd5f04cf6cbe9a09d20"},"timestamp":1583983913,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5Nzk4ODkyMw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-597988923"},"message":"Be sure you're following https://docs.dfhack.org/en/stable/docs/Compile.html it has dependencies and instructions for the different platforms.","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583989405,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5ODAwODA4NA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-598008084"},"message":"Yes thurin I realize now i was foolish. I thought compiling it in the windows linux subsystem would get me a binary for windows but I see now that's not how that works. I followed the link you provided, and ran cmake .. after getting over the hurdles I went with the previous posters help, but now I face this. Here is an image of the errors I get while compiling. Are these my errors or? \n\nhttps://imgur.com/a/CmkWrdx","files":null},{"type":6,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583989405,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzU3NDQ3NjMx"},"target":"6e9a86aeef2403734d9c8563f7bdeb90943445eb4e1c2d78feb64a4ee77cef4e","message":"Yes thurin I realize now i was foolish. I thought compiling it in the windows linux subsystem would get me a binary for windows but I see now that's not how that works. I followed the link you provided, and ran cmake .. after getting over the hurdles I went with the previous posters help, but now I face this trying to compile using the .sln built. Here is an image of the errors I get while compiling. Are these my errors or? \n\nhttps://imgur.com/a/CmkWrdx","files":null},{"type":4,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1583989369,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQzMTIxNDE1NjYy"},"status":1},{"type":3,"author":{"id":"52aea7b2b365ca5dc2709cd5f04cf6cbe9a09d20"},"timestamp":1583991576,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5ODAxNjA5Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-598016092"},"message":"I've never tried to compile from inside VS.  It looks like you're using 2019?  I'm pretty sure it requires a 2015 or 2017 toolchain to build.  I'm not sure if that's what's contributing to your compile errors or not.\n\nHere's what I do to build it.  I've installed the 2015 msbuild tools even though I have VS2019 that I use daily.  I follow the command line instructions in the linked compile docs.  From the build\\win64 folder I use the `set_df_path.vbs` to create the DF_PATH.txt files used by the .bat files.  I run `generate-MSVC-release.bat` to create the VC2015 folder with all its cmake and project files.  Then i run `install-release.bat` to compile and install to the chosen path.","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1584023241,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5ODIxNzMyOQ==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-598217329"},"message":"If I remember correctly, you need 2015 support installed for 2017 (and I think that was on top of the everything and the kitchen sink installation option) to work, and assume that goes for 2019 as well. That's on top of the directive to use 2015.\nI can compile within MSVC, but that won't get the stuff to the DF folder, so local compilation there is for testing that modified code compiles, and can be used for a single item that's then moved manually. For the \"real\" compilation passes I use the install-debug bat file. Also note that when modifying XML files I have to use MSVC to clean everything, or the bat file will not rebuild everything that should be rebuilt, resulting in error reports about usage of things that were removed/renamed.","files":null},{"type":3,"author":{"id":"c97a853212428e11afd6d215028dbb9782927a65"},"timestamp":1584034510,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU5ODMxODU2Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-598318563"},"message":"Thanks guys ill keep trying with what you said. I appreciate it.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1585975763,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMxOTg3OTk2MDE="},"added":["build"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1587795779,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYxOTMyOTQwMg==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-619329402"},"message":"I'm going to close this for now, but feel free to let us know if you run into anything else","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1587795779,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzI3MTYzMzUwNA=="},"status":2},{"type":3,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588116044,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMDg5NzczNA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-620897734"},"message":"I've been trying to build DFHack with Visual Studio 2019 and I understand the gist of everything above, I even think I'm very close, but I'm hitting a silly wall.\n\n**What I've done:**\n- I've installed \"MSVC v140 - VS 2015 C++ build tools\" using the Windows installer\n- I've edited CMakeLists.txt to be more permissive with the version (1929 instead of 1919)\n- I've experimented that I can force CMake to use _that_ version, by opening its GUI from the Windows menu, manually selecting the CMakeLists.txt folder, and changing the compiler to \"Visual Studio 15 2017\" in the Configure window (as seen in the Stackoverflow post). \n\nIt seems to run CMake with no errors, and it builds zlib, SDL, etc. A very good start.\n\n**But now I'm trying to run CMakeLists.txt in real conditions for DFHack.\nI follow these steps :** \n- Open the \"Developer Command Prompt for VS2017\"\n- go to (DFHACK REPO)\\build\\win64\\VC2015\n- run generate-MSVC-gui.bat\nAll I need to do at this stage is to open CMake's **\"Configure\"** window, like before, and select **\"Visual Studio 15 2017\"** in the dropdown list.\n\nMy issue : I must be too dumb to understand CMake's user interface, but **when I click on Configure it tries to run CMake _straight away_ instead of opening the window _first_** (the window that lets me choose the compiler). As a result, it fails because it's using the wrong compiler. Duh.\n\nWhat am I doing wrong?","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588116044,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4NTExMzUx"},"target":"d79379ac70a7c985a8d71bfd79fceb014c6242d7443cec1bb41e5120bee117e2","message":"I've been trying to build DFHack with Visual Studio 2019 and I understand the gist of everything above, I even think I'm very close, but I'm hitting a silly wall.\n\n**What I've done:**\n- I've installed \"MSVC v140 - VS 2015 C++ build tools\" using the Visual Studio Installer\n- I've edited CMakeLists.txt to be more permissive with the version (1929 instead of 1919)\n- I've experimented that I can force CMake to use _that_ version, by opening its GUI from the Windows menu, manually selecting the CMakeLists.txt folder, and changing the compiler to \"Visual Studio 15 2017\" in the Configure window (as seen in the Stackoverflow post). \n\nIt seems to run CMake with no errors, and it builds zlib, SDL, etc. A very good start.\n\n**But now I'm trying to run CMakeLists.txt in real conditions for DFHack.\nI follow these steps :** \n- Open the \"Developer Command Prompt for VS2017\"\n- go to (DFHACK REPO)\\build\\win64\\VC2015\n- run generate-MSVC-gui.bat\nAll I need to do at this stage is to open CMake's **\"Configure\"** window, like before, and select **\"Visual Studio 15 2017\"** in the dropdown list.\n\nMy issue : I must be too dumb to understand CMake's user interface, but **when I click on Configure it tries to run CMake _straight away_ instead of opening the window _first_** (the window that lets me choose the compiler). As a result, it fails because it's using the wrong compiler. Duh.\n\nWhat am I doing wrong?","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588116104,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4NTExNDkz"},"target":"d79379ac70a7c985a8d71bfd79fceb014c6242d7443cec1bb41e5120bee117e2","message":"I've been trying to build DFHack with Visual Studio 2019 and I understand the gist of everything above, I even think I'm very close, but I'm hitting a silly wall.\n\n**What I've done:**\n- I've installed \"MSVC v140 - VS 2015 C++ build tools\" using the Visual Studio Installer\n- I've edited CMakeLists.txt to be more permissive with the version (1929 instead of 1919)\n- I've experimented that I can force CMake to use _that_ version, by opening its GUI from the Windows menu, manually selecting the CMakeLists.txt folder, and changing the compiler to \"Visual Studio 15 2017\" in the Configure window (as seen in the Stackoverflow post). \n\nIt seems to run CMake with no errors, and it builds zlib, SDL, etc. A very good start.\n\n**But now I'm trying to run CMakeLists.txt in real conditions for DFHack, with the options from generate-...-.bat.\nI follow these steps :** \n- Open the \"Developer Command Prompt for VS2017\"\n- go to (DFHACK REPO)\\build\\win64\\VC2015\n- run generate-MSVC-gui.bat\nAll I need to do at this stage is to open CMake's **\"Configure\"** window, like before, and select **\"Visual Studio 15 2017\"** in the dropdown list.\n\nMy issue : I must be too dumb to understand CMake's user interface, but **when I click on Configure it tries to run CMake _straight away_ instead of opening the window _first_** (the window that lets me choose the compiler). As a result, it fails because it's using the wrong compiler. Duh.\n\nWhat am I doing wrong?","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588116713,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4NTEyOTk1"},"target":"d79379ac70a7c985a8d71bfd79fceb014c6242d7443cec1bb41e5120bee117e2","message":"I've been trying to build DFHack with Visual Studio 2019 and I understand the gist of everything above, I even think I'm very close, but I'm hitting a silly wall.\n\n**What I've done:**\n- I've installed \"MSVC v140 - VS 2015 C++ build tools\" using the Visual Studio Installer\n- I've edited CMakeLists.txt to be more permissive with the version (1929 instead of 1919)\n- I've experimented that I can force CMake to use _that_ version, by opening its GUI from the Windows menu, manually selecting the CMakeLists.txt folder, and changing the compiler to \"Visual Studio 15 2017\" in the Configure window (as seen in the Stackoverflow post). \n\nIt seems to run CMake with no errors, and it builds zlib, SDL, etc. A very good start.\n\n**But now I'm trying to run CMakeLists.txt in real conditions for DFHack, with the options from generate-...-.bat.\nI follow these steps :** \n- Open the \"Developer Command Prompt for VS2017\"\n- go to (DFHACK REPO)\\build\\win64\\VC2015\n- run generate-MSVC-gui.bat\nAll I need to do at this stage is to open CMake's **\"Configure\"** window, like before, and select **\"Visual Studio 15 2017\"** in the dropdown list.\n\nMy issue : I must be too dumb to understand CMake's user interface, but **when I click on Configure it tries to run CMake _straight away_ instead of opening the window _first_** (the window that lets me choose the compiler). As a result, it fails because it's using the wrong compiler. Duh.\n\nWhat am I doing wrong?\n\nAlternatively I've tried this : \n- Delete CMakeFiles and CMakeCache.txt (to clean up)\n- Open CMake GUI from the Windows menu as an administrator\n- Enter manually the sources folder (DFHACK REPO)\\build\\win64\n- Enter manually the build folder : (DFHACK REPO)\\build\\win64\\foo (I tried VC2015 but somehow CMake picks up on some settings and forces the wrong compiler back)\n- Open the Configure window and select **\"Visual Studio 15 2017\"** from the dropdown\n- Click on Configure\n- Click on Generate\nCMake seems to build everything right and i can open _dfhack.sln_ in _build\\win64\\foo_ but, again, I'm worried that I didn't use the generate-MSVC-gui.bat provided, and that I'm missing some settings such as -G\"Visual Studio 14 Win64\" -T v140_xp -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588117792,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4NTE1NDg4"},"target":"d79379ac70a7c985a8d71bfd79fceb014c6242d7443cec1bb41e5120bee117e2","message":"I've been trying to build DFHack with Visual Studio 2019 and I understand the gist of everything above, I even think I'm very close, but I'm hitting a silly wall.\n\n**What I've done:**\n- I've installed \"MSVC v140 - VS 2015 C++ build tools\" using the Visual Studio Installer\n- I've edited CMakeLists.txt to be more permissive with the version (1929 instead of 1919)\n- I've experimented that I can force CMake to use _that_ version, by opening its GUI from the Windows menu, manually selecting the CMakeLists.txt folder, and changing the compiler to \"Visual Studio 15 2017\" in the Configure window (as seen in the Stackoverflow post). \n\nIt seems to run CMake with no errors, and it builds zlib, SDL, etc. A very good start.\n\n**But now I'm trying to run CMakeLists.txt in real conditions for DFHack, with the options from generate-...-.bat.\nI follow these steps :** \n- Open the \"Developer Command Prompt for VS2017\"\n- go to (DFHACK REPO)\\build\\win64\\VC2015\n- run generate-MSVC-gui.bat\nAll I need to do at this stage is to open CMake's **\"Configure\"** window, like before, and select **\"Visual Studio 15 2017\"** in the dropdown list.\n\nMy issue : I must be too dumb to understand CMake's user interface, but **when I click on Configure it tries to run CMake _straight away_ instead of opening the window _first_** (the window that lets me choose the compiler). As a result, it fails because it's using the wrong compiler. Duh.\n\nWhat am I doing wrong?\n\nAlternatively I've tried this : \n- Delete CMakeFiles and CMakeCache.txt (to clean up)\n- Open CMake GUI from the Windows menu as an administrator\n- Enter manually the sources folder (DFHACK REPO)\\build\\win64\n- Enter manually the build folder : (DFHACK REPO)\\build\\win64\\foo (I tried VC2015 but somehow CMake picks up on some settings and forces the wrong compiler back)\n- Open the Configure window and select **\"Visual Studio 15 2017\"** from the dropdown\n- Click on Configure\n- Click on Generate\nCMake seems to build everything right and i can open _dfhack.sln_ in _build\\win64\\foo_ but, again, I'm worried that I didn't use the generate-MSVC-gui.bat provided, and that I'm missing some settings such as -G\"Visual Studio 14 Win64\" -T v140_xp -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"\n\nAnd indeed, after that, DFHack compiles perfectly in Visual Studio and I can run INSTALL which copies everything to my DF folder (47_04_win) and applies the DFHack patch, **but then Dwarf Fortress.exe is corrupt** and won't run anymore. Proof that I'm missing a critical compiler setting.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1588120071,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMDkyMjk0Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-620922943"},"message":"\u003e **but then Dwarf Fortress.exe is corrupt** and won't run anymore. Proof that I'm missing a critical compiler setting.\n\nWhat error message are you seeing that indicates this? DFHack actually doesn't modify the DF executable at all - it replaces SDL.dll to load itself on Windows. My initial guess is that you're compiling 64-bit DFHack for 32-bit DF, or vice versa, so I would suggest double-checking that the architectures match on your end.\n\nI've never used the CMake GUI before (or built on Windows, for that matter, so I won't be much help there). I would personally prefer the batch scripts in the `build` folder, but it sounds like you've tried those already.","files":null},{"type":3,"author":{"id":"52aea7b2b365ca5dc2709cd5f04cf6cbe9a09d20"},"timestamp":1588123503,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMDkzODk1Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-620938952"},"message":"Not sure if it's helpful, but here's my simplified build.bat file which is really just a combination of the generate-MSVC-release.bat and install-release.bat with minor tweaks like `-T v140` instead of `-T v140_xp`.  I run this from a `VS2015 x64 Native Tools Command Prompt` from the `build\\win64` directory.  DF_PATH.txt contains the path to the Dwarf Fortress install directory.\n\n```\nSET VCTargetsPath=C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\n\nIF EXIST DF_PATH.txt SET /P _DF_PATH=\u003cDF_PATH.txt\nIF NOT EXIST DF_PATH.txt SET _DF_PATH=%CD%\\DF\n\nIF EXIST VC2015 rmdir /S /Q VC2015\n\nmkdir VC2015\ncd VC2015\n\ncmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\" -DBUILD_DEVEL=0 -DBUILD_DEV_PLUGINS=0 -DBUILD_DOCS=1 -DBUILD_STONESENSE=1\n\nmsbuild /m /p:Platform=x64 /p:Configuration=Release INSTALL.vcxproj\n\ncd ..\n```\n\nThis does a clean release install build.\n\nI've never tried building from the gui or VS since this works for me so I'm not much help debugging those routes.","files":null},{"type":3,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588199500,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMTUwMTA3OA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-621501078"},"message":"I'll come back to the \"corrupt\" Dwarf Fortress later. First I want to focus on this compiling.\n\nWhen I try the modifications suggested by thurin inside `VS2015 x64 Native Tools Command Prompt` I get this with a batch file that definitely starts with `SET VCTargetsPath=C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140`\n\n\u003e C:\\XXX\\dfhack\\build\\win64\\VC2015\u003ecmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140p -DCMAKE_INSTALL_PREFIX=\"C:\\XXX\\df_47_04_win\"\n-- Selecting Windows SDK version  to target Windows 10.0.18363.\nCMake Error at CMakeLists.txt:5 (project):\n  Failed to run MSBuild command:\n    MSBuild.exe\n  to get the value of VCTargetsPath:\n    Microsoft (R) Build Engine version 4.8.3752.0\n    [Microsoft .NET Framework, version 4.0.30319.42000]\n    Copyright (C) Microsoft Corporation. All rights reserved.\n    Build started 2020-04-30 00:24:05.\n    Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" on node 1 (default targets).\n    C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n    Done Building Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\n    Build FAILED.\n    \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default target) (1) -\u003e\n    (SetBuildDefaultEnvironmentVariables target) -\u003e\n      C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n        0 Warning(s)\n        1 Error(s)\n    Time Elapsed 00:00:00.52\n  Exit code: 1\n-- Configuring incomplete, errors occurred!","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588199500,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4Nzk0NTU5"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"I'll come back to the \"corrupt\" Dwarf Fortress later. First I want to focus on this compiling.\n\nWhen I try the modifications suggested by thurin ( with a batch file that definitely starts with `SET VCTargetsPath=C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140` ) and then run it inside `VS2015 x64 Native Tools Command Prompt` I get this :\n\n\u003e C:\\XXX\\dfhack\\build\\win64\\VC2015\u003ecmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140p -DCMAKE_INSTALL_PREFIX=\"C:\\XXX\\df_47_04_win\"\n-- Selecting Windows SDK version  to target Windows 10.0.18363.\nCMake Error at CMakeLists.txt:5 (project):\n  Failed to run MSBuild command:\n    MSBuild.exe\n  to get the value of VCTargetsPath:\n    Microsoft (R) Build Engine version 4.8.3752.0\n    [Microsoft .NET Framework, version 4.0.30319.42000]\n    Copyright (C) Microsoft Corporation. All rights reserved.\n    Build started 2020-04-30 00:24:05.\n    Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" on node 1 (default targets).\n    C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n    Done Building Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\n    Build FAILED.\n    \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default target) (1) -\u003e\n    (SetBuildDefaultEnvironmentVariables target) -\u003e\n      C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n        0 Warning(s)\n        1 Error(s)\n    Time Elapsed 00:00:00.52\n  Exit code: 1\n-- Configuring incomplete, errors occurred!\n\nI don't understand why CMake and Windows are confused about the correct MSBuild","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588199549,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4Nzk0NzEz"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"I'll come back to the \"corrupt\" Dwarf Fortress later. First I want to focus on this compiling.\n\nWhen I try the modifications suggested by thurin ( with a batch file that definitely starts with `SET VCTargetsPath=C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140` ) and then run it inside `VS2015 x64 Native Tools Command Prompt` I get this :\n\n\u003e C:\\XXX\\dfhack\\build\\win64\\VC2015\u003ecmake ..\\\\..\\\\.. -G\"Visual Studio 14 Win64\" -T v140p -DCMAKE_INSTALL_PREFIX=\"C:\\XXX\\df_47_04_win\"\n-- Selecting Windows SDK version  to target Windows 10.0.18363.\nCMake Error at CMakeLists.txt:5 (project):\n  Failed to run MSBuild command:\n    MSBuild.exe\n  to get the value of VCTargetsPath:\n    Microsoft (R) Build Engine version 4.8.3752.0\n    [Microsoft .NET Framework, version 4.0.30319.42000]\n    Copyright (C) Microsoft Corporation. All rights reserved.\n    Build started 2020-04-30 00:24:05.\n    Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" on node 1 (default targets).\n    C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n    Done Building Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\n    Build FAILED.\n    \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default target) (1) -\u003e\n    (SetBuildDefaultEnvironmentVariables target) -\u003e\n      C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n        0 Warning(s)\n        1 Error(s)\n    Time Elapsed 00:00:00.52\n  Exit code: 1\n-- Configuring incomplete, errors occurred!\n\nI don't understand why CMake and Windows are confused about the correct MSBuild","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588201030,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4Nzk4ODM5"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"I'll come back to the \"corrupt\" Dwarf Fortress later. First I want to focus on this compiling.\n\nWhen I try the modifications suggested by thurin ( with a batch file that definitely starts with `SET VCTargetsPath=C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140` ) and then run it inside `VS2015 x64 Native Tools Command Prompt` (I tried both as admin and just as myself ) I get this :\n\n\u003e C:\\XXX\\dfhack\\build\\win64\\VC2015\u003ecmake ..\\\\..\\\\.. -G\"Visual Studio 14 Win64\" -T v140p -DCMAKE_INSTALL_PREFIX=\"C:\\XXX\\df_47_04_win\"\n-- Selecting Windows SDK version  to target Windows 10.0.18363.\nCMake Error at CMakeLists.txt:5 (project):\n  Failed to run MSBuild command:\n    MSBuild.exe\n  to get the value of VCTargetsPath:\n    Microsoft (R) Build Engine version 4.8.3752.0\n    [Microsoft .NET Framework, version 4.0.30319.42000]\n    Copyright (C) Microsoft Corporation. All rights reserved.\n    Build started 2020-04-30 00:24:05.\n    Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" on node 1 (default targets).\n    C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n    Done Building Project \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\n    Build FAILED.\n    \"C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj\" (default target) (1) -\u003e\n    (SetBuildDefaultEnvironmentVariables target) -\u003e\n      C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Cpp.Current.targets(64,5): error MSB4062: The \"SetEnv\" task could not be loaded from the assembly C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.Build.CppTasks.Common.dll. Could not load file or assembly 'Microsoft.Build.Utilities.Core, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. Confirm that the \u003cUsingTask\u003e declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\XXX\\dfhack\\build\\win64\\VC2015\\CMakeFiles\\3.17.1\\VCTargetsPath.vcxproj]\n        0 Warning(s)\n        1 Error(s)\n    Time Elapsed 00:00:00.52\n  Exit code: 1\n-- Configuring incomplete, errors occurred!\n\nhttps://stackoverflow.com/questions/52569137/error-msb4062-the-setenv-task-could-not-be-loaded-from-the-assembly\n\nI don't understand why CMake and Windows are confused about the correct MSBuild to use. I'm in the right terminal, with the right toolset installed, with the right env. variable set, and I give the right options to CMake.\n\nI can't even build anymore like I did yesterday with some half-assed options and VS2017!","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588201960,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4ODAxMzM1"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"EDIT : \n\nThanks to Thurin's advice, I now understand better the meaning of the parameters.\n\nTwo possible roads if you are like me a user of **Visual Studio 2019**\n\n**Use VS 2017 tools**\n- In the VS Installer, install component **VC++ 2017 version 15.9 v14.16 latest v141 tools**\n- Open **Developer Command Prompt for VS 2017** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 15 2017 Win64\" -T v141 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\n\n\n**Use VS 2015 tools**\n- In the VS Installer, install component **VC++ 2015.3 v14.00 (v140) toolset for desktop**\n- Open **VS2015 x64 native tools Command Prompt** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\nI will now go back to trying to build release and see if it still makes DF \"corrupt\" for me like it did before.","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588202031,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4ODAxNTEx"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"EDIT : \n\nThanks to Thurin's advice, I now understand better the meaning of the parameters.\n\nTwo possible roads if you are like me a user of **Visual Studio 2019**\n\n**Use VS 2017 tools**\n- In the VS 2019 Installer, install component **VC++ 2017 version 15.9 v14.16 latest v141 tools**\n- Open **Developer Command Prompt for VS 2017** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 15 2017 Win64\" -T v141 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\n\n\n**Use VS 2015 tools**\n- In the VS 2019 Installer, install component **VC++ 2015.3 v14.00 (v140) toolset for desktop**\n- Open **VS2015 x64 native tools Command Prompt** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\nI will now go back to trying to build release and see if it still makes DF \"corrupt\" for me like it did before.","files":null},{"type":6,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588202716,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4ODAzNDEz"},"target":"14955a930168619ac65f43ca994f00f2183c3e4b508bef4972873ae104f92f23","message":"EDIT : \n\nThanks to Thurin's advice, I now understand better the meaning of the parameters.\n\nTwo possible roads if you are like me a user of **Visual Studio 2019**\n\n**Use VS 2017 tools**\n- In the VS 2019 Installer, install component **VC++ 2017 version 15.9 v14.16 latest v141 tools**\n- Open **Developer Command Prompt for VS 2017** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 15 2017 Win64\" -T v141 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\n\n\n**Use VS 2015 tools**\n- In the VS 2019 Installer, install component **VC++ 2015.3 v14.00 (v140) toolset for desktop**\n- Open **VS2015 x64 native tools Command Prompt** (as an admin, I think?)\n- go to C:/XXX/dfhack/build\\win64\n- run set_df_path.vbs\n- Edit either of the generate-MSVC-XXX.bat files and do the following changes : \n    `cmake ..\\..\\.. -G\"Visual Studio 14 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\"`\n\nI personally chose the VS2017 approach as I was experiencing this (unexplained) issue with the VS 2015 approach : https://stackoverflow.com/questions/52569137/error-msb4062-the-setenv-task-could-not-be-loaded-from-the-assembly\n\nI will now go back to trying to build release and see if it still makes DF \"corrupt\" for me like it did before.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1588208464,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMTU1MDQ5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-621550490"},"message":"Worth noting that @ragundo recently ran into an issue where DFHack would crash on startup when using the v141 compiler (2017), and switching to v140 (2015) fixed it. I'm not sure if you will run into the same issue, but I would encourage using 2015 if you're able to.","files":null},{"type":3,"author":{"id":"d43bbc88f959d3b3a7dc2c667ab022148be6266a"},"timestamp":1588229076,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMTY0NDQ5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-621644490"},"message":"As @lethosor says, until the latest release I was able to use toolset v141 with DFhack sucessfully, but I needed **to use now toolset v140** for making it work becasue if not, DFhack crashed inmediatily after start.\nI have VS2017 installed in my system.\n\nThe workflow is always the sama:\n\n- run set_dfpath.vbs\n- generate-MSVC-minimal.bat\n- build-debug.bat\n- install-debug.bat","files":null},{"type":6,"author":{"id":"d43bbc88f959d3b3a7dc2c667ab022148be6266a"},"timestamp":1588229076,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4ODY2MzA5"},"target":"8afa262b10a40dfcc0ca927866958c2ab668bf780710457b8e214a99d4ecda7f","message":"As @lethosor says, until the latest release I was able to use toolset v141 with DFhack sucessfully, but I needed **to use now toolset v140** for making it work becasue if not, DFhack crashed inmediatily after start.\nI have VS2017 installed in my system.\n\nThe workflow is always the sama:\n\n- run set_dfpath.vbs\n- generate-MSVC-minimal.bat\n- build-debug.bat\n- install-debug.bat\n\nAnd my generate-MSVC-minimal.bat\n\n`cmake ..\\..\\.. -G\"Visual Studio 15 2017 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\" -DBUILD_DEVEL=0 -DBUILD_DEV_PLUGINS=0 -DBUILD_STONESENSE=0 -DFHACK_BUILD_ARCH=64    -DCMAKE_BUILD_TYPE:string=RelWithDebInfo`","files":null},{"type":6,"author":{"id":"d43bbc88f959d3b3a7dc2c667ab022148be6266a"},"timestamp":1588229299,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6MzY4ODY2OTg5"},"target":"8afa262b10a40dfcc0ca927866958c2ab668bf780710457b8e214a99d4ecda7f","message":"As @lethosor says, until the latest release I was able to use toolset v141 with DFhack sucessfully, but I needed **to use now toolset v140** for making it work becasue if not, DFhack crashed inmediatily after start.\nI have VS2017 installed in my system.\n\nThe workflow is always the sama:\n\n- run set_dfpath.vbs\n- generate-MSVC-minimal.bat\n- build-debug.bat\n- install-debug.bat\n\nAnd my generate-MSVC-minimal.bat\n\n`cmake ..\\..\\.. -G\"Visual Studio 15 2017 Win64\" -T v140 -DCMAKE_INSTALL_PREFIX=\"%_DF_PATH%\" -DBUILD_DEVEL=0 -DBUILD_DEV_PLUGINS=0 -DBUILD_STONESENSE=0 -DFHACK_BUILD_ARCH=64    -DCMAKE_BUILD_TYPE:string=RelWithDebInfo`\n\nI use fantastic Visual Studio Code to do all the work in Windows and only use Visual Stuido 2017 for debugging.\nFor using Visual Stuido Code, just start it, open the dfhack folder, open a Terminal windows and change to the build/win64 directory.\nFrom there you can run all the .bat files and see the cmake/compiler output, with the advantage that you can open error lines in the editor. Prety dope.","files":null},{"type":3,"author":{"id":"3ceb5b4b603a055a141cea9dca6faa16d5d5ceb4"},"timestamp":1588283239,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDYyMjEzMjc2Nw==","github-url":"https://github.com/DFHack/dfhack/issues/1518#issuecomment-622132767"},"message":"I myself have better luck with Visual Studio 2017 (for the reasons I explained, which have nothing to do with DFHack but more with Windows mysteries). After the initial generate using CMake, I then build inside Visual studio and also run the PACKAGE script from VS. I don't seem to encounter any issue.","files":null}]}