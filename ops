{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480206182,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg3MjcyNTUwMg=="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480206182,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg3MjcyNTUwMw=="},"added":["crash/hang"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480206182,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg3MjcyNTUwNA=="},"added":["ruby"],"removed":[]},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1480216842,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzA5OTkxMg==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-263099912"},"message":"I am seriously considering rewriting autofarm in C++, just because I use it so much and I don't want to dependent on Ruby for it to work. It's not like it would be hard to do in C++.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480218366,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzEwMDU4MQ==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-263100581"},"message":"Hopefully this sort of thing happens rarely (besides this, the only time I remember having to fix Ruby support was when OS X stopped distributing Ruby 1.8, before the ruby plugin supported 2.0), but I won't object if you decide writing it in C++ would be better.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480969708,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg4MjY2NDUyNg=="},"added":["64-bit"],"removed":[]},{"type":3,"author":{"id":"c0237b75674fe8a91a72da30feaf556b2883922e"},"timestamp":1481602828,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjYzNjg3Nw==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266636877"},"message":"I believe I'm getting the same crash with _source_","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481608201,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjY1MTUyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266651525"},"message":"Yeah, this issue is still open.\n\nCan you try the commands listed in the first checklist and see if they crash?","files":null},{"type":3,"author":{"id":"c0237b75674fe8a91a72da30feaf556b2883922e"},"timestamp":1481672113,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njg5NjU1MQ==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266896551"},"message":"Some testing. The info from adaptation might show a way forward.\n\nexterminate - crashes\ngrowcrops - crashes\nautofarm - crashes\nban-cooking - crashes\ndeathcause - crashes\nadaptation - does not immediately crash on just running \"adaptation\". Typing \"adaptation\" show gives error messages but \"adaptation show him\" crashes\nsource - crashes\n\nI would also not that sources gave me an error about not having ruby framework (I don't have the exact error anymore) in the old version of dfhack. I could load that up if it would be helpful. The crash is immediate with no error message or other feedback.\n\nAlso tested\n\nautounsuspend - without options gives \"stopped\" adding start causes crash","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481672351,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njg5NzI5Nw==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266897297"},"message":"You definitely have a ruby library. 0.43.05-alpha1 didn't, but alpha2 does. \n\nCan you try the two commands in the first checklist from above?\n\n- `rb df.curview.feed(:SELECT)`\n- `rb p df.world`","files":null},{"type":3,"author":{"id":"c0237b75674fe8a91a72da30feaf556b2883922e"},"timestamp":1481672594,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njg5ODAzOA==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266898038"},"message":"Yes, I understood that was the difference. Just wanted to add the info in case it helps people understand where things are.\n\nrb df.curview.feed(:SELECT) - crashes\nrb p df.world - crashes\n\nfyi just running rb does not crash.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481672834,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njg5ODc0NA==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266898744"},"message":"Yeah, `rb` by itself doesn't do anything. That's good to know, though. I was hoping it would be just one, but it sounds like a couple things are issues.\n\nWhat about stuff like `rb p df.ui`, `rb p df.current_weather`, etc.?","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1481673295,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjkwMDEwMg==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266900102"},"message":"autounsuspend with no options doesn't access anything in DF memory; it just checks the value of a variable in ruby namespace. But autounsuspend stop calls df.onupdate_register, and that's presumably where the crash occurs.\n\nThere's obviously still a problem with ruby calling at least some entry points in the DF main code, including apparently STL utility methods (which are used by the Ruby formatters for the world object, for example). \n\nDo relatively \"simple\" global variables (e.g. `rb p df.cursor`, `rb p df.cur_year`) work?","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481673900,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjkwMTg0Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266901843"},"message":"[onupdate_register](https://github.com/DFHack/dfhack/blob/c8b7dbd2553baa2a98f2ef11e76f3a4ebe855be3/plugins/ruby/ruby.rb#L78) just calls a few functions in ruby.cpp (setting a few onupdate_ variables):\n```rb\n        def onupdate_register(descr, ticklimit=nil, initialtickdelay=0, \u0026b)\n            raise ArgumentError, 'need a description as 1st arg' unless descr.kind_of?(::String)\n            @onupdate_list ||= []\n            @onupdate_list \u003c\u003c OnupdateCallback.new(descr, b, ticklimit, initialtickdelay)\n            DFHack.onupdate_active = true\n            if onext = @onupdate_list.sort.first\n                DFHack.onupdate_minyear = onext.minyear\n                DFHack.onupdate_minyeartick = onext.minyeartick\n            end\n            @onupdate_list.last\n        end\n```\n\n[cur_year and related globals](https://github.com/DFHack/df-structures/blob/d08339d3ce144152cdbb703462d53231b282757d/symbols.xml#L1166) look reasonable, although I don't know if they're *right*:\n\n```xml\n        \u003cglobal-address name='cur_year' value='0x141904248'/\u003e\n        \u003cglobal-address name='cur_year_tick' value='0x141904240'/\u003e\n        \u003cglobal-address name='cur_year_tick_advmode' value='0x141884110'/\u003e\n        \u003cglobal-address name='cur_season_tick' value='0x1413030d4'/\u003e\n        \u003cglobal-address name='cur_season' value='0x1413030e5'/\u003e\n```\n\nCan you try printing those (`rb p df.cur_year`, etc.) and see if they're right?\n\nEdit: @ab9rf confirmed a crash with `rb p df.cur_year` on IRC.","files":null},{"type":3,"author":{"id":"c0237b75674fe8a91a72da30feaf556b2883922e"},"timestamp":1481683347,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjkyNjkyNg==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266926926"},"message":"Okay, here is the next round of testing. \n\nrb p df.cursor - crash, with our without a cursor ('k')\nrb p df.ui - crash \nrb p df.cur_year - crash\nrb p df.current_weather - crash\nrb p df.cur_year_tick - crash\nrb p df.cur_year_tick_advmode - crash\nrb p df.cur_season - crash\nrb p df.cur_season_tick - crash\n\nI'm sorry to say it looks like they are all off. I only tested on a single save game but I have no reason to believe that anything is wrong with it. All of the lua stuff I've used is working great and dfhack doesn't otherwise seem to be having issues. Is there a log file I could go looking for to see if that provides any additional insight? Did I miss anything you wanted tested?\n\nAnd now back to a bit of _playing_ df! Cheers","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481683641,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjkyNzY0Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266927642"},"message":"Oh, yeah, we figured out the issue with globals on IRC, so I'm not surprised that all of those are affected. Basically, somewhere in the function that translates global names to addresses, the upper 32 bits are truncated (e.g. `0x1413030e5` becomes `0x413030e5`), which is bad.","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1481685404,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2NjkzMTUwMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266931501"},"message":"I just spent some time with the MSVC debugger poking around in this. The problem is the use of `rb_uint2inum` to translate pointers to a Ruby value (e.g. https://github.com/DFHack/dfhack/blob/develop/plugins/ruby/ruby.cpp#L583). This is presumably because in win64, \"long\" is 32 bits, and thus the \"long long\" type is required to get all 64 bits in win64. (I'm told that on linux64, \"long\" is 64 bits.) The result is to truncate pointers to 32 bits when they're converted to a Ruby value, which makes them invalid for later reference.\n\nI was able to make a small bit of progress by replacing `rb_uint2inum` to `rb_ull2inum` in that one place. With this change, DFHack.get_global_address returns the full 64-bit address. But there are other places in ruby.cpp that also need to be changed, presumably to use `rb_num2ull` (instead of `rb_num2ulong`) everywhere that pointers are being handled. Furthermore, this might result in code that doesn't work properly on linux.\n\nI'm not up for trying to test this further tonight, so I'll leave this here for anyone who wants to pick it up, or I'll try to work on it further either later tonight or tomorrow. Someone willing to test whether using `rb_ull2inum` and `rb_num2ull` cause breakage on linux would be helpful.\n\np.s. Thanks @lethosor for your help with this on irc.","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1481690215,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njk0MDYxNA==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266940614"},"message":"I've made the changes suggested above and with these changes ruby appears to work on win64. I was able to do `rb p df.cur_year` and `rb p df.world` just fine, and starting autofarm in a loaded world worked without any trouble at all.\n\nI have the modifications in a branch of my repo, at 36c12d86a013bd5b88df87daa5764ccde30c19b7.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481692922,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njk0NTU5Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266945592"},"message":"Those changes look like they work on OS X (both builds), so they ought to work on Linux too.\n\nInteresting issue: `rb df.curview.feed(:SELECT)` is resulting in an error for me, and `rb df.curview.feed(0)` crashes, even before your changes. I don't remember that happening in 0.43.05-alpha2.\n\nEdit: that's because the actual method is feed_keys, which works just fine.","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1481695687,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njk1MTI0NA==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266951244"},"message":"All of the scripts named earlier in this issue work (or at least do not crash) for me on win64 with the patch in #1041","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481695874,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2Njk1MTYzOA==","github-url":"https://github.com/DFHack/dfhack/issues/1023#issuecomment-266951638"},"message":"Cool, I'll close this. Hopefully we can get a build up fairly soon.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1481695874,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50ODkzMTQ5MjQ1"},"status":2}]}