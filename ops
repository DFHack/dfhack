{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1479218040,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDg1OTQyMjk2NQ=="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1479227846,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDY5MzQxMw==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260693413"},"message":"This is closely related to the problem in #1014 and has to do with how Toady changed the way map designations are handled, somewhere in 0.40.x. Prior to 0.40.x, map designations persisted and map-related jobs (digging, tree cutting, etc) were spawned when a dwarf with the relevant labor enabled went looking for a job. Sometime after 0.34.11, Toady changed this: on unpause, map designations that become set while the game is paused are immediately cleared and converted into job postings. Setting new ones after that will be converted again into more job postings. The in-game map renderer presumably checks the job posting queue when it determines if a map square should be shown as \"designated\".\n\nThe jobs are not posted to df.global.world.job_list initially; they're posted instead to df.global.world.job_postings. They get moved to the job list when a dwarf is actually assigned to the posting.\n\nGetplants (and also autochop and likely many other plugins) are still relying on the map designations; anything that does so will probably behave unreliably. Anything that wants to _query_ map designations probably needs now to also scan both the job posting list and the job list for pending jobs. If Toady has a lookaside accelerator for this, I'm not aware of it.","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1479228891,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDY5ODYwNg==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260698606"},"message":"Thanks for the background info. Interesting that the jobs appear in the job_list first. It definitely seems you need to scan both job lists and the map (in case the command is rerun while still paused). Interestingly enough, though, my modified script correctly blocked duplicating commands by scanning the job_list (only), even though I've only got a single wood cutter. I'm not saying the description is wrong, merely suggest that it might be a little more convoluted than a straight active assignment (such as some kind of validation having been performed. In the case of wood cutting, the cutter would need to \"see\" all legal cutting orders to select which one to tackle next). Regardless, checking both lists seems like the sound thing to do.","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1479229617,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDcwMjI0MQ==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260702241"},"message":"I'm not clear on when jobs from from the posting list to the job list. My research (related to bring labormanager up to speed on 43.03) is that jobs will appear on the posting list immediately, and will move to the job list if there is a unit that might possibly do them. \n\nThere's a similar behavior with respect to hauling jobs now; before, they only appeared on the job list when a unit was actually assigned; now, they appear when a unit is available to whom they might be assigned. But if there are no unit with the requisite labor enabled, they appear not to get spawned.\n\nSomeone probably needs to dig through DF itself to understand exactly what happens when the core routines controlled by the \"process_dig\" and \"process_jobs\" global flags are called.","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1479230316,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDcwNTU4MQ==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260705581"},"message":"That description would explain what I've seen. Thanks.","files":null},{"type":4,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1479230316,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50ODU5NzU1OTM3"},"status":2},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1479230853,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDcwODE2NQ==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260708165"},"message":"I wouldn't close this just yet. We probably should add some utility routines to the DFHack core to deal with this issue, since this is an issue that arises across multiple plugins.","files":null},{"type":4,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1479231054,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQ4NTk3NzQ3ODc="},"status":1},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1479231397,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MDcxMDY5Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1018#issuecomment-260710692"},"message":"Oops!\nI thought \"Close and comment\" meant close the window and issue a comment...\n\nA utility would be useful if a sufficiently general way of searching for matches can be found. If exact matches is all that's required it might be easy, but if it should take partial matches and other types of clashes into consideration it might be messy. Then that utility would still need to be called from each plugin.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1482903879,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDkwNjI0MDc4MA=="},"added":["labormanager"],"removed":[]}]}