{"version":1,"ops":[{"type":1,"author":{"id":"a4006227b625a4120e62a1f31f0fab6fa5463dc3"},"timestamp":1446430729,"metadata":{"github-id":"MDU6SXNzdWUxMTQ1MTE0NDE=","github-url":"https://github.com/DFHack/dfhack/issues/721","origin":"github"},"title":"Automaterials: Will build constructed floor over existing constructed floor with 'box select'","message":"I noticed a bug in automaterials:\n\nIn 'default' mode the game does not allow constructing floor over already constructed floor - you get an 'invalid' indicator and a 'Construction present' error:\n\n![floor-on-floor-default](https://cloud.githubusercontent.com/assets/324067/10872193/918c3462-80fc-11e5-88c3-69618ab7f3ea.png)\n\nIf you use automaterials' \"box select\" setting, it will happily create construction jobs over the already existing constructed floor:\n![floor-on-floor-box-select](https://cloud.githubusercontent.com/assets/324067/10872202/b753ad56-80fc-11e5-901e-9daa997c0f0a.png) ![floor-on-floor-box-select-final](https://cloud.githubusercontent.com/assets/324067/10872203/ba9f92d6-80fc-11e5-8ad9-2c4ab6d026ad.png)\n\nAutomaterials _should_ exclude existing construction (as it does with walls for example).\n\nThis bug stems from the fact, that automaterials \n1. Does not check the base tiletypes\n2. Only checks if the layer below is a wall - _not_ if it is a **constructed** wall\n3. And even if a check for a **constructed wall** in the layer below is made, we'd still be able to rebuild a constructed floor on top of that ad infinitum\n\nI've hacked together a small fix for 1 (and 2) in 092979f3624d9029c14d77688a85746aa1a245ad (also I renamed some variables to avoid confusion due to variable name reuse). With this I think checking for 2 becomes unnecessary since the 'constructed floor over natural floor' situation gets caught by it.\n\n![floor-on-floor-partialfix](https://cloud.githubusercontent.com/assets/324067/10873105/5e55b4fc-810f-11e5-9a2a-500759391d2e.png)\nIt's mostly some cannibalized code from `probe` - no idea if there are better ways to query the base tiletype than using MapCache.\n\n---\n\n(3) is a **really really** nasty can of worms. I don't see any _simple_ way to prevent building an infinite number of constructed floors above a constructed wall, because the tile types \u0026 shapes are completely identical if it is just a wall, or a wall with a floor on top. \n\nCurrently the **only** differentiating feature I see is in `d`, `n` (\"Designate\", \"Remove Construction\"): Tiles where automaterials _should_ allow floor construction are colored red, tiles where it should disallow it are colored green. I don't know if there's a way to query that information, or if we could try designating tiles, see what takes, and work with that, or if the game happily takes invalid designations.","files":null}]}