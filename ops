{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1581605898,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4NTc5ODc2MA==","github-url":"https://github.com/DFHack/dfhack/issues/1495#issuecomment-585798760"},"message":"The ifdef is probably from when we were using Visual Studio 2010 on Windows. Was this a clean build? I don't know why nobody has encountered this before - BuildMaster builds seem to be working fine.","files":null},{"type":3,"author":{"id":"8aef4ad26d2b4762925d15b4fa91036a55d7d34c"},"timestamp":1581606820,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4NTgwNzA3Mg==","github-url":"https://github.com/DFHack/dfhack/issues/1495#issuecomment-585807072"},"message":"BuildMaster does release builds, right? I only had this issue with a 32 bits debug build. 64 bits debug or 32 bits release worked.\n\nI am not sure what you call \"clean\", this was on my desktop computer with fedora 31 (gcc 9.2.1), not a vm.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1581607092,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4NTgwODc4NQ==","github-url":"https://github.com/DFHack/dfhack/issues/1495#issuecomment-585808785"},"message":"Oh, I guess that could be it, but I still don't really have a good explanation. Maybe MAX_LAYERS is only getting inlined on release builds?\nIf you're able to fix this properly, BuildMaster should tell you if release builds still build (although if this issue only comes up at runtime, that might not be enough).","files":null},{"type":6,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1581607092,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDM1MTI2OTc0MA=="},"target":"89f759afc39151dc951b2f69472fcf302a482c9645df57eb83113f2072e8d052","message":"Oh, I guess that could be it, but I still don't really have a good explanation. Maybe MAX_LAYERS is only getting inlined on release builds?\nIf you're able to fix this properly, BuildMaster should tell you if release builds still build (although if this issue only comes up at runtime, that might not be enough).\n\nEdit: by \"clean\", I mean a non-incremental build. CMake _should_ rebuild whatever files need to be rebuilt when something changes, but just in case it didn't work, \"ninja clean\" or \"make clean\" will let you start from scratch. I don't think that's really necessary in this case, though.","files":null},{"type":3,"author":{"id":"8aef4ad26d2b4762925d15b4fa91036a55d7d34c"},"timestamp":1581610058,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4NTgzNTQwNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1495#issuecomment-585835405"},"message":"\u003e Oh, I guess that could be it, but I still don't really have a good explanation. Maybe MAX_LAYERS is only getting inlined on release builds?\n\nI looked at the usage of MAX_LAYERS, and tried that:\n```diff\n--- a/library/modules/MapCache.cpp\n+++ b/library/modules/MapCache.cpp\n@@ -1231,7 +1231,7 @@ MapExtras::MapCache::MapCache()\n \n         memset(biomes[i].layer_stone, -1, sizeof(biomes[i].layer_stone));\n \n-        for (size_t j = 0; j \u003c std::min\u003csize_t\u003e(BiomeInfo::MAX_LAYERS,layer_mats[i].size()); j++)\n+        for (size_t j = 0; j \u003c std::min\u003csize_t\u003e(size_t(BiomeInfo::MAX_LAYERS),layer_mats[i].size()); j++)\n         {\n             biomes[i].layer_stone[j] = layer_mats[i][j];\n\n```\n\nAnd it fixed the issue. My understanding, which can be wrong, is that std::min takes a lvalue reference so MAX_LAYERS need to be defined. If I cast MAX_LAYERS, the casted rvalue is created at compile time, and MAX_LAYERS no longer needs to be a defined.\n\nIn some setup, std::min may be inlined and optimized such that a lvalue is no longer needed.\n\nUnless you want to be very careful to never use MAX_LAYERS as an lvalue, I think it is best to define it.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1581702855,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwMzk2MTUwMTE="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1581702855,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwMzk2MTUwMTI="},"added":["build"],"removed":[]},{"type":4,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1581751379,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzA0MDcyOTI4Mw=="},"status":2}]}