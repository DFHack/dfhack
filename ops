{"version":1,"ops":[{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457269804,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDU3OTIzMzIyNQ=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457269804,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDU3OTIzMzIyNg=="},"added":["internal"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1457280220,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MjkyMTA5OA==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-192921098"},"message":"It's fine with me as long as it's possible to just build the components we need, to avoid significantly increasing compile time.\nI also recall some issues with GCC 4.5, although the [documentation](http://www.boost.org/doc/libs/1_60_0/libs/log/doc/html/log/installation.html) claims that Boost 1.60 is compatible with it, so those could have just been issues with a project that used Boost.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457280853,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MjkyMjA4MQ==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-192922081"},"message":"Most of boost is header-only and designed to compile fast so it should be easy to only build the components we need.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457295912,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5Mjk4MjU2NA==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-192982564"},"message":"The more I think about it, the more I think that we should just have it as a prerequisite instead of a submodule. Fundamentally that's how we're going to use it and it doesn't make sense to download the history of every boost component we use.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1457301510,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MzAwNDcwOA==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-193004708"},"message":"With that, I'm most concerned about there being less standardization across platforms, or even across machines. Most of our current prerequisites are needed in the compilation process but don't have a direct impact on the binary itself - e.g. a difference between Perl 5 and Perl 6 is highly unlikely to actually affect the behavior of DFHack, but Boost bugs could cause issues that are really hard to track down, unless we know the exact Boost version (or versions of components) used to compile every DFHack build. From what I understand, some components also require runtime libraries, which I suppose would make diagnosis easier but would run into major portability issues in some cases if those libraries are compiled separately from DFHack.\nIt seems that what we've usually done for these sorts of dependencies (like Lua, protobuf, jsoncpp, etc.) is bundle them as normal files in the depends/ folder. It's not great, since we have to update them manually, although that's not a huge issue for things we don't patch. It would also open up possibilities for patches, though, and it's likely that we'd need to make at least some CMakeLists.txt changes. It also allows us to ignore the history of dependencies which we aren't involved in developing.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457305214,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MzAxMTg5Mw==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-193011893"},"message":"As long as we require a particular version of boost it should be fine. Most of the boost libraries are header-only.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457306302,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MzAxNDU3Mg==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-193014572"},"message":"PS: uncompressed, boost is about 437 MB, and 100 MB of that is just the headers. It seems wrong at a design level to inline all that into DFHack. I could still be convinced though.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1457332009,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5MzEyMTc5MA==","github-url":"https://github.com/DFHack/dfhack/issues/837#issuecomment-193121790"},"message":"I think we could just include the headers we use. That way the version would be fixed and constant throughout all the possible builds","files":null},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457794300,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDU4NzQyNjU3Nw=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1457891717,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDU4NzkwMTUzMQ=="},"added":["new tool"],"removed":[]}]}