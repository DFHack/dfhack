{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1597848801,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM2NzExOTAzNTg="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1597848801,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM2NzExOTAzNjE="},"added":["structures"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1597848865,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NjQ3NjUxMw==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-676476513"},"message":"That looks like uninitialized memory to me. Thanks for the report! Any idea if `creation_event` is correct?","files":null},{"type":3,"author":{"id":"d4ba99f16422e9377de56dab81d2b84415f00388"},"timestamp":1597849789,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NjQ4NTcyOA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-676485728"},"message":"I tested 2 `creation_event` tags and both are referring to `masterpiece_created_item` type events. So I think they are correct.","files":null},{"type":3,"author":{"id":"5b4ef2a37ff6a09cd6460b1afc956a83d4389d39"},"timestamp":1597865814,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3NjYyMDc5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-676620790"},"message":"FYI - I'm not sure if it helps, but here is the world save\n[region4_4th_embark.zip](https://github.com/DFHack/dfhack/files/5098859/region4_4th_embark.zip)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1597983866,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODAzMDUyMg==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678030522"},"message":"The save definitely does help, thanks! The first world I tried locally had no events of this type.\n\nThe corresponding creation event in this case (108560) does exist, and corresponds to the same site, but its `item_id` is garbage. I don't know how to track it down to figure out if there's something weird about the item.\n```\n[DFHack]# lua ~world.history.events[108560]\n\u003chistory_event_masterpiece_created_itemst: 0x7fffb36df2e0\u003e\nyear                   \t = 157\nseconds                \t = 396275\nflags                  \t = \u003cBitArray\u003c\u003e: 0x7fffb36df2f0\u003e\nid                     \t = 108560\nmaker                  \t = 11527\nmaker_entity           \t = 1582\nsite                   \t = 395\nitem_type              \t = 16\nitem_subtype           \t = 0\nmat_type               \t = 57\nmat_index              \t = -1\nitem_id                \t = 11338150\n\n\n[DFHack]# lua ~world.history.events[113917]\n\u003chistory_event_masterpiece_lostst: 0x7fffb3778570\u003e\nyear                   \t = 158\nseconds                \t = 334418\nflags                  \t = \u003cBitArray\u003c\u003e: 0x7fffb3778580\u003e\nid                     \t = 113917\ncreation_event         \t = 108560\nhistfig                \t = 1953722220\nsite                   \t = 395\nmethod                 \t = 0\n```\n\nI'm tempted to say that this is something wrong with this specific world, possibly minor corruption of some kind, because I haven't seen any other abnormal IDs. However, `0` being so common makes me think that `histfig` might not be an ID after all, let alone a histfig ID, because those almost always use `-1` to indicate N/A (and 0 is a valid histfig ID!). For reference, here are all of the masterpiece_lost events in this world:\n```\nid = 71949   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71950   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71951   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71952   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71953   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71954   histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 71955   histfig = 4633    \u003chistorical_figure: 0x7fff9f617d90\u003e\nid = 100399  histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 113916  histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\nid = 113917  histfig = 1953722220  nil\nid = 121166  histfig = 0   \u003chistorical_figure: 0x7fff9d70f190\u003e\n```","files":null},{"type":3,"author":{"id":"5221f59e75ea9db114593bbdfb180b7354aef9ed"},"timestamp":1598030875,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODQwMjY4OA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678402688"},"message":"I've just checked against a disassembly, and `history_event_masterpiece_lostst.histfig` is *definitely* supposed to be a historical figure ID - the code for describing the event in Legends mode uses it as such, and it even checks for -1 to choose how to format the message (\"X destroyed Y due to Z\" versus \"Y was destroyed due to Z\").\n\nHowever, out of all of the code that creates this history event, none of them ever **initialize** the histfig field in any way, so this is likely a bug in DF itself - I also checked against version 0.28.181.40d, and while it *did* set the histfig ID during miner/mason defacement events, it did **not** initialize it to -1 in any other cases.","files":null},{"type":6,"author":{"id":"5221f59e75ea9db114593bbdfb180b7354aef9ed"},"timestamp":1598030875,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk0ODY4OTc2"},"target":"ef174a88f811baec32c8d2c243d8b1d22ee420591463de17f46685c38722ff00","message":"I've just checked against a disassembly, and `history_event_masterpiece_lostst.histfig` is *definitely* supposed to be a historical figure ID - the code for describing the event in Legends mode uses it as such, and it even checks for -1 to choose how to format the message (\"X destroyed Y due to Z\" versus \"Y was destroyed due to Z\").\n\nHowever, out of all of the code that creates this history event, none of them ever **initialize** the histfig field in any way, so this is likely a bug in DF itself - I also checked against version 0.28.181.40d, and while it *did* set the histfig ID during miner/mason defacement events, it did **not** initialize it to -1 in any other cases.\n\nEdit: it looks like this bug has already been logged in the DF bug tracker as [#0006445](https://www.bay12games.com/dwarves/mantisbt/view.php?id=6445) and [#0009727](https://www.bay12games.com/dwarves/mantisbt/view.php?id=9727).","files":null},{"type":6,"author":{"id":"5221f59e75ea9db114593bbdfb180b7354aef9ed"},"timestamp":1598031921,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk0ODczMDM3"},"target":"ef174a88f811baec32c8d2c243d8b1d22ee420591463de17f46685c38722ff00","message":"I've just checked against a disassembly, and `history_event_masterpiece_lostst.histfig` is *definitely* supposed to be a historical figure ID - the code for describing the event in Legends mode uses it as such, and it even checks for -1 to choose how to format the message (\"X destroyed Y due to Z\" versus \"Y was destroyed due to Z\").\n\nHowever, out of all of the code that creates this history event, none of them ever **initialize** the histfig field in any way (unless they're explicitly assigning it, as with art defacement by miners and masons and engravers), so this is likely a bug in DF itself.\n\nEdit: it looks like this bug has already been logged in the DF bug tracker as [#0006445](https://www.bay12games.com/dwarves/mantisbt/view.php?id=6445) and [#0009727](https://www.bay12games.com/dwarves/mantisbt/view.php?id=9727).","files":null},{"type":6,"author":{"id":"5221f59e75ea9db114593bbdfb180b7354aef9ed"},"timestamp":1598033004,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk0ODc3Mzcy"},"target":"ef174a88f811baec32c8d2c243d8b1d22ee420591463de17f46685c38722ff00","message":"I've just checked against a disassembly, and `history_event_masterpiece_lostst.histfig` is *definitely* supposed to be a historical figure ID - the code for describing the event in Legends mode uses it as such, it checks for -1 to choose how to format the message (\"X destroyed Y due to Z\" versus \"Y was destroyed due to Z\"), and it's even initialized for events describing art defacement by miners, masons, and engravers.\n\nHowever, the field never actually gets initialized to -1 when it's unused, so this is definitely a bug in DF itself - in fact, it's already been logged in the DF bug tracker as [#0009727](https://www.bay12games.com/dwarves/mantisbt/view.php?id=9727) (where I've just added a comment with these findings).","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1598130221,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODY5NDMzOA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678694338"},"message":"There are a couple things we could do on the DFHack side, then:\n* Remove `\u003chistfig\u003e` entirely (might break legends tools)\n* Document that `\u003chistfig\u003e` is likely incorrect, but leave it\n* Correct `\u003chistfig\u003e` to `-1` if it's not a valid histfig ID (this won't handle cases where it happens to be a valid histfig ID)\n  * Optional: assume `0` is also invalid and change it to `-1`\n  * More complicated: check whether the histfig was alive at the time of the event\n\n@Kromtec @robertjanetzko do you have a preference?","files":null},{"type":3,"author":{"id":"60a44d9f74fd6dc832dd4b94c98d9837d2c32098"},"timestamp":1598135030,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODcwMjQ1MA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678702450"},"message":"removing would be ok for the legendsviewer. otherwise `-1`, as this is also the default value I use.\n(i will have a closer look next week, when I'm back from vacation)","files":null},{"type":3,"author":{"id":"16f04462205c0b1c331c2257bb76f0e7ce232b99"},"timestamp":1598204167,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODgwMjQ3Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678802476"},"message":"Removing it would not break anything for LegendsViewer. -1 for invalid values would be also ok and I think there is no need for the complicated alive check.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1598242378,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY3ODg5MzQ3OA==","github-url":"https://github.com/DFHack/dfhack/issues/1629#issuecomment-678893478"},"message":"Thanks for letting me know! I think we should probably just remove it, then (maybe comment it out to future-proof it a bit)","files":null}]}