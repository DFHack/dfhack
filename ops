{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1471380238,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDc1NzY1MjQxNw=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1471380238,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDc1NzY1MjQxOA=="},"added":["internal"],"removed":[]},{"type":3,"author":{"id":"54edb2db9eb9b7cc6fbbb0681df88d5b1d14abe6"},"timestamp":1471492581,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0MDYxNzY5OQ==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-240617699"},"message":"Not map_y1/y2. Something like map_width/height_in_map_tiles.\n\nExamples of the things plugin may want to do:\n- Print text in the menu area - need to know menu x1/x2/y1/y2 in text tiles, need to be able to output to the text buffer.\n- Draw some text/dialog centred over the map - need to know map x1/x2/y1/y2 in text tiles (y1/y2 are the same as for the menu and area map), need to be able to output the text buffer.\n- Find visible objects, draw something on the map (using map tiles) - need to know map width/height, need to be able to output to the map buffer. In the map buffer, map obviously starts at (0,0) always, so no x1/y1 needed here.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1471543022,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0MDgwNDAxOA==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-240804018"},"message":"A height and width wouldn't be consistent with the other fields. Anyway, what's the difference? Wouldn't you be able to get height and width with (map_y2 - map_y1) and (map_x2 - map_x1)?\n\nFor your second point, you could use map_y1 and map_y2 and set the `map` parameter of drawing functions to `true` to use map tiles, or use y1 and y2 and set `map` to `false` to use text tiles, e.g. for stuff like message boxes. (The latter is the default, I believe.)","files":null},{"type":3,"author":{"id":"54edb2db9eb9b7cc6fbbb0681df88d5b1d14abe6"},"timestamp":1471788414,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0MTI1OTY1OA==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-241259658"},"message":"(map_x2 - map_x1) is usable of course, it just that max_x1/map_y1 do not make sense - they are \"left/top edge of the map in 'map tiles'\", while 'map tile' units exist only inside the map.\n\nAs for the drawing, yes, that was the idea, I just mentioned it for the sake of completeness.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1471909085,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI0MTU4MzkzMw==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-241583933"},"message":"map_x1 and map_y1 both being `1` is more consistent with the other DwarfmodeDims fields, though - e.g. map_x1, map_x2, menu_x1, menu_x2, area_x1, and area_x2 are all absolute tile positions, so it's easy to draw text to the screen at, say, (menu_x1, y) and have it show up in the leftmost column of the sidebar menu. Without TwbT, map_y1 and map_y2 would be usable in the same way if they're absolute coordinates, so I think it's a cleaner solution.\n\nAnyway, it turns out that I did add map_y1/y2 in https://github.com/DFHack/dfhack/commit/2a2ab00ca99c58ce9beddb05c1598a4283813218, but didn't update anything to use them.","files":null},{"type":2,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1471909093,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50NzYzNzgzMTIx"},"title":"Use map_y1 and map_y2 fields in Gui::DwarfmodeDims","was":"Use map_y1 and map_y2 fields in Gui::DwarfmodeDims"},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1480404718,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDI2MzQ5NzE4Mg==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-263497182"},"message":"Update: I got some work done on this a few weeks ago, although it's not finished (or merged). The map_x1/y1 fields are actually set properly in C++, and the Lua gui library is partially refactored to use the C++ function internally.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1494771273,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMTMxNjA0NQ==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-301316045"},"message":"My build scripts just noticed that we have a stable DFHack release, and that I was planning to check on this issue.  So:\n\n- when is this expected to be merged?  (from the tag I guess r2 ðŸ˜‰ )\n- will it mean that TwbT can distribute a single plugin only, instead of patching automaterial/mousequery/resume as well?\n\n(No pressure, just to let me set the next build failure appropriately)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1494980022,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMTk0OTQ3Mg==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-301949472"},"message":"Thanks for reminding me, but I somehow didn't get a notification for it, which is strange.\n\nAnyway, yes, I do expect to work on this before r2, and it should allow TwbT to avoid distributing those three plugins as well. That depends on @pronvit to modify TwbT to use the hooks and on us to merge in whatever changes he's made (I believe there were a couple mousequery modifications).","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1497039370,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwNzQ4OTEyMA==","github-url":"https://github.com/DFHack/dfhack/issues/981#issuecomment-307489120"},"message":"I've fixed the three plugins here, and fixing Lua scripts wound up being pretty easy, so I'm closing this.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1497039370,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTExNzg2NTIxOQ=="},"status":2}]}