{"version":1,"ops":[{"type":1,"author":{"id":"41007559e74fa0638bf8bfc0dd1caa1fcff75fb0"},"timestamp":1309896049,"metadata":{"github-id":"MDU6SXNzdWUxMTY5NzIz","github-url":"https://github.com/DFHack/dfhack/issues/85","origin":"github"},"title":"PATCH: dfreveal safe mode option (don't reveal hell)","message":"This patch makes it so that Giving the option \"-s\" to dfreveal will safely reveal the map, without revealing Hell.  It does this by starting at the highest z-level and working down, stopping at the first z-level that has an adamantine tube or a temple, leaving unrevealed anything that could trigger demons being generated.\n\n```\n--- ORIG-tools/supported/reveal.cpp     2011-05-28 01:18:50.000000000 -0700\n+++ tools/supported/reveal.cpp  2011-07-05 12:55:24.000000000 -0700\n@@ -6,8 +6,13 @@\n using namespace std;\n\n #include \u003cDFHack.h\u003e\n+#include \u003cdfhack/extra/MapExtras.h\u003e\n+#include \u003cxgetopt.h\u003e\n #include \u003cdfhack/modules/Gui.h\u003e\n\n+typedef std::vector\u003cDFHack::t_feature*\u003e FeatureListPointer;\n+typedef std::map\u003cDFHack::DFCoord, FeatureListPointer\u003e FeatureMap;\n+\n #ifdef LINUX_BUILD\n #include \u003cunistd.h\u003e\n void waitmsec (int delay)\n@@ -23,6 +28,39 @@\n #endif\n #include \u003cdfhack/extra/termutil.h\u003e\n\n+/*\n+ * Anything that might reveal Hell is unsafe.\n+ */\n+bool isSafe(uint32_t x, uint32_t y, uint32_t z, DFHack::Maps *Maps,\n+            MapExtras::MapCache \u0026cache, FeatureMap localFeatures)\n+{\n+    DFHack::t_feature *blockFeatureLocal = NULL;\n+\n+    DFHack::DFCoord blockCoord(x, y);\n+    MapExtras::Block *b = cache.BlockAt(DFHack::DFCoord(x, y, z));\n+\n+    uint16_t index = b-\u003eraw.local_feature;\n+    FeatureMap::const_iterator it = localFeatures.find(blockCoord);\n+    if (it != localFeatures.end())\n+    {\n+        FeatureListPointer features = it-\u003esecond;\n+\n+        if (index != -1 \u0026\u0026 index \u003c features.size())\n+        {\n+            blockFeatureLocal = features[index];\n+        }\n+    }\n+\n+    if (blockFeatureLocal == NULL)\n+        return true;\n+\n+    // Adamantine tubes and temples lead to Hell, and Hell *is* Hell.\n+    if (blockFeatureLocal-\u003etype != DFHack::feature_Other)\n+        return false;\n+\n+    return true;\n+}\n+\n struct hideblock\n {\n     uint32_t x;\n@@ -31,8 +69,39 @@\n     uint8_t hiddens [16][16];\n };\n\n-int main (void)\n+int main (int argc, char *argv[])\n {\n+    bool doSafe = false;\n+\n+    char c;\n+    xgetopt opt(argc, argv, \"s\");\n+    opt.opterr = 0;\n+\n+    while ((c = opt()) != -1)\n+    {\n+        switch (c)\n+        {\n+        case 's':\n+            doSafe = true;\n+            break;\n+        case '?':\n+            switch (opt.optopt)\n+            {\n+            // For when we take arguments\n+            default:\n+                if (isprint(opt.optopt))\n+                    std::cerr \u003c\u003c \"Unknown option -\" \u003c\u003c opt.optopt \u003c\u003c \"!\"\n+                            \u003c\u003c std::endl;\n+                else\n+                    std::cerr \u003c\u003c \"Unknown option character \" \u003c\u003c (int) opt.optopt \u003c\u003c \"!\"\n+                            \u003c\u003c std::endl;\n+            }\n+        default:\n+            // Um.....\n+            return 1;\n+        }\n+    }\n+\n     bool temporary_terminal = TemporaryTerminal();\n     uint32_t x_max,y_max,z_max;\n     DFHack::designations40d designations;\n@@ -52,6 +121,7 @@\n     }\n     DFHack::Maps *Maps =DF-\u003egetMaps();\n     DFHack::World *World =DF-\u003egetWorld();\n+\n     // walk the map, save the hide bits, reveal.\n     cout \u003c\u003c \"Pausing...\" \u003c\u003c endl;\n\n@@ -64,6 +134,8 @@\n     waitmsec(1000);\n     DF-\u003eSuspend();\n\n+    cout \u003c\u003c \"Revealing, please wait...\" \u003c\u003c endl;\n+\n     // init the map\n     if(!Maps-\u003eStart())\n     {\n@@ -73,19 +145,36 @@\n         return 1;\n     }\n\n-    cout \u003c\u003c \"Revealing, please wait...\" \u003c\u003c endl;\n+    MapExtras::MapCache cache(Maps);\n+    FeatureMap localFeatures;\n+\n+    if(doSafe \u0026\u0026 !Maps-\u003eReadLocalFeatures(localFeatures))\n+    {\n+        std::cerr \u003c\u003c \"Unable to read local features; can't reveal map \"\n+                  \u003c\u003c \"safely\" \u003c\u003c std::endl;\n+        if(temporary_terminal)\n+            cin.ignore();\n+        return 1;\n+    }\n\n     Maps-\u003egetSize(x_max,y_max,z_max);\n     vector \u003chideblock\u003e hidesaved;\n\n-    for(uint32_t x = 0; x\u003c x_max;x++)\n+    // We go from the top z-level down, stopping as soon as we encounter\n+    // something that might lead to Hell, so the player can unpause without\n+    // spawning demons.\n+    bool quit = false;\n+    for(uint32_t z = z_max - 1; z \u003e 0 \u0026\u0026 !quit;z--)\n     {\n-        for(uint32_t y = 0; y\u003c y_max;y++)\n+        for(uint32_t y = 0; y \u003c y_max;y++)\n         {\n-            for(uint32_t z = 0; z\u003c z_max;z++)\n+            for(uint32_t x = 0; x \u003c x_max;x++)\n             {\n                 if(Maps-\u003eisValidBlock(x,y,z))\n                 {\n+                    if (doSafe \u0026\u0026 !isSafe(x, y, z, Maps, cache, localFeatures))\n+                        quit = true;\n+\n                     hideblock hb;\n                     hb.x = x;\n                     hb.y = y;\n@@ -108,7 +197,10 @@\n     // FIXME: force game pause here!\n     DF-\u003eDetach();\n     cout \u003c\u003c \"Map revealed. The game has been paused for you.\" \u003c\u003c endl;\n-    cout \u003c\u003c \"Unpausing can unleash the forces of hell!\" \u003c\u003c endl \u003c\u003c endl;\n+    if (doSafe)\n+        cout \u003c\u003c \"Unpausing *WON'T* reveal hell.\" \u003c\u003c endl \u003c\u003c endl;\n+    else\n+        cout \u003c\u003c \"Unpausing can unleash the forces of hell!\" \u003c\u003c endl \u003c\u003c endl;\n     cout \u003c\u003c \"Press any key to unreveal.\" \u003c\u003c endl;\n     cout \u003c\u003c \"Close to keep the map revealed !!FOREVER!!\" \u003c\u003c endl;\n     cin.ignore();\n```","files":null}]}