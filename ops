{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1573540479,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1Mjc1NTc2OA==","github-url":"https://github.com/DFHack/dfhack/issues/1467#issuecomment-552755768"},"message":"Depends on how portable it is. I take it you're the author?","files":null},{"type":3,"author":{"id":"e2662f15c02a8737bb99a5cfbf7579eaea5a0188"},"timestamp":1573544084,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1Mjc3MTQwMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1467#issuecomment-552771401"},"message":"Yes.\nI made a lot of CheatEngine scripts for DF in the past, but most of them are for customization. Anyways, if you need more info on the actual issue I can provide you some.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1573660216,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI3OTU4MDQ1NzE="},"added":["idea"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1573660676,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1MzQ2Njc3NA==","github-url":"https://github.com/DFHack/dfhack/issues/1467#issuecomment-553466774"},"message":"I finally got time to download and look through this - I'm not entirely familiar with what you're using here, but it looks like some binary patches. We do have a [mechanism to support those](https://dfhack.readthedocs.io/en/stable/docs/Binpatches.html#binpatches), although it hasn't been used since 0.34.11. They're typically more annoying to maintain for all the DF builds we support, and require manual work for each new DF version, so we've been trying to use other methods instead.\nCould you explain what your fix is doing? There may be a \"cleaner\" way to accomplish this on the DFHack side that works across DF upgrades - e.g. we could try hooking into one or more virtual methods, or set up some task that runs repeatedly.","files":null},{"type":3,"author":{"id":"e2662f15c02a8737bb99a5cfbf7579eaea5a0188"},"timestamp":1573666856,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1MzUxOTQyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1467#issuecomment-553519425"},"message":"DF check unit's ability to equip an item by envoking... call it \"ItemEquipResult CanEquip(int itemTemplateID, int unitTemplateID)\", not exact on the actual argument list. This function returns 0, 1 or 2. I don't remember which one's which but it's most likely CANNOT_EQUIP, CAN_EQUIP_2H_ONLY, CAN_EQUIP_1H\nNow, the main point is that this function does not take actual unit as an argument, so I don't see an easy way to fix it. I had to hook it in all 3 places where it checks weapons: before CanEquip() is called to store unit reference (labels 'store1', 'store2', 'store3'), after to clean it up ('restore1', 'restore2', 'restore3') and inside CanEquip() to perform a check of weapon required size against actual unit's size (after tallness/broadness mods but before muscle/fat mods). It's not perfect way of fixing stuff of course, I just can't come up with a better solution\nI know binary patches are not included after 34.11, and I understand why, but I know little of DFHack functionality. So I figured better ask you if there is a way of implementing such a fix (tempfix, that is)\n\nIt's also funny how easily this could be fixed in actual source, but this \"CanEquip()\" method stays unchanged since at least 34.11 (had to make same fix there as well)","files":null}]}