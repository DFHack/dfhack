{"version":1,"ops":[{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599422517,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MTE3NzM="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically? Say the filter says \"fire-safe building material\", how can I select a matching item in the game world?\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the item selection algorithm yet - it depends too much on the answers to the above two questions, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599422517,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MTE3NzQ="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", how can I select a matching item in the game world?\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the item selection algorithm yet - it depends too much on the answers to the above two questions, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599422575,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MTE4Njg="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the item selection algorithm yet - it depends too much on the answers to the above two questions, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599423607,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MTM3MzE="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\nEdit: I just discovered dfhack.job.isSuitableItem(). Let me investigate that.\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the item selection algorithm yet - it depends too much on the answers to the above two questions, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599424396,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MTUxNjE="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\nEdit: I just discovered dfhack.job.isSuitableItem(). Let me investigate that.\nEdit2: that looks like it will work. Nice.\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the item selection algorithm yet - it depends too much on the answers to the above two questions, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599427812,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MjA4MTg="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\nEdit: I just discovered dfhack.job.isSuitableItem(). Let me investigate that.\nEdit2: that looks like it will work. Nice.\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the data structures and item selection algorithm yet, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599427976,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU0MjExMjc="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\nEdit: I just discovered dfhack.job.isSuitableItem(). Let me investigate that.\nEdit2: that looks like it will work. Nice.\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the data structures and item selection algorithm yet, but my overall plan is this:\n\n- general cleanup of buildingplan code (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildingplan-created buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599546950,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjU5MzEzMDU="},"target":"41a52355a11531018716376bb16a9821ef832b9536407e744cecd0b53ddeff07","message":"The next big feature I have planned for quickfort is support for all buildings in buildingplan.\n\nI have a few questions, though, and I'm not on IRC reliably enough to ask them there:\n\n1) How do we match an item against a building construction job item filter?\n\nIn order to support all buildings, I'll need to support a wider variety of building items, including generic building materials. buildingplan goes through all free game items and assigns pertinent ones to buildingplan-managed buildings. This is easy to do for the furniture types buildingplan currently supports, but how can we do it generically for any filter returned from buildings.lua? Say the filter says \"fire-safe building material\", what is the best way to select a matching item in the game world?\n\nEdit: I just discovered dfhack.job.isSuitableItem(). Let me investigate that.\nEdit2: that looks like it will work. Nice.\n\n2) How do we assign just one of several items in a construction job?\n\nThis might become obvious once I start implementing, but just in case it's difficult, are there any special steps I have to take for assigning items to a suspended well construction job if not all items are available at the same time? Can I assign one item and keep the job suspended? are there any negative consequences of doing that?\n\nI haven't fully designed the data structures and item selection algorithm yet, but my overall plan is this:\n\n- general cleanup of buildingplan code to make the code easier to modify (no logic or API changes) -- move business logic out of header files, split buildingplan-lib.h into buildingplan-planner.h and buildingplan-rooms.h, move gui code back into buildingplan.cpp\n- tighten up the API -- make all publicly unused methods private, remove direct access to mutable fields (this will be required for the persistent item filters feature request that was on the forums recently)\n- Use lua to allocate buildingplan-created buildings so we get appropriate item filters\n- When assigning an item to a construction job, filter both by construction job filters and buildingplan filters\n- Generate gui material selection pages for each required item, use getFilters() to get how many items, display serialized filter at top of screen so players know what they’re selecting for, left, right arrow keys to switch between items","files":null}]}