{"version":1,"ops":[{"type":6,"author":{"id":"e4bf8bd4d5e909340d062464050b953afa8cd4e7"},"timestamp":1600054294,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjgyMzYyNTQ="},"target":"0c7a2897f4c4886218ac55151560087d0c32c2c2daa98a86e5e34e9c57878ca6","message":"In 47.04 r2, ruby values for unit preferences are always 0 for types `:LikeShape` `:LikeItem` `:LikeCreature` `:HateCreature`.\n\nExample of unit that likes circles.\n\n```\n[DFHack]# lua ~unit.status.current_soul.preferences[3]\n\u003cunit_preference: 0x17b5f3380\u003e\ntype                   \t = 8\nitem_type              \t = 4\ncreature_id            \t = 4\ncolor_id               \t = 4\nshape_id               \t = 4\nplant_id               \t = 4\npoetic_form_id         \t = 4\nmusical_form_id        \t = 4\ndance_form_id          \t = 4\nitem_subtype           \t = -1\nmattype                \t = -1\nmatindex               \t = -1\nmat_state              \t = 0\nactive                 \t = true\nprefstring_seed        \t = 861673989\n```\n\n```\n[DFHack]# lua ~world.raws.descriptors.shapes[4]\n\u003cdescriptor_shape: 0x15f907fc0\u003e\nid                     \t = CIRCLE\nwords_str              \t = \u003cvector\u003cstring*\u003e[0]: 0x15f907fc8\u003e\nwords                  \t = \u003cvector\u003cint32_t\u003e[0]: 0x15f907fe0\u003e\nname                   \t = circle\nname_plural            \t = circles\nadj                    \t = \u003cvector\u003cstring*\u003e[0]: 0x15f908008\u003e\ngems_use               \t = \u003cdescriptor_shape.T_gems_use: 0x15f908020\u003e\ncategory               \t = \u003cvector\u003cstring*\u003e[1]: 0x15f908028\u003e\nfaces                  \t = 1\ntile                   \t = 9\n```\n\nBut `shape_id` `shape_tg` for this preference return 0 in ruby instead of 4.","files":null},{"type":6,"author":{"id":"e4bf8bd4d5e909340d062464050b953afa8cd4e7"},"timestamp":1600054540,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0MjgyMzcxNDc="},"target":"0c7a2897f4c4886218ac55151560087d0c32c2c2daa98a86e5e34e9c57878ca6","message":"In 47.04 r2, ruby values for unit preferences are always 0 for types `:LikeShape` `:LikeItem` `:LikeCreature` `:HateCreature`.\n\nExample of unit that likes circles.\n\n```\n[DFHack]# lua ~unit.status.current_soul.preferences[3]\n\u003cunit_preference: 0x17b5f3380\u003e\ntype                   \t = 8\nitem_type              \t = 4\ncreature_id            \t = 4\ncolor_id               \t = 4\nshape_id               \t = 4\nplant_id               \t = 4\npoetic_form_id         \t = 4\nmusical_form_id        \t = 4\ndance_form_id          \t = 4\nitem_subtype           \t = -1\nmattype                \t = -1\nmatindex               \t = -1\nmat_state              \t = 0\nactive                 \t = true\nprefstring_seed        \t = 861673989\n```\n\n```\n[DFHack]# lua ~world.raws.descriptors.shapes[4]\n\u003cdescriptor_shape: 0x15f907fc0\u003e\nid                     \t = CIRCLE\nwords_str              \t = \u003cvector\u003cstring*\u003e[0]: 0x15f907fc8\u003e\nwords                  \t = \u003cvector\u003cint32_t\u003e[0]: 0x15f907fe0\u003e\nname                   \t = circle\nname_plural            \t = circles\nadj                    \t = \u003cvector\u003cstring*\u003e[0]: 0x15f908008\u003e\ngems_use               \t = \u003cdescriptor_shape.T_gems_use: 0x15f908020\u003e\ncategory               \t = \u003cvector\u003cstring*\u003e[1]: 0x15f908028\u003e\nfaces                  \t = 1\ntile                   \t = 9\n```\n\nBut `shape_id` `shape_tg` for this preference return 0 in ruby instead of 4.\n\n```\ndf.world.units.all.each do |unit|\n\tunit.status.current_soul.preferences.each do |p|\n\t\tif p.active\n\t\t\tcase p.type\n\t\t\twhen :LikeCreature\n\t\t\t\tputs p.creature_id\n\t\t\twhen :HateCreature\n\t\t\t\tputs p.creature_id\n\t\t\twhen :LikeItem\n\t\t\t\tputs p.item_type\n\t\t\twhen :LikeColor\n\t\t\t\tputs p.color_id\n\t\t\twhen :LikeShape\n\t\t\t\tputs p.shape_id\n\t\t\tend\n\t\tend\n\tend\nend\n```","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600054677,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5MTc5MjE2MQ==","github-url":"https://github.com/DFHack/dfhack/issues/1646#issuecomment-691792161"},"message":"Can you run this with the same unit selected as in your first example?\n```\n:rb puts DFHack.unit_find.status.current_soul.preferences[3].shape_id\n```\nI suspect this is an issue with all similar unions - I'm seeing this with a similar unit:\n```\n[DFHack]# :rb puts DFHack.unit_find.status.current_soul.preferences[5].shape_id\n-11566\n[DFHack]# lua ~unit.status.current_soul.preferences[5].shape_id\n46\n```\n\nAlso, if it's relevant, what is `shape_tg`?","files":null},{"type":6,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600054677,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk5NzM1NTM0"},"target":"feb92d7263341e2133ba4202c2318fecf9fc16b4b9eac0163ac24ad5f2b06ad0","message":"Can you run this with the same unit selected as in your first example?\n```\n:rb puts DFHack.unit_find.status.current_soul.preferences[3].shape_id\n```\nI suspect this is an issue with all similar unions - I'm seeing this with a unit in one of my forts:\n```\n[DFHack]# :rb puts DFHack.unit_find.status.current_soul.preferences[5].shape_id\n-11566\n[DFHack]# lua ~unit.status.current_soul.preferences[5].shape_id\n46\n```\n\nAlso, if it's relevant, what is `shape_tg`?","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600054659,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM3NjEyNDQ3MzY="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600054659,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM3NjEyNDQ3Mzc="},"added":["ruby"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600054659,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM3NjEyNDQ3Mzg="},"added":["structures"],"removed":[]},{"type":3,"author":{"id":"e4bf8bd4d5e909340d062464050b953afa8cd4e7"},"timestamp":1600054819,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5MTc5MjcyOQ==","github-url":"https://github.com/DFHack/dfhack/issues/1646#issuecomment-691792729"},"message":"```\n[DFHack]# :rb puts DFHack.unit_find.status.current_soul.preferences[3].shape_id\n0\n```\n`shape_tg` is in the class definition in ruby-autogen-gcc.rb. It just returns the name.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600055421,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50Mzc2MTI2MzU3OQ=="},"added":[],"removed":["structures"]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600055548,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5MTc5NTI5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1646#issuecomment-691795296"},"message":"Looks like a bug in ruby codegen that isn't accounting for padding before the fields of the union in [unit_preference](https://github.com/DFHack/df-structures/blob/master/df.units.xml#L2254-L2281), causing reads to return uninitialized values. Specifically, `plugins/ruby/codegen.pl` is generating code like this:\n```ruby\nclass UnitPreference \u003c MemHack::Compound\n    sizeof 28\n\n    field(:type, 0) {\n        class ::DFHack::UnitPreference_TType \u003c MemHack::Enum\n            ENUM = Hash.new\n            NUME = Hash.new\n            ENUM[0] = :LikeMaterial ; NUME[:LikeMaterial] = 0\n            ENUM[1] = :LikeCreature ; NUME[:LikeCreature] = 1\n            ENUM[2] = :LikeFood ; NUME[:LikeFood] = 2\n            ENUM[3] = :HateCreature ; NUME[:HateCreature] = 3\n            ENUM[4] = :LikeItem ; NUME[:LikeItem] = 4\n            ENUM[5] = :LikePlant ; NUME[:LikePlant] = 5\n            ENUM[6] = :LikeTree ; NUME[:LikeTree] = 6\n            ENUM[7] = :LikeColor ; NUME[:LikeColor] = 7\n            ENUM[8] = :LikeShape ; NUME[:LikeShape] = 8\n            ENUM[9] = :LikePoeticForm ; NUME[:LikePoeticForm] = 9\n            ENUM[10] = :LikeMusicalForm ; NUME[:LikeMusicalForm] = 10\n            ENUM[11] = :LikeDanceForm ; NUME[:LikeDanceForm] = 11\n        end\n\n        number 16, true, nil, UnitPreference_TType\n    }\n    field(:item_type, 2) {\n        number 16, true, nil, ItemType\n    }\n    field(:creature_id, 2) {\n        number 16, true, -1\n    }\n    def creature_tg ; df.world.raws.creatures.all[creature_id] ; end\n```\n\nThe second argument to `field` is the offset, but it should be 4 for everything in the union, not 2, because there are 2 bytes of padding between the `type` field and the union (which has some 4-byte members and must be 4-byte-aligned). Lua gets this right because it uses `offsetof` in generated C++ code.\n\nUnsure how complicated this will be to fix, or what other unions it affects, but it's definitely a bug.","files":null},{"type":3,"author":{"id":"e4bf8bd4d5e909340d062464050b953afa8cd4e7"},"timestamp":1600057635,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5MTgwMjgyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1646#issuecomment-691802825"},"message":"I changed the padding argument from 2 to 4 for `:item_type` `:creature_id` `:color_id` and `:shape_id` and it seems fixed. Thank you!","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1600124837,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5MjM2NDk1OA==","github-url":"https://github.com/DFHack/dfhack/issues/1646#issuecomment-692364958"},"message":"Glad it works! Unfortunately it's not as easy to fix upstream, since that code is autogenerated. If it's not figured out for r3, you may need to reapply that patch to get it to work again.","files":null}]}