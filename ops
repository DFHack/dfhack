{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1534189006,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMjYzNzkwMw==","github-url":"https://github.com/DFHack/dfhack/issues/1388#issuecomment-412637903"},"message":"Isn't there already a screen with a list of professions (to load them)? It'd probably be easier to add a delete option to that screen than making an entirely new screen. I'm not sure adding a whole new line to the manipulator options is worth it either (although it'll probably be necessary at some point...). I can leave comments on that commit if you like - there are probably a couple DFHack-specific things that could be improved.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1534189014,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE3ODYyMTc3NjM="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1534189014,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE3ODYyMTc3NjQ="},"added":["manipulator"],"removed":[]},{"type":3,"author":{"id":"a0e308df600b8063e6081e0d4e79d7398f8d57ea"},"timestamp":1534219807,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMjc0OTE5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1388#issuecomment-412749196"},"message":"@lethosor It is most desirable that you do comment.\n\nI did not add a delete option to the load screen for two reasons:\n* I like to think of it as a \"standard dialogue\" that could be factored out and shared between many plugins to provide consistent behaviour.\n* If a user wants to remove a saved profession, why would they use \"load\" option? It will have to be relabeled to \"load or delete\" or even \"load/manage\" then.\n\n* * *\n\nI noticed, a while after creating the present issue, that stockpiles may be saved and loaded too â€” would be nice if the interface was consistent. They actually suffer from the absence of removal option, as well.\n\nI wonder if we can think of some generic solution that can be factored out and used both in `manipulator` and in the stockpile save/load feature. It would offer to:\n\n* Save the current configuration.\n* Observe the list of existing configurations and choose which one to load.\n* The same, but to delete.\n\nIt will also need some framework for manipulating the persistent storage. Currently, the plugin author is choosing what files to create, which is unsafe. _(What if we accidentally write over an existing file? What if the name to be saved, supplied by the user, contains `../`?) If we start adding the removal feature, it is yet another opportunity to slip. So, some thought should be given to standardizing the actions a plugin may do on a file system.\n\nOne possibility is to give each plugin a directory it may create and remove any files inside at will, but in such a fashion that paths with `..` in them are not accepted.\n\nIt is a bit of a long shot, I admit.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1534220779,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMjc1MTA2Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1388#issuecomment-412751063"},"message":"The `stockpiles` plugin uses [a Lua file](https://github.com/DFHack/dfhack/blob/master/plugins/lua/stockpiles.lua) for its save/load UI - there's also some [sanitization](https://github.com/DFHack/dfhack/blob/55d5d4777619e061ba63fc66901dec63ca23d141/plugins/lua/stockpiles.lua#L99-L103) to deal with the safety issues you mentioned. It could be modularized/reused in manipulator, but manipulator doesn't use Lua at all currently, so that would take some additional effort.\n\nMy reasoning for suggesting the delete option in the \"load\" screen was:\n* Deleting isn't a very common operation (this is the first suggestion I've seen for it - maybe some people delete files by hand when they want to?). It would take up more UI space, which I'm not sure is worth it - I don't have an issue with relabeling the option.\n* Usually, people would want to delete files because they're taking up space in the \"load\" screen. Making them go through a separate screen seems tedious to me - it could turn a procedure like \"load -\u003e delete A -\u003e confirm -\u003e select B\"  into \"load -\u003e back -\u003e delete -\u003e select A -\u003e confirm -\u003e back -\u003e load -\u003e select B\".\n\nI do agree that standardizing things is good. I'm not sure it's necessary for stockpiles and manipulator at this moment, but if they both support things like searching and deletion, it would be a good idea. Consistent rejection of dangerous filenames is also good.\n\nI'll comment on the commit there.","files":null},{"type":6,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1534220779,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDExOTA0NDkzOA=="},"target":"c4ab5663f17a06bc20fb0b0dfdbf059ad41f9a3881930766017a3ecbd7f907a0","message":"The `stockpiles` plugin uses [a Lua file](https://github.com/DFHack/dfhack/blob/master/plugins/lua/stockpiles.lua) for its save/load UI - there's also some [sanitization](https://github.com/DFHack/dfhack/blob/55d5d4777619e061ba63fc66901dec63ca23d141/plugins/lua/stockpiles.lua#L99-L103) to deal with the safety issues you mentioned. It could be modularized/reused in manipulator, but manipulator doesn't use Lua at all currently, so that would take some additional effort.\n\nMy reasoning for suggesting the delete option in the \"load\" screen was:\n* Deleting isn't a very common operation (this is the first suggestion I've seen for it - maybe some people delete files by hand when they want to?). It would take up more UI space, which I'm not sure is worth it - I don't have an issue with relabeling the option.\n* Usually, people would want to delete files because they're taking up space in the \"load\" screen. Making them go through a separate screen seems tedious to me - it could turn a procedure like \"load -\u003e delete A -\u003e confirm -\u003e select B\"  into \"load -\u003e back -\u003e delete -\u003e select A -\u003e confirm -\u003e back -\u003e load -\u003e select B\".\n\nI do agree that standardizing things is good. I'm not sure it's necessary for stockpiles and manipulator at this moment, but if they both support things like searching and deletion, it would be a good idea. Consistent rejection of dangerous filenames is also good.\n\nI'll comment on the commit [here](https://github.com/DFHack/dfhack/compare/develop...kindaro:feature-manipulator-remove-template).","files":null}]}