{"version":1,"ops":[{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443059106,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQxNzYzOTgzMg=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443059106,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQxNzYzOTgzMw=="},"added":["internal"],"removed":[]},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1443066074,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0Mjc5OTU3Nw==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142799577"},"message":"Hmm.  The 'correct' behaviour of cleaning before building could also make someone sad that their personal collection of third-party scripts went missing; not a dealbreaker but certainly something to document carefully.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443067337,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgwMjU4MQ==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142802581"},"message":"They wouldn't be removed. Subfolders will be removed with rmdir which fails on nonempty folders.\n\nIn any case, the safest place for personal scripts is in raw/scripts.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1443068271,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgwNzE4NA==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142807184"},"message":"I have a ton of custom files everywhere. The scripts folder is symbolic link to dfhack scripts... I think this would not be good...","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443070458,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgxMTU0MA==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142811540"},"message":"I meant that it would **not** uninstall custom files. It would only remove old installed files.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1443072940,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgxNTcwOA==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142815708"},"message":"I don't understand: either you overwrite files while installing or you remove \"current installation files\". There is no way to track what was \"last version installed files\" vs \"just a quick scratch script for testing\".\n\nImho you are overthinking. Official dfhack installation guide would just ask for clean install (like df asks). If you are messing with files (like all devs are) **they** are ones that know and what to do.\n\nThis is a cmake-thing so it's only used by devs. I think they should be proficient enough to understand that installing over it you will have this risk.\n\nI also go this idea that best use would be have it under version control (all the script folders). That is my current use case: the script folder is a symbolic link to git repo of dfhack so all scripts that are tracked are up-to-date all the time. This could be also done if we split the dfhack into scripts+other stuff repos?","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443073311,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgxNzE3Nw==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142817177"},"message":"If, during installation, CMake makes a file that keeps track of the files installed during that installation, then those can be safely removed the next time it installs over the same directory.","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1443073905,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgxODQyOQ==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142818429"},"message":"Nope: what if i edit it and forget to copy over back into dfhack?","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443074015,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MjgxODU3OQ==","github-url":"https://github.com/DFHack/dfhack/issues/695#issuecomment-142818579"},"message":"I guess it could check the edit time and see if it was after the last install.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1443291504,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQxOTk1NjQ4OA=="},"added":["idea"],"removed":[]},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1446568974,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzQxMDk5Mw==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153410993"},"message":"I had this thought myself the other day.  And not only tab completion would be useful: backwards searching, command line editing hotkeys, advanced history editing commands (eg repeat last command without its final argument), would all be nice.\n\nMy first thought would be to Incorporate the [GNU readline library into DFHack](https://cnswww.cns.cwru.edu/php/chet/readline/rltop.html).  This is the CLI library used by Bash and other shells, and many other programs in the GNU/Linux world that provide their own CLI/shell. It is very sophisticated.\n\nIt is GPL licensed and the ZLib license that Core uses is [compatible with GPL](http://www.gnu.org/licenses/license-list.en.html#GPLCompatibleLicenses), so it should be possible to use readline with DFHack?  So long as the CLI of DFHack is also under ZLib - I assume it's counted as part of Core?\n\nI've also had a quick look round and found three other alternatives to readline:\n1. [Editline](http://thrysoee.dk/editline/) Based on NetBSD's CLI library.\n   - BSD licensed.\n   - Active: last release 03/15.\n2. [libeditline](http://www.s11n.net/editline/)  A C++ compiled fork of Editline\n   - BSD licensed.  \n   - Abandoned since 2011.\n3. [Tecla](http://www.astro.caltech.edu/~mcs/tecla/index.html). An independent project based on tcsh's CLI.\n   - X11 licensed.  \n   - Probably active: last release 11/14. \n\nIf you guys think the incorporation of such a library, as a replacement for the main CLI loop and the current basic history handling, would be a good thing, I will look into seeing how easy/hard it would be to add one of the above to DFHack.\n\nIn addition to tab completion, I for one would love to be able to easily edit the command line (eg using EMACS keys such as Control-U for backwards copy/delete, Control-Y for paste), reverse-search through the history (Control-R by default in readline), and use special edit commands like Escape-underscore to repeat the last command without its last argument :)","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1446574122,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzQzOTkxMw==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153439913"},"message":"I think most of this does not apply to windows console...","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1446578098,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzQ1ODM3MQ==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153458371"},"message":"You may well be right, but I'm not sure yet.\n\nMy understanding was that cmd.exe could run any command line app, and then if that app has in-built history, search, tab completion etc, it would work fine.  \n\nPut another way: if readline compiles OK on Windows (which it definitely does with Cygwin and Mingw; VC++ is another question, and one possible stumbling block), why _wouldn't_ a readline-enable command line app work normally from the standard Windows console?\n\nWhat would be the difference between the current DFHack console, with its self-written command line and history, versus an alternative that used readline (or an alternative such as editline)?  What would make one work and the other not?\n\nOr is the issue that CMD.exe doesn't support some of the key combinations that would be required?  Control-U/K/Y, Control-R, Alt-various, etc?\n\nI'm no expert on Windows development or the Windows console so it might well be impossible, but I would be interested to understand why.  I will keep researching it in the meantime.\n\nOr an alternative is to supply a different command line for Windows, such that Windows DFHack does not use CMD.exe but instead is bundled with something like:\n- [Clink](http://mridgers.github.io/clink/), a readline-enabled CMD.exe replacement for Windows with [source on Github](https://github.com/mridgers/clink).\n- [Mingw Editline](http://mingweditline.sourceforge.net/), a similar project using the BSD Editline I mentioned in my OP.\n\nThat may well be too much work or too much bloat of course.  Then again, reinventing the wheel with self-written tab completion would also be some amount of work, and the end result would not be as capable as using an existing powerful library.\n\nTo be clear, I'm not hugely invested in the idea of readline or any such library coming to DFHack.  It would improve my life using DFHack but only a small amount - it's not like I type commands into DFHack all day like I do an OS shell :)  So it's a lot of work, and/or more work than just writing some simple tab completion code, then fair enough.   But I thought I'd raise it as a possibility as if it isn't a much more work it would seem to me a good way to give a much more powerful console using a tried and tested library.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1446579091,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzQ2MzA5MQ==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153463091"},"message":"One example that might be relevant:  I just ran command line Vim from Windows 10's cmd.exe, and it works fine - colours, screen display, keyboard shortcuts and all.  \n\nAdmittedly Windows 10's cmd.exe is improved in various ways since earlier versions of Windows.  I'll have to try it later on Windows 7.\n\nBut I'm hopeful that it shows in principle that more advanced command line apps can run from cmd.exe as long as they implement everything themselves.\n\nThe main issue would be compiling readline (or another suitable library) on Windows.  But maybe it could be a drop-in binary library like how the Lua DLL is provided, meaning it wouldn't need to be compilable with VC and could be compiled with Mingw or whatever, which definitely works.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1446593086,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzUyMTc5Mw==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153521793"},"message":"Wow, sudden interest!  As it happens I've recently been looking at [the licenses of DFHack dependancies](https://github.com/PeridexisErrant/dfhack/blob/license-clarify/LICENSE.rst), so I have some info that may be useful:\n- the current system is not self-written; it's a minimal library called [linenoise](https://github.com/antirez/linenoise)\n- linenoise lists \"completion\" as a feature, and reading the source shows a function to register tab-completions\n- it's FreeBSD licensed (ie 2-clause), so GPL-compatible but probably replaced if we use GNU stuff\n\nSo I think it's possible to get tab-completion for available commands working without a new library.\n\nIf the real limit is Windows support, clink looks pretty cool (and like total overkill, but if it works...).  Good alias support from clink would also cover #701, if we went that way.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1446593399,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzUyMzM0MA==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153523340"},"message":"It's not exactly linenoise - it's based on linenoise but has been heavily modified for thread-safety. It's also only used on OS X and Linux.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1446593513,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzUyMzY1MQ==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153523651"},"message":"Huh.  In that case I guess bundling something else for Windows might make sense.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1446593864,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MzUyNDY3Mg==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-153524672"},"message":"It would be great if we could find something that supports ANSI escape sequences, so we can use the same thing on all platforms. The MSYS console is a little better than the standard Windows command prompt (which I think is identical to what DFHack uses), but still doesn't play well with linenoise (and presumably the standard readline distribution - there are forks with Windows support, but I'm not sure if they're kept up-to-date).","files":null},{"type":3,"author":{"id":"3fc8f755607d19af3bf76e99ef9f05556ea9463a"},"timestamp":1454150791,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE3NzE0NTE0Mg==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-177145142"},"message":"What about [`ANSICON`](https://github.com/adoxa/ansicon)? It looks fairly lightweight and adds support for ANSI stuff to cmd.exe.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1461129450,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjI2MTk5OQ==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-212261999"},"message":"Closing this issue - low priority, only affects Windows, and difficult to fix.","files":null},{"type":4,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1461129450,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NjMzOTk0ODY1"},"status":2},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1461149049,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIxMjM3Njg0OA==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-212376848"},"message":"It affects other platforms too - it's just more difficult to get working on Windows.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1461149049,"metadata":{"github-id":"MDEzOlJlb3BlbmVkRXZlbnQ2MzQzNDcxMzI="},"status":1},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1494532653,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMwMDg5OTk4MQ==","github-url":"https://github.com/DFHack/dfhack/issues/696#issuecomment-300899981"},"message":"I'm working on adding readline support for Linux and macOS, which would theoretically allow tab-completion there (although my main goal is to allow multi-line editing, which the Windows console has had for years, and the ability to use more readline commands). I'm not sure how to go about adding tab-completion on Windows, though.","files":null}]}