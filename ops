{"version":1,"ops":[{"type":6,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1541345362,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0Nzg1MTQxMQ=="},"target":"a5228922335aa08656850ab888d28e6125c0cf2c3564b721e4ff7f90a95822b6","message":"I'm not completely sure what's going on, or whether I am the one doing something incorrectly.\n\nI've tried to use a Lua script to create a gathering zone around a tree, centered on the tree. However, I either end up with a failure to create the zone, or the tree itself removed from the zone, which ought to cause fruit growing on the trunk to not be gathered.\n\nThe script essentially does this:\n```\nlocal zone = dfhack.buildings.allocInstance (plant.pos, df.building_type.Civzone, df.civzone_type.ActivityZone, -1)\ndfhack.println (dfhack.buildings.setSize (zone, 3, 3, 0))\ndfhack.println (\"Specifying \" .. zone.name, dfhack.buildings.constructAbstract (zone))\n```\n(there are some other fields set as well, but those are probably not of interest here).\nThe first \"println\" prints \"true 3 3 9 8\", where the '8' at the end is likely to be an indication of the issue, as it indicates the tree has been removed from the zone by setSize in that stage. However, the building resulting at the end looks the same as that of a manually created zone, except for zone.room.extents [4] (which probably is \"[1][1]\" if addressed properly), which has a value of 0 for the script created zone and 1 for the manually created one. Setting this field to 1 on the script created one causes \"constructAbstract\" to return false, however, likely because it contains the check\n```\n    if (!checkBuildingTiles(bld, false))\n        return false;\n```\nbut setting it after the abstract building has been constructed seems to work.\n\nThus, I think I can work around the issue for my purposes, but I suspect there is still an issue here.\n\nEdit: After further thinking, I believe the issue is that zones differ from other kinds of buildings in that the do not exclude blocked tiles, so setSize should allow for blocked tiles in its call to to set up the tiles if the building is a Civzone, and constructAbstract should only perform the checkBuildingTiles check for non zone buildings.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1546382135,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwNDk2MTM3NjM="},"added":["bug"],"removed":[]},{"type":2,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1546382140,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MjA0OTYxMzc3Ng=="},"title":"Buildings:: constructAbstract seems to exclude trees from gathering zones when those are created","was":"Buildings:: constructAbstract seems to exclude trees from gathering zones when those are created"},{"type":3,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599391565,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY4Nzc2MjYxOA==","github-url":"https://github.com/DFHack/dfhack/issues/1412#issuecomment-687762618"},"message":"I think I fixed this in #1624 when I ran into the same issue in the new quickfort zone mode","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1599408821,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY4NzgzMDc0OA==","github-url":"https://github.com/DFHack/dfhack/issues/1412#issuecomment-687830748"},"message":"As far as I can see myk002's change doesn't fix this issue as that change doesn't seem to change any calls to the modified operation, and the operation changed doesn't seem to be exactly the same one (I haven't actually looked at the code). However, the logic applied ought to apply to this situation as well.","files":null},{"type":3,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599412194,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY4Nzg0Mzk3Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1412#issuecomment-687843976"},"message":"You may have missed the change to checkBuildingTiles. Does your code go through that path?","files":null},{"type":6,"author":{"id":"26b11f0ce6b39ac7615d3a24c6880ec977d1cf04"},"timestamp":1599412194,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6Mzk4MjExMjY4"},"target":"994e5bcd42fd956589b2525c02f222552e4cfd52d89b439715939351430d3bb9","message":"You may have missed the change to checkBuildingTiles, which sets the new boolean. Does your code go through that path?","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1599412400,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY4Nzg0NTI2MA==","github-url":"https://github.com/DFHack/dfhack/issues/1412#issuecomment-687845260"},"message":"Sorry, yes, you're completely correct in that I did miss that change (despite looking for it...).\n\nThis means it ought to take care of this case as well.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1602389847,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDcwNjY0NzQ0Mw==","github-url":"https://github.com/DFHack/dfhack/issues/1412#issuecomment-706647443"},"message":"Is this fixed in 0.47.04-r3, then?","files":null}]}