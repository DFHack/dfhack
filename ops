{"version":1,"ops":[{"type":1,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1585904555,"metadata":{"github-id":"MDU6SXNzdWU1OTMyMzE4NTE=","github-url":"https://github.com/DFHack/dfhack/issues/1534","origin":"github"},"title":"exportlegends: questionable export of raw tokens","message":"History event exports of hf_does_interactionst and hf_learns_secretst export interaction raw strings, token and all, and does so using hard coded indices.\n\n1. Does DF use a canonical order of tokens internally? If not, any user generated raws may result in the wrong token being exported.\n2. Just dumping strings is quite ugly. If the raw strings are used, they ought to at least be stripped down to the contents.\n\nFor the hf_learns_secret case, it looks like the applicable string is available in in a directly usable form as\n ´´´\ninteractions[v].sources[0].name\n´´´\nalthough that relies on the assumption that there is a single source (or at least that the description is in the first one).\n\nFor the hf_does_interaction case, it looks like there's a corresponding approach of\n´´´\ninteractions[v].sources[0].hist_string_1 + interactions[v].sources[0].hist_string_2\n´´´\nresulting in \" cursed to assume the form of a gila monster-like monster every full moon\" (with a leading blank).\n\nThe reason I don't just make these changes and a PR is that I'm unsure if it would be that much safer than the current implementation, as it relies on the \"sources\" element to be of an appropriate derived type. Someone with a bit more knowledge of interactions might be able to provide advice.\n\nIt would e.g. be possible to check for the presence of a source element and that it's of the expected derived type and output an error message (but still provide a functioning XML file) if it's not. If that is done, it's still required to know the source derived types applicable to each case. Is it only _deityst for the hf_does_interaction case and _secretst for the hf_does_interaction case, and does it make sense to have more than one element in sources (and, if so, can they be of the same type, or should there be a search for the appropriate one[s])?","files":null}]}