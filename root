{"version":1,"ops":[{"type":1,"author":{"id":"d0e2a0db111c8ebab54150dc1e1196cfe9939192"},"timestamp":1278122938,"metadata":{"github-id":"MDU6SXNzdWUyMzc2MjQ=","github-url":"https://github.com/DFHack/dfhack/issues/35","origin":"github"},"title":"ReadCreature -- Custom Profession -- null offset","message":"So, trying to write a tool to walk the list of creatures, all 990 of them- in my save, anyway. There seem to be a lot of problems, but I guess I'll create issues for them one-at-a-time. My guess with this one is that, when there _isn't_ a custom profession, a null pointer gets set, but readSTLString doesn't check the offset it finds, it just tries to read.\n\n```\nGNU gdb (GDB) 7.1-debian\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later \u003chttp://gnu.org/licenses/gpl.html\u003e\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i486-linux-gnu\".\nFor bug reporting instructions, please see:\n\u003chttp://www.gnu.org/software/gdb/bugs/\u003e...\nReading symbols from /home/pdbogen/tmp/dfhack/output/dfdd...done.\n(gdb) break /home/pdbogen/tmp/dfhack/library/DFProcess-linux.cpp:557 if offset==0\nNo source file named /home/pdbogen/tmp/dfhack/library/DFProcess-linux.cpp.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 1 (/home/pdbogen/tmp/dfhack/library/DFProcess-linux.cpp:557 if offset==0) pending.\n(gdb) run\nStarting program: /home/pdbogen/tmp/dfhack/output/dfdd \n[Thread debugging using libthread_db enabled]\n990 creatures, apparently.\n\nBreakpoint 1, DFHack::NormalProcess::readSTLString (this=0x8098880, offset=0, buffer=0xbfffe4d1 \"\", bufcapacity=128) at /home/pdbogen/tmp/dfhack/library/DFProcess-linux.cpp:557\n557     read(offset - sizeof(_Rep_base),sizeof(_Rep_base),(uint8_t *)\u0026header);\n(gdb) print offset\n$1 = 0\n(gdb) continue\nContinuing.\npread failed: can't read 0xc bytes at address 0xfffffff4\nerrno: 16\nterminate called after throwing an instance of 'DFHack::Error::MemoryAccessDenied'\n  what():  SHM ACCESS DENIED\n\nProgram received signal SIGABRT, Aborted.\n0xb7fe2424 in __kernel_vsyscall ()\n(gdb) \n```","files":null}]}