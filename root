{"version":1,"ops":[{"type":1,"author":{"id":"a75a1fdcfd61696ec1c7e53a6232f937debb32a3"},"timestamp":1365617701,"metadata":{"github-id":"MDU6SXNzdWUxMzAzMjY2Mg==","github-url":"https://github.com/DFHack/dfhack/issues/195","origin":"github"},"title":"Possible bug in dfhack / library / modules / Buildings.cpp","message":"Hi \n\nFirst of all thanks a ton for your work on dfhack, it's really making my DF experience so much better :-) With that out of the way on to the issue at hand.\n\nI'm running with Masterwork 2h and I believe i may have stumbled upon a bug in the dfhack / library / modules / Buildings.cpp file in the Buildings::containsTile(df::building *bld, df::coord2d tile, bool room) member.\nI believe it incorrectly handles the size of rooms. Basically i'm trying to build a small lua script that records the layout of a building (in this case stockpile, but could be workshops as well) for whatever purpose.\n\nLine 638 of Buildings.cpp states:\n\n```\nif (tile.x \u003c bld-\u003ex1 || tile.x \u003e bld-\u003ex2 || tile.y \u003c bld-\u003ey1 || tile.y \u003e= bld-\u003ey2)\n```\n\nI believe the last part of the condition \"tile.y \u003e= bld-\u003ey2\" is wrong and should really be \"tile.y \u003e bld-\u003ey2\"  (just greater than, no equals, same as the condition for tile.x \u003e bld-\u003ex2).\n\nTo illustrate the issue assume we have a building 4 tiles wide and 3 tiles high, with the upper left corner at grid 3,7, it extends to 6,9 in the lower right as illustrated by the following image:\n![BuildingLayout](https://f.cloud.github.com/assets/4117716/363567/3a641e60-a207-11e2-9629-f1c153fbbe7a.png)\n\nIf i go into for instance the q query mode in DF, hover over the stockpile and run the following lua:\n\n```\ndfhack.buildings.containsTile(dfhack.gui.getSelectedBuilding(), 5, 9, false)\n```\n\nit'll return false because 9 is \u003e= 9 and the tile gets marked as not contained by line 638 of the cpp code.\nEssentially the tiles marked in green in this picture are returned true, but any tiles in the lower most row (marked as red) of the building are actually discarded by line 638:\n![DFHack-Interpretation](https://f.cloud.github.com/assets/4117716/363590/d1f4007e-a207-11e2-8e1d-c596d19ad1ec.png)\n\nTo reproduce:\n1. Create a new embark\n2. Build a stockpile / workshop of any size.\n3. Enter the q mode and hover over the building.\n4. Run the the following lua as a script in dfhack which should show the footprint of the building as well as results of wether or not the individual tiles are \"contained\":\n\n```\nlocal myBuilding = dfhack.gui.getSelectedBuilding(true)\n-- store boundaries\nlocal topLeftX = myBuilding.x1\nlocal topLeftY = myBuilding.y1\nlocal bottomRightX = myBuilding.x2\nlocal bottomRightY = myBuilding.y2\nlocal zLevel = myBuilding.z\nprint(\"Building Corners - X1: \" .. topLeftX .. \" Y1: \" .. topLeftY .. \" X2: \" .. bottomRightX .. \" Y2: \" .. bottomRightY)\nlocal patternstr = \"\"\nfor y = topLeftY, bottomRightY, 1 do\n  for x = topLeftX, bottomRightX, 1 do\n    if (dfhack.buildings.containsTile(myBuilding, x, y, false)) then \n      patternstr = patternstr .. \"X\"\n      print(\"X: \" .. x .. \"  Y: \" .. y .. \" - IN-BUILDING\")\n    else\n      patternstr = patternstr .. \" \"\n      print(\"X: \" .. x .. \"  Y: \" .. y .. \" - NOT-IN-BUILDING\")\n    end\n  end\n  patternstr = patternstr .. \"\\n\"\nend\nprint(\"Pattern: \\n\" .. patternstr)\n```\n\nThe lower most row is not shown as a part of the footprint. \"Punching holes\" in the stockpile by removing selected tiles from the stockpile in anything but the lower most row works fine as well, and is shown not to be part of the foot print as desired, but the lower most row of the building is not shown as part of the footprint.\n\nIs this a bug, or am i just doing something wrong and misunderstanding the code? :-)\nBest Regards\nPeter","files":null}]}