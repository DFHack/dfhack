{"version":1,"ops":[{"type":3,"author":{"id":"ce6dc54f709c7890219ea769f255cdfd012cca6b"},"timestamp":1410354969,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1MTEzMDA1","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-55113005"},"message":"The embedded ruby is actually an 1.8 library, so you'd need to require 1.8 ruby modules.\n\nI never managed to get a ruby1.9 (or never) ruby run stable inside dfhack, due to the fact that dfhack runs all ruby code in a separate thread, and from what i recall, ruby1.9 could only run (or at least init) from the program primary thread ; which is not an option inside the DF memory space.\n\nAll of this may have changed since ruby2.\n\nI'll try a few things if i get time.","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1410729466,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NTM5OTEz","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-55539913"},"message":"Thanks for your response. Per above, I have been using Ruby 1.9 in DFHack for several months now (I replaced the embedded 1.8 DLL with a shim DLL that first calls RUBY_INIT_STACK and then calls the 1.9 DLL instead). The only stability issue I hit is the occasional hang on initial boot when the introductory movie is enabled, and then only sporadically. Disabling the introductory movie seems to work around that problem (and I'm not positive that the Ruby DLL is to blame).\n\nAdmittedly, running the RUBY_INIT_STACK macro may not solve the stability issues to which you refer. However, not running the macro also means that you can't load any gems (at least, I haven't found a way).\n\nPlease let me know if I can be of any help.\n\nThanks,\n-Ben","files":null},{"type":3,"author":{"id":"ce6dc54f709c7890219ea769f255cdfd012cca6b"},"timestamp":1411155744,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2MjI0OTUy","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-56224952"},"message":"Added the RUBY_INIT_STACK to the ruby start code (called in dfhack from the dedicated ruby thread).\n(commit c89434 ; should be in the next dfhack version)\n\nIt still segfaults on my machine as soon as df starts with either a libruby v1.9.3 or 2.1.X (on linux, debian unstable) ; let me know if it works for you on windows.","files":null},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417351468,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMDI1MDkzMg=="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417354365,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMDI1NDc4MQ=="},"added":["bug (developer confirmed)"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417354393,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MjAwMjU0ODYy"},"added":[],"removed":["bug (developer confirmed)"]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417354436,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMDI1NDk0Mw=="},"added":["internal"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1428009682,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg5MDQ3NTYw","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-89047560"},"message":"Is this an issue in recent versions of DFHack?","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1429449146,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDI4NDcwMTE3Ng=="},"added":["ruby"],"removed":[]},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1432816145,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEwNjI5NTM5OA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-106295398"},"message":"If this is still an issue - and that seems unlikely, with Ruby2 and months without an update - is it really a DFHack problem if some things don't work with unsupported programs or versions?  If it is, I'd request Python support back; if not it's time to close this issue.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1432818954,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEwNjMwNjE1Ng==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-106306156"},"message":"We still use ruby 1.8, so nothing about this issue should have changed. I'm not sure which ruby libraries, if any, are distributed as binaries - I haven't seen DFHack distribute any, and DFHack scripts shouldn't be using anything platform-specific like win32ole.\n\nI'm not entirely sure what you mean about python support, but that's hardly relevant to this issue - DFHack python support only existed when DFHack was out-of-process, back in 2009 or so.","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439309227,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyOTk0OTkyMA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-129949920"},"message":"@benhell I have been dealing with the same issue at the moment - if you still have it lying around would you be willing to send your shim DLL over and save me a bit of time?","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1439316088,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyOTk5NTI3OA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-129995278"},"message":"Hang on - you're using ruby 1.9 as well? Is there something that requires compiled ruby 1.9 libraries that doesn't work with 1.8?","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439316233,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyOTk5NjI1MA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-129996250"},"message":"I'm trying to use some gems that only work from ruby 1.9. I'm currently bootstrapping building dfhack from source (something I was going to do eventually).\n\nOne of them requires loading stringio.so which doesn't seem to work currently in dfhack (my test script works find from the command line)","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439316585,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEyOTk5ODk1MA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-129998950"},"message":"(this led me here and also describes what I'm trying to do)\nhttp://stackoverflow.com/questions/31940971/loading-external-dlls-e-g-stringio-so-in-embedded-ruby-interpreter?noredirect=1#comment51804056_31940971","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1439318370,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAwODg1NA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130008854"},"message":"Happy to share the code and dll. I was able to do quite a lot with ruby 1.9\nand df34.11 once the shim was in place. I don't have access to it right now\n(at work), but I'll try to post it somewhere late tonight or tomorrow.\n\nI'm trying to use some gems that only work from ruby 1.9. I'm currently\nbootstrapping building dfhack from source (something I was going to do\neventually).\n\nOne of them requires loading stringio.so which doesn't seem to work\ncurrently in dfhack (my test script works find from the command line)\n\n—\nReply to this email directly or view it on GitHub\nhttps://github.com/DFHack/dfhack/issues/271#issuecomment-129996250.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1439318910,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAxNDU4OA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130014588"},"message":"@jimbofreedman: ruby isn't compiled with DFHack, so recompiling DFHack won't help - it just dynamically loads the ruby library at runtime.","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439319094,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAxNTc5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130015796"},"message":"No but my current tack (only just heard from @benhell ) is to rebuild that plugin and add RUBY_INIT_STACK where it belongs for 1.9","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1439319541,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAxODEzNA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130018134"},"message":"Maybe you have a gem path or other path issue in ruby? The command line\ninterpreter usually sets those paths, but the embedded ruby interpreter may\nnot. If you're trying to use 1.9 and it can't find stringio, then you may\nhave path problems. If it can find stringio but crashes, then it is a shim\nissue.  Just a thought.\n\nI agree that rebuilding dfhack won't help since dfhack just dynamically\nloads the ruby dll. That's why the shim workaround actually works.\n\n(Regardless, you'll need a shim or your require statement will probably\ncrash.)\nOn Aug 11, 2015 11:48 AM, \"Lethosor\" notifications@github.com wrote:\n\n\u003e @jimbofreedman https://github.com/jimbofreedman: ruby isn't compiled\n\u003e with DFHack, so recompiling DFHack won't help - it just dynamically loads\n\u003e the ruby library at runtime.\n\u003e \n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e https://github.com/DFHack/dfhack/issues/271#issuecomment-130014588.","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1439319641,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAxODY3Mw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130018673"},"message":"Whoops, have to disagree with myself. You can rebuild the plugin with the\nstack init included, it's just a hassle.\nOn Aug 11, 2015 11:59 AM, \"Ben Hellerstein\" ben.hellerstein@gmail.com\nwrote:\n\n\u003e Maybe you have a gem path or other path issue in ruby? The command line\n\u003e interpreter usually sets those paths, but the embedded ruby interpreter may\n\u003e not. If you're trying to use 1.9 and it can't find stringio, then you may\n\u003e have path problems. If it can find stringio but crashes, then it is a shim\n\u003e issue.  Just a thought.\n\u003e \n\u003e I agree that rebuilding dfhack won't help since dfhack just dynamically\n\u003e loads the ruby dll. That's why the shim workaround actually works.\n\u003e \n\u003e (Regardless, you'll need a shim or your require statement will probably\n\u003e crash.)\n\u003e On Aug 11, 2015 11:48 AM, \"Lethosor\" notifications@github.com wrote:\n\u003e \n\u003e \u003e @jimbofreedman https://github.com/jimbofreedman: ruby isn't compiled\n\u003e \u003e with DFHack, so recompiling DFHack won't help - it just dynamically loads\n\u003e \u003e the ruby library at runtime.\n\u003e \u003e \n\u003e \u003e —\n\u003e \u003e Reply to this email directly or view it on GitHub\n\u003e \u003e https://github.com/DFHack/dfhack/issues/271#issuecomment-130014588.","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439320053,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDAyMjQ1Nw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130022457"},"message":"I thought it might be a path issue but when I move stringio.so somewhere else, the error changes to \"cannot load such file\", which suggests it isn't being found.\n\nRe: your second message yes that's my plan, but my long-term intentions probably involve building dfhack anyway so I thought I might as well.\n\nIt's not been a fun hour or two with trying LibXML on Windows etc. - seriously considering moving over my Linux machine even though it doesn't have all the power for actually playing the game...","files":null},{"type":3,"author":{"id":"94c7f108805ca0f3ade9242b9641e22bf3e2f43f"},"timestamp":1439345697,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDEzNjc3Mw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130136773"},"message":"Hey, so sorry to sound naive here, but looking around the source trying to help out I could only find where Windows Ruby is linking against `MSVC` Ruby. I don't know how exactly `dfhack` was compiled, but that could cause problems with RubyInstaller (`mingw`) Ruby.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1439346490,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDEzNzg3NA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130137874"},"message":"Anyway, if you're not familiar with DFHack, the Ruby libraries are pre-compiled (stored [here](https://github.com/DFHack/dfhack/tree/master/plugins/ruby)), and DFHack needs to be compiled with MSVC 2010 on Windows to be binary-compatible with DF. I don't know who originally compiled the Windows library (@jjyg?), but I suspect it used the same compiler.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1439346880,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDEzOTYwMA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130139600"},"message":"Oh, do you mean that RubyInstaller's libraries (stringio, etc.) might not work with DFHack?","files":null},{"type":3,"author":{"id":"94c7f108805ca0f3ade9242b9641e22bf3e2f43f"},"timestamp":1439348284,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDE0MTk3Mw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130141973"},"message":"Right, I'm not sure but I do know that that could cause loads of problems. Loading a `mingw` dll from a `msvc` that is.\n\nOf course, I feel seriously inadequate when situations like these come up because **I don't know** how or why just that it's something to look for when loading these kinds of things. But that could be why just dropping a RubyInstaller DLL in as a replacement doesn't work.","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439348389,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDE0MjExNw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130142117"},"message":"The DLL is loaded at run-time - I would have thought as long as the symbols match, and the code fulfills contracts, there won't be a problem.","files":null},{"type":3,"author":{"id":"94c7f108805ca0f3ade9242b9641e22bf3e2f43f"},"timestamp":1439349122,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDE0NDM0Mg==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130144342"},"message":"I mean, I don't know for sure. But if I remember correctly they both export their functions a bit differently. I tried to look into this when I took over RubyInstaller maintenance, but I seriously found myself stuck at not knowing enough about compiler toolchain internals.\n\nYou could always download a [RubyInstaller 1.8.7 release](https://bintray.com/oneclick/rubyinstaller/rubyinstaller/1.8.7-p330/view#files) and try it though, just see what happens?\nDownload the `7z` and grab the `dll` out of it.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1439351359,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDE1MDUxOQ==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130150519"},"message":"As I understand it, the main issue with MSVC binary compatibility is STL classes. Ruby is largely written in C, so I wouldn't expect as many MSVC compatibility issues, but there could be other incompatibilities between MSVC and mingw.","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1439356636,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDE2OTk1OA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130169958"},"message":"I used the Ruby 1.9 dll (taken from the Ruby Installer which was built with mingw) together with the shim dll (compiled with the DevKit for that version of Ruby) successfully.  The exported DLL functions appear to be binary-compatible with one another, and once you're inside the Ruby interpreter, it largely keeps to itself except for the interactions with DFHack-imported DF objects.  However, access to those objects is defined in a close-to-the-metal manner (generally in terms of pointer offsets, if my memory is right) which appeared to work with 1.9.  That said, it's been awhile since I did this, so I may have forgotten something.  \n\nI think the following code can be compiled from a command prompt after running devkitvars.bat from the ruby DevKit.  Of course, change \"/dev/Ruby193-p327\" to wherever you installed Ruby (c:\\Ruby is not uncommon).  Then sub out the ruby dll in the DFHack folder for the shim and make sure the Ruby Installer version of Ruby is on the path when you run DFHack.\n\n https://gist.github.com/benhell/cca9884ffe7f34b067a1\n\nI also have the compiled DLL, but I don't think that I can post it here (and you shouldn't trust random binaries anyway).  Please let me know if you encounter any difficulties.","files":null},{"type":3,"author":{"id":"e0febdccfbf3ff2996acceac850adf80c0a81583"},"timestamp":1439395002,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDEzMDM1NDE1OA==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-130354158"},"message":"![image](https://cloud.githubusercontent.com/assets/7499526/9228873/613a6d94-4112-11e5-9015-93cdf6a5f3be.png)\n\nI've built my own dfhack ruby plugin linked against the ruby-2.1.4 on my system (also uses \u003cruby.h\u003e etc.). I haven't exactly stress-tested it yet but it loads and I can use gems I've installed.\n\nIs there any interest in this? My use case is a bit niche - can't see much point in upgrading for the sake of it.","files":null},{"type":3,"author":{"id":"ce6dc54f709c7890219ea769f255cdfd012cca6b"},"timestamp":1446218371,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MjU1Mzg3Nw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-152553877"},"message":"@benhell, what does your shim do that the dfhack plugin doesn't ? ruby_init_stack() is in dfhack since the original bug report (more than 1year ago) : see https://github.com/DFHack/dfhack/blob/master/plugins/ruby/ruby.cpp#L411\n\nThe dfhack plugin code is written so that any ruby dll binary could be dropped in-place instead of the one shipped with dfhack, as long as a minimal binary compatibility with ruby1.8 is preserved. The only ABI dependencies on the ruby dll are listed in the plugin, lines 288-320.\n\nAfaik the ABI should be compatible with all ruby, except latest ruby2 compiled with the USE_FLONUM macro. In this case the binary value of Qnil and Qtrue changes so that may break a few things in dfhack, and i think the rb_float_new export is replaced by rb_flot_new_in_heap, so that may prevent the dfhack plugin to load at all (it refuses to load if it can't find all the expected symbols in the ruby dll).","files":null},{"type":3,"author":{"id":"79a890393849d3d30e4552cb0fed0ecd393d9a9f"},"timestamp":1446218568,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1MjU1NDcyNw==","github-url":"https://github.com/DFHack/dfhack/issues/271#issuecomment-152554727"},"message":"If init_stack is included now, then my shim shouldn't be needed.\nOn Oct 30, 2015 8:19 AM, \"Yoann Guillot\" notifications@github.com wrote:\n\n\u003e @benhell https://github.com/benhell, what does your shim do that the\n\u003e dfhack plugin doesn't ? ruby_init_stack() is in dfhack since the original\n\u003e bug report (more than 1year ago) : see\n\u003e https://github.com/DFHack/dfhack/blob/master/plugins/ruby/ruby.cpp#L411\n\u003e \n\u003e The dfhack plugin code is written so that any ruby dll binary could be\n\u003e dropped in-place instead of the one shipped with dfhack, as long as a\n\u003e minimal binary compatibility with ruby1.8 is preserved. The only ABI\n\u003e dependencies on the ruby dll are listed in the plugin, lines 288-320.\n\u003e \n\u003e Afaik the ABI should be compatible with all ruby, except latest ruby2\n\u003e compiled with the USE_FLONUM macro. In this case the binary value of Qnil\n\u003e and Qtrue changes so that may break a few things in dfhack, and i think the\n\u003e rb_float_new export is replaced by rb_flot_new_in_heap, so that may prevent\n\u003e the dfhack plugin to load at all (it refuses to load if it can't find all\n\u003e the expected symbols in the ruby dll).\n\u003e \n\u003e —\n\u003e Reply to this email directly or view it on GitHub\n\u003e https://github.com/DFHack/dfhack/issues/271#issuecomment-152553877.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1446235906,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDUwODA2MDEx"},"status":2}]}