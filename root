{"version":1,"ops":[{"type":1,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1482011118,"metadata":{"github-id":"MDU6SXNzdWUxOTYyNDQ2MTM=","github-url":"https://github.com/DFHack/dfhack/issues/1048","origin":"github"},"title":"Access violations inside ruby cause a whole-app quit","message":"Memory accesses from inside Ruby script code that cause an access violation cause an appquit rather than an appcrash. This means that something is catching them and choosing to exit the entire app instead of allowing the exception to reach the top of the stack (which would cause the runtime to cause a crash and allow a JIT debugger to launch). If we can catch them and exit, why can't we catch them and resume?\n\nMemory accesses that cause access violations from inside ruby should therefore be caught and the ruby executive reset.  The Lua interpreter, if I'm not mistaken, already does this.","files":null}]}