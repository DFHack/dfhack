{"version":1,"ops":[{"type":3,"author":{"id":"0a338ca6d226dbfd2668871e2d90aeb43b135d56"},"timestamp":1285088202,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMDg0Mw==","github-url":"https://github.com/DFHack/dfhack/issues/44#issuecomment-420843"},"message":"Backtrace from debug compile:\n\n```\n\\#0  0xffffe424 in __kernel_vsyscall ()\n\\#1  0xb7acd7ff in raise () from /lib/libc.so.6\n\\#2  0xb7acf140 in abort () from /lib/libc.so.6\n\\#3  0xb7d0c7dd in __gnu_cxx::__verbose_terminate_handler() () from /usr/lib/libstdc++.so.6\n\\#4  0xb7d0a533 in ?? () from /usr/lib/libstdc++.so.6\n\\#5  0xb7d0a56f in std::terminate() () from /usr/lib/libstdc++.so.6\n\\#6  0xb7d0a6d1 in __cxa_throw () from /usr/lib/libstdc++.so.6\n\\#7  0xb7f9eafa in DFHack::NormalProcess::read (this=0x804f100, \n    offset=2826899832, size=48, \n    target=0x80e8b00     \"\\350\\243\\300\\267\\350\\243\\300\\267\\377\\377\\377\\377d6307bd39b6271ba89bbdd953d27c84d\")\n    at /home/michael/prog/dfhack/library/DFProcess-linux.cpp:366\n\\#8  0xb7f80dd3 in DFHack::Maps::Start (this=0x806c1b0)\n    at /home/michael/prog/dfhack/library/modules/Maps.cpp:189\n\\#9  0x0804a9ad in main ()\n    at /home/michael/prog/dfhack/tools/supported/reveal.cpp:69\n```","files":null},{"type":3,"author":{"id":"0a338ca6d226dbfd2668871e2d90aeb43b135d56"},"timestamp":1285275391,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjI2OA==","github-url":"https://github.com/DFHack/dfhack/issues/44#issuecomment-426268"},"message":"Anything else I can provide? I'd love to get this working so I can avoid the need to move my game to my Windows box just to dfcleanmap.","files":null},{"type":3,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1285562044,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzMTQwMg==","github-url":"https://github.com/DFHack/dfhack/issues/44#issuecomment-431402"},"message":"Hmm. I've been seeing similar reports for some time now. It seems that the position where the data is placed in memory depends on some kernel internals.\nSo, try a different kernel (PAE, non-PAE, etc.).\n31.13 works fine here... I'll have to isolate the issue and possibly add the same kind of rebase mechanism as the Windows versions of DFHack use.\n\nSo, some things you can do:\nuname -a\nis ASLR enabled? try:\ncat /proc/sys/kernel/randomize_va_space","files":null},{"type":3,"author":{"id":"0a338ca6d226dbfd2668871e2d90aeb43b135d56"},"timestamp":1285595915,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzMjA4MA==","github-url":"https://github.com/DFHack/dfhack/issues/44#issuecomment-432080"},"message":"Yep, turning off ASLR makes all the difference. Everything works fine now.","files":null},{"type":3,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1300587185,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg5NDM5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/44#issuecomment-894396"},"message":"Looks resolved!","files":null},{"type":4,"author":{"id":"4f2823b111a40d19603a11dc9e0f3c589bea0f03"},"timestamp":1300587185,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTc0NzE="},"status":2}]}