{"version":1,"ops":[{"type":1,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1590201490,"metadata":{"github-id":"MDU6SXNzdWU2MjM1NjM4ODI=","github-url":"https://github.com/DFHack/dfhack/issues/1576","origin":"github"},"title":"Strange items.other/items.bad misalignment (0.47.04 linux64)","message":"Since #1558 was merged, various fields of `world` have been misaligned, at least on linux64. To paraphrase my (and @BenLubar's) findings on IRC:\n* `world.items.other.BAD` and `world.items.bad` were actually the same vector, they just overlapped before (`items_other_id` was one larger than the size of the `\u003cstatic-array\u003e`). Now that the static-array is one larger, things after `items` are misaligned. Notably, immediately after `items` are `artifacts` and `jobs`, and the latter (due to having a vtable) causes crashes on world load in `buildings_onUpdate()`.\n* Commenting out `world.items.bad` causes DF to segfault *on startup* because `cur_savegame` is misaligned. But strangely, the position of `jobs` is *correct* compared to 0.47.04-r1,, and `jobs` is well before `cur_savegame`. The size of `items` also matches 0.47.04-r1 after this change. I'm not really sure how this is possible.\n* It's a bit harder to remove `BAD` from the `items_other_id` enum (the only way I see to shrink the `\u003cstatic-array\u003e` at this point) because there's a `job_item_vector_id::BAD` item that depends on it. I don't know if `job_item_vector_id::BAD` is really necessary, though.\n\nBasically, I have no idea what was causing the weird alignment issues I was seeing later on in `world` after fixing the size of `items`. Any help would be appreciated.","files":null}]}