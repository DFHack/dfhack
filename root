{"version":1,"ops":[{"type":1,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1416813006,"metadata":{"github-id":"MDU6SXNzdWU0OTg2MjA3OA==","github-url":"https://github.com/DFHack/dfhack/issues/406","origin":"github"},"title":"Issues cleanup project - closing the old and tagging the rest","message":"(I'll keep updating this post as I continue looking into old issues; those which have been dealt with are no longer listed)\n\nIssues which can be closed without further action:\n- add-spatter plugin crashes the game on OSX #205 - Only replicable with Masterwork raws\n- Superdwarf arguments #217 - Fixed in 40.13-r1\n- Errors reading teleportbase.lua #233 - not a standard DFHack script (masterwork with 34.14-r5; presumably a precursor of `teleport.lua`)\n- Ruby 1.9 - require an \".so\" file crashes (need to init stack?) #271 - Fixed \n- std::hash template #331 - problem with old GCC version, not code\n\nIssues which may be closable, or require minor work:\n- workflow CRAFTS does not recognize wax craft jobs #154 - I'm pretty sure this has been resolved (but not certain).\n- autolabor tells legends not to work #174 - Again, I'm pretty sure this has been resolved (but not certain).\n- Improvement for LUA API docs #202 - A fix was turned down (#207); is this still an issue?\n- Some Issues with Stonesense (Ramps + Crashing) #259 - actually a Stonesense issue, could be opened there\n- 40.8-r2: Stonesense: stops working after unload plugin #287 - Might be fixed by recent changes? (and could be moved to the ssense issue tracker)\n\nLabels:  there are currently seven defined; `2.0`, `bug`, `idea`, `LEGACY`, `Offsets`, `Part. resolved`, and `Wishlist`.  Due to the non-use of some labels, I suggest a different set:  `bug`, `idea`, and `internal`.  If this sounds good, I'll list labels by issue instead of some example issues for each label.\n- `bug` is for bugs - code not working as intended.  \n  - examples:  #404, #395, #375, #254, #182, etc.\n- `idea` is for ideas, suggestions, wishlist items, etc - not bugs, but things it would be nice to have.  \n  - examples:  #406, #372, #364, #357, #274, etc.\n- `internal` distinguishes issues related to the internal workings of DFHack (eg problems with offsets, alternative libraries, or compile errors) from user-facing issues such as scripts or available features.\n  - examples: #414,  #404, #331, #276, #274, etc.","files":null}]}