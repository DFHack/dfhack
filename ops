{"version":1,"ops":[{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1542394888,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE5NzIwMDIzNTA="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1579779457,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3NzY0NDUxNw==","github-url":"https://github.com/DFHack/dfhack/issues/1413#issuecomment-577644517"},"message":"- You need separate bases for fortress and adventure mode. The script uses fortress mode for year and adventure mode for day. Presumably the script ought to detect the mode used and apply the correct bases.\n- julian_day shouldn't have +1 added, but day should (the julian_day addition is what causes the last day of the year to overflow into the 13:th month).\n- time_of_day should be modulo 86400 or 1200 depending on mode: division by number of days in a year doesn't make sense.\n\nSomething like this (not tested, and the game mode determination is a guess based on a quick test).\n\n```\n--prints current time and position\n--[====[\n\nposition\n========\nReports the current time:  date, clock time, month, and season.  Also reports\nlocation:  z-level, cursor position, window size, and mouse location.\n\n]====]\n\nlocal months = {\n    'Granite, in early Spring.',\n    'Slate, in mid Spring.',\n    'Felsite, in late Spring.',\n    'Hematite, in early Summer.',\n    'Malachite, in mid Summer.',\n    'Galena, in late Summer.',\n    'Limestone, in early Autumn.',\n    'Sandstone, in mid Autumn.',\n    'Timber, in late Autumn.',\n    'Moonstone, in early Winter.',\n    'Opal, in mid Winter.',\n    'Obsidian, in late Winter.',\n}\n\n--Fortress mode counts 1200 ticks per day and 403200 per year\n--Adventurer mode counts 86400 ticks to a day and 29030400 ticks per year\n--Twelve months per year, 28 days to every month, 336 days per year\n\nlocal julian_day = math.floor (df.global.cur_year_tick / 1200)\nlocal time_of_day = math.floor (df.global.cur_year_tick % 1200)\n\nif df.global.gamemode == 1 then  --### A guess 0 seems to be fortress, 1 adventure, 3 no mode, and presumably 2 is legends mode\n  julian_day = math.floor (df.global.cur_year_tick_advmode / 86400)\n  time_of_day = math.floor (df.global.cur_year_tick_advmode % 86400)\nend\n\nlocal month = math.floor(julian_day / 28) + 1 --days and months are 1-indexed\nlocal day = julian_day % 28 + 1\n\nlocal second = time_of_day % 60\nlocal minute = math.floor(time_of_day / 60) % 60\nlocal hour = math.floor(time_of_day / 3600) % 24\n\nprint('Time:')\nprint('    The time is '..string.format ('%02d:%02d:%02d', hour, minute, second))\nprint('    The date is '..string.format ('%05d-%02d-%02d', df.global.cur_year, month, day))\nprint('    It is the month of '..months [month])\n--TODO:  print('    It is the Age of '..age_name)\n\nprint('Place:')\nprint('    The z-level is z='..df.global.window_z)\nprint('    The cursor is at x='..df.global.cursor.x..', y='..df.global.cursor.y)\nprint('    The window is '..df.global.gps.dimx..' tiles wide and '..df.global.gps.dimy..' tiles high')\nif df.global.gps.mouse_x == -1 then print('    The mouse is not in the DF window') else\nprint('    The mouse is at x='..df.global.gps.mouse_x..', y='..df.global.gps.mouse_y..' within the window') end\n--TODO:  print('    The fortress is at '..x, y..' on the world map ('..worldsize..' square)')```","files":null}]}