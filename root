{"version":1,"ops":[{"type":1,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1420525799,"metadata":{"github-id":"MDU6SXNzdWU1MzQ4NTcyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/479","origin":"github"},"title":"Replace `needs_porting/copypaste.cpp` with a Quickfort blueprints generator","message":"The original plugin was designed to copy a section of the fortress to another section.  \n\nI believe that generating blueprints is a better way to go though; as it's less 'cheaty', allows multi-fort usage and sharing, and the blueprints can be implemented with other tools (eg digfort and fastdwarf).\n\nThe command would be something like `make-blueprint \u003cvolume\u003e \u003cplan_name\u003e [dig [build [place [query]]]]` (see [QF syntax](http://www.joelpt.net/quickfort/#editing-blueprints)), and the script would output the blueprint for the corresponding phase or phases.\n\nThe dig phase would read the shape of rooms to carve out, and the blueprint could be implemented by `digfort.rb`.  The build phase would place all buildings, furniture, and constructions, and the blueprint might be implemented by the new `fortplan` plugin.  The place phase records stockpiles, and would have to be implemented by Quickfort.  The query phase records created rooms and is likewise not yet possible with DFHack.\n\nThese could be implemented in stages, and would be a giant leap for fortress construction techniques - a way to eliminate the complex and tedious process of writing a blueprint.  Instead you could just decide to record something you like!","files":null}]}