{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502066200,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU0MzQyNA==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320543424"},"message":"@pronvit this was changed in https://github.com/DFHack/dfhack/commit/8916aba3bf29f81a426485a779a623edd4b1be61","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502066204,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDExOTQ2NDM0MTI="},"added":["build"],"removed":[]},{"type":3,"author":{"id":"54edb2db9eb9b7cc6fbbb0681df88d5b1d14abe6"},"timestamp":1502067024,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU0NDI5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320544296"},"message":"Something probably didn't compile (although I don't see what it could be), so I disabled it temporarily and then no-one noticed. Sorry.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502067322,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU0NDYxNw==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320544617"},"message":"No worries. I'm checking on it now (I was working on another DFHack project earlier, but I've put that on hold for now).\n\nIt's worth noting that it could be broken in-game too, though, even if it does compile.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502067649,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU0NTAxMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320545011"},"message":"It looks like the only things breaking it are missing includes/namespaces. I have no idea how that only turned up when you tried compiling for Win64, since it shouldn't be specific to that. (People were using GCC 4.8+ well before the 64-bit changes, so it should've been breaking with that before too.)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502067755,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU0NTEyMw==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320545123"},"message":"Not sure if that commit fixes it on Windows, but it does seem to at least build with GCC 4.8 now.","files":null},{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1502082272,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDU2OTQ2NA==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320569464"},"message":"Win64 build fails over const invariance violations:\n\n```\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\nError\tC3848\texpression having type 'const PointComp' would lose some const-volatile qualifiers in order to call 'int32_t PointComp::operator ()(df::coord,df::coord)' (compiling source file C:\\Users\\Kelly\\Documents\\GitHub\\dfhack\\plugins\\diggingInvaders\\diggingInvaders.cpp)\tdiggingInvaders\tC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\xtree\t1994\t\nError\tC3848\texpression having type 'const PointComp' would lose some const-volatile qualifiers in order to call 'int32_t PointComp::operator ()(df::coord,df::coord)' (compiling source file C:\\Users\\Kelly\\Documents\\GitHub\\dfhack\\plugins\\diggingInvaders\\diggingInvaders.cpp)\tdiggingInvaders\tC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\xtree\t1999\t\nError\tC3848\texpression having type 'const PointComp' would lose some const-volatile qualifiers in order to call 'int32_t PointComp::operator ()(df::coord,df::coord)' (compiling source file C:\\Users\\Kelly\\Documents\\GitHub\\dfhack\\plugins\\diggingInvaders\\diggingInvaders.cpp)\tdiggingInvaders\tC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\\xtree\t2009\t\n\n```","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502110069,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDY1NDEwMA==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320654100"},"message":"The operator simply need to be const : \nhttps://stackoverflow.com/questions/19816139/expression-having-type-const-comparevptrs-would-lose-some-const-volatile-quali\n\nAnd in theory this has nothing to do with x64 ...","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502110415,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDY1NTM1NQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320655355"},"message":"I know. We had to switch compilers on Windows, so maybe the old one was tolerant of that somehow.","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502113962,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDY2OTUxMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320669511"},"message":"Some compiler just made inteligent guessing and add the const to the operator if it is not called in another place of the program. gcc made this kind of thing in my memory.\n\nBut it should have to throw some warning, even on old compiler ...","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502114307,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDY3MTA0NQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320671045"},"message":"I know it *should* produce an error/warning, but it *didn't*. Not with GCC 4.x or MSVC 2010, at least. It's possible that the missing-include/namespace errors snuck in due to some header changes after diggingInvaders was disabled, but the diggingInvaders plugin itself hasn't had any significant changes since 2015.\n\nAnyway, sorry about this getting forgotten. I only noticed that diggingInvaders was disabled recently myself. (I can hardly blame mifki for it, either - nobody wants to deal with a plugin spewing hundreds of errors when they're adding 64-bit support to the DFHack core.)","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502114417,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMDY3MTUwNw==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-320671507"},"message":"No problem, just noticed that myself when i try to use it :p \nDid you know when a corrected release will be out ?","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1502239815,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTEyMTMyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321121325"},"message":"@msnbcorp what platform are you on? This should be built, now, but I haven't checked it extensively. I could provide a build if you'd like to test it.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1502260863,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTE2NzQyOA==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321167428"},"message":"I should also mention that this hasn't been updated for multi-tile trees / climbing, so it will likely get confused in some situations involving climbing. I think it'll work for \"immediate\" climbing but if they have to dig then climb then walk it'll think they can't do it.","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502301806,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTMzNDg5MA==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321334890"},"message":"@lethosor I was speaking mostly about the Dfthread release given here : http://www.bay12forums.com/smf/index.php?topic=164123.0 which is tied to a \"real\" release on github.\n\nI am on windows x64 but it's just to have everyone synchro ^^ \n\n@expwnent : Don't see exactly when it play a role ... with a quick look on the code it seems to use DF classic path algo to have the information of \"dwarf reachable or not\" in first place, so whatever the signal is, it's should begin good imho. After that the only pathing problem solved by the system is the \"how to reach the dwarf\" . If climbing does not count it should simply dig to a place where there is no climbing to join the dwarf no ?\nI don't see a situation in real fortress where the problem occurs ... imho","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1502484812,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTkxNjIyNw==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321916227"},"message":"It is possible that they will prefer digging over climbing sometimes. The code is mostly Dijkstra's algorithm with a complicated cost function.","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502484911,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTkxNjU5OQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321916599"},"message":"Of course but the result is the same to make difficulties for the players :p \nIt is in fact slightly better that ennemies don't follow exactly what the player intend to be ^^","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1502485109,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTkxNzIzOQ==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321917239"},"message":"My goal in writing it was to make it so you can't just wall yourself in. I tried to make it so they dig as little as possible, because you can't undig what they dig and it would suck if they ruined your beautiful fort design when they could have just taken a longer route in.","files":null},{"type":3,"author":{"id":"8fab4869f6db91cb5c7c587c9d6f4fe7d75cbe53"},"timestamp":1502485333,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyMTkxODAzNg==","github-url":"https://github.com/DFHack/dfhack/issues/1145#issuecomment-321918036"},"message":"Well, it's the game when you search for difficulties no ? You can de-dig by building wall in hole so it's not a great problem. If players don't want to have big holes well, they must design pretty simple routes to the forts. It is pretty rare to have a fort when you have to use the climbing to join the meeting hall :p \n\nHowever, you do what you want, if you want to minimize it i guess that it is quite easy to include the climbing in the cost function ... I guess :p","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1511472219,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTM1NjMzNjMwMA=="},"status":2}]}