{"version":1,"ops":[{"type":1,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1498686807,"metadata":{"github-id":"MDU6SXNzdWUyMzkzMDg5NDY=","github-url":"https://github.com/DFHack/dfhack/issues/1122","origin":"github"},"title":"repeat-utils functions can't cancel themselves","message":"This was pointed out by [Atkana](http://www.bay12forums.com/smf/index.php?topic=164123.msg7497491#msg7497491) on the forums:\n\n\u003e ```lua\n\u003e local blah = 1\n\u003e local id = \"foo\"\n\u003e local repeatUtil = require 'repeat-util'\n\u003e \n\u003e local function doStuff()\n\u003e     print(\"Blah: \" .. blah)\n\u003e     blah = blah +1\n\u003e     print(\"Blah is now \" .. blah)\n\u003e     if blah \u003e 10 then\n\u003e         print(\"Blah is more than 10. Stopping.\")\n\u003e         print(\"Has supposedly cancelled = \" .. tostring(repeatUtil.cancel(id)))\n\u003e     end\n\u003e end\n\u003e \n\u003e repeatUtil.scheduleEvery(id,50,\"frames\",doStuff)\n\u003e ```\n\nThis doesn't work because repeat-utils schedules the next call of doStuff() *after* doStuff() returns, regardless of what doStuff() does. Scheduling it before doStuff() could result in error message spam, but tracking calls to cancel() and avoiding rescheduling doStuff() if it cancelled itself could work.","files":null}]}