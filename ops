{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447595877,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjgxMzUzMw==","github-url":"https://github.com/DFHack/dfhack/issues/748#issuecomment-156813533"},"message":"That version isn't current. Can you try using r4 from this repo (under \"Releases\")?","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447595906,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ2NDc4MjM5MA=="},"added":["crash/hang"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447595906,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ2NDc4MjM5MQ=="},"added":["search"],"removed":[]},{"type":3,"author":{"id":"41351f340d450d83b1b4f7ee2bf3df35b0b720cf"},"timestamp":1447598020,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjgxNTEzNA==","github-url":"https://github.com/DFHack/dfhack/issues/748#issuecomment-156815134"},"message":"DFHack version 0.40.24-r4 (release)\n\n[dwarfort.exe_2015-11-15-152928_Sinans-iMac.txt](https://github.com/DFHack/dfhack/files/34885/dwarfort.exe_2015-11-15-152928_Sinans-iMac.txt)\n\nSteps to reproduce:\nm (military) - c (create squad) - enter - right - right - q - enter a query which does not match any dwarf - enter - enter -\u003e Crash","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447603250,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ2NDgwNzU4Ng=="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447603326,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjgyMjQ3Ng==","github-url":"https://github.com/DFHack/dfhack/issues/748#issuecomment-156822476"},"message":"Oh, that makes sense. The search plugin tries to restore the original list when you press Enter but maintain the unit you have selected (so DF selects the correct unit). It crashes when trying to determine the selected unit when the list is empty, since it assumes the cursor position (0) is always a valid index into the list (which it isn't in this case).","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447604195,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjgyNTM2OQ==","github-url":"https://github.com/DFHack/dfhack/issues/748#issuecomment-156825369"},"message":"Should be fixed for the next release.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447604195,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDY0ODEyMDEw"},"status":2},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447641097,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MTQ1NA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156891454"},"message":"It could definitely be optimized. For comparison, how long does reveal take? (Also, does fix-unit-occupancy take longer after revealing everything? I thought I only had it check revealed blocks, but that could be a major improvement if not.)","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447641593,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ2NDk3NTM5NQ=="},"added":["performance"],"removed":[]},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447641642,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MjQ3OA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156892478"},"message":"It does only check revealed blocks(tiles?), but this runs inside the 16x16 inner loops, so it still loops 256 times for each `world-\u003emap.map_blocks`, but  this stops it checking occupancy versus `world-\u003eunits.active`   : \n\n``` C++\n    if (block-\u003edesignation[x][y].bits.hidden)\n                    continue;\n```\n\nreveal is basically instantaneous!","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447641739,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MjY4MA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156892680"},"message":"After running reveal, fix-unit-occupancy time increases from 6.0s to 8.9s","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447642134,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5NDk2Mw==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156894963"},"message":"I can see that reveal does the same 16x16 loops for each map_block, so that part must be super fast.\n\nMaybe it's the check of each tile against `world-\u003eunits.active` that's so slow?  I can test again with the same map but fewer dwarves.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447642918,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwMDQwNQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156900405"},"message":"Interesting.  With total number of alive dwarves reduced from 268 to 193  (27% reduction), total time for fix-unit-occupancy reduces by only 0.05s!  From 6.0s to 5.95s, barely anything.\n\nSo it's not the time it takes to loop through map blocks (which reveal does instantaneously), and it doesn't seem to be the unit checking.\n\nI can't see any other calls that look like they might be major time sinks, but I don't know enough about everything to be sure.   I'll put some timing logging in to see exactly where the time is spent.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447644413,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwMzk1NQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156903955"},"message":"units.active includes all wildlife as well.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447646183,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwOTQxOQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156909419"},"message":"Ah, good to know.   I have zero pets and tame animals in this save (I slaughtered them en-masse to save FPS for some other testing), but I suppose there must be a few animals in the wild.\n\nActually, 24 according to Units-\u003eOthers.\n\nSo it was around 6.0s with 268 + 24 = 292 units, versus 5.95s with 193 + 24 = 217 units, a 25% reduction in unit count but a basically negligible performance improvement.\n\nWhich is odd because, as you probably already know, findUnit() takes all the time:\n\nfix-unit-occupancy: elapsed time: 10.1065 secs\nfix-unit-occupancy: time hidden: 0.164711 secs\nfix-unit-occupancy: time findUnit: 9.05713 secs\nfix-unit-occupancy: time cur_occup: 0.148844 secs\n\n('hidden' and 'cur_occup' are all the rest of the code that occur before and after the findUnit() call respectively, in the inner loop)","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1447654247,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkyNTcyNQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156925725"},"message":"I would disallow (or at least discourage) this to be run periodically. There is 0 reasons why it must be done. Instead we should focus on scripts and plugins that mess up the occupancy in the first place and add to the docs: if you think that something is messed up (e.g. can't build in empty place) try running this.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447682713,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzAzODk2Nw==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157038967"},"message":"Last night lethosor fixed the performance so completely that it now runs 2000 times faster :)  0.004 seconds on my large fort, compared to 8 seconds before.\n\nSo performance is no longer a reason to not run it.  But @warmist, you are saying it's not a good thing run anyway?\n\nI must admit I possibly misunderstood what it does.  When I first saw the new feature, and looked at the bug report, I thought this was a DF bug that could happen in the normal game.  But then when I tested it last night for lethosor, he showed me that it can happen when scripts, like gm-editor, do a bad edit.\n\nSo is this a bug that only happens when DFHack-type scripts are used?  Or can it happen from a normal DF game?\n\nIf the former, then I agree there is no reason for 99% of users to run this.  If the latter, then it does sound like a fix that could be run in the background,  just in case.\n\nEither way: is there a _risk_ to running it regularly?  It seems quite safe to me, only fixing tiles that are definitely broken?  But of course I don't yet understand all the systems and repercussions.\n\nIn any case, at least performance is no longer a problem at all :)","files":null},{"type":3,"author":{"id":"88b79c31fdfd52952dafcabb16168259734368cc"},"timestamp":1447689783,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzA4MDM1NQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157080355"},"message":"There is zero risk (or at least close to zero). But the idea itself is flawed: it encourages script makers to make bad scripts and just hope that this will fix it.\nAlso there is the idea of \"death by a thousand cuts\". Meaning that each thing that you add to happen (no matter how fast) periodically the program itself slows down and the sum of a lot (there is already many dfhack things that run periodically - even each frame) such plugins/scripts makes game slow. What is worse: there is no way to optimise such slowness because it's just a lot of fast things that just add up.\nTl;dr: let's not encourage doing stuff that is not needed and guide script/plugin makers somewhat","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447690925,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzA4NjU0MQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157086541"},"message":"OK thanks.  I had thought that it affected the vanilla game, I did not realise it only applied to issues caused by scripts/plugins.  \n\nIt is already not enabled by default.  Maybe just an update to the documentation, indicating this is only necessary in rare instances to fix problems caused by other scripts/plugins, and not for the vanilla game?","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447694448,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzEwNTkyMQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157105921"},"message":"There are occupancy bugs that can occur in vanilla DF - I've encountered at least one without using DFHack. I'm not trying to encourage people to make tools that don't work with occupancy flags properly, but I figured it should support some type of repeat functionality like fix/stuck-doors.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447707659,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzE2ODg4Ng==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157168886"},"message":"http://www.bay12games.com/dwarves/mantisbt/view.php?id=3499 is one, along with with four duplicates reported - I think one was what encouraged me to write this plugin in the first place.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447710196,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzE3OTc3NA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157179774"},"message":"OK great, then I'm definitely going to have it running always then.   Performance is now absolutely negligible and it seems pretty low risk.\n\nI do understand in principle warmist's concern about not wanting to make it common to band-aid fix the effects of bad code, but when a bugfix applies to a DF bug as well as mod/script bugs, then I don't think it can be seen as encouraging bad code.   Besides, it's not like it's on by default and everyone is going to be running it and thus commonly auto-fixing issues that scripts cause.\n\nThanks lethosor for the fast fix (in both senses of the word!)  From the experience I learnt a tiny bit more about the code as well which is always nice.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447712714,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzE5MDcxMQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157190711"},"message":"I don't really have a strong opinion on having it enabled by default, although I'd want to make sure it works well with larger maps first. It could take over 110 MB with a 16x16x200 map, for example, and I could decrease that to around 15 MB just by using individual bits instead of bytes.","files":null},{"type":3,"author":{"id":"e6d3dafe479ac56fd29593e66f6fd7f028b46105"},"timestamp":1447782496,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NzQ1MDYyNA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-157450624"},"message":"There is an extant bug in 0.40.24 (fixed in the upcoming version) that messes up unit occupancy in certain situations involving fluid flows. I would discourage running this repeatedly with slowdown, but it's not a DFHack-exclusive condition.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1448500659,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1OTc3Mjc2OA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-159772768"},"message":"Should be fixed in r5.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1448500659,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDc1MTIxMTg0"},"status":2}]}