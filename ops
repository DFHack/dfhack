{"version":1,"ops":[{"type":3,"author":{"id":"bf1e6ae4b32e6d9ba21d469d77f9658170fb7e60"},"timestamp":1410702678,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NTI2MTg1","github-url":"https://github.com/DFHack/dfhack/issues/331#issuecomment-55526185"},"message":"Oh, eventually it got to more problems, maybe I was too quick to post that:\n\n```\n[ 51%] Building CXX object library/CMakeFiles/dfhack.dir/modules/EventManager.cpp.o\n/src/package/game/dfhack_git/library/modules/EventManager.cpp: In function 'void removeFromTickQueue(DFHack::EventManager::EventHandler)':\n/src/package/game/dfhack_git/library/modules/EventManager.cpp:90: error: no match for 'operator=' in 'j = tickQueue.std::multimap\u003c_Key, _Tp, _Compare, _Alloc\u003e::erase [with _Key = int, _Tp = DFHack::EventManager::EventHandler, _Compare = std::less\u003cint\u003e, _Alloc = std::allocator\u003cstd::pair\u003cconst int, DFHack::EventManager::EventHandler\u003e \u003e](j)'\n/usr/include/c++/4.4/bits/stl_tree.h:154: note: candidates are: std::_Rb_tree_iterator\u003cstd::pair\u003cconst int, DFHack::EventManager::EventHandler\u003e \u003e\u0026 std::_Rb_tree_iterator\u003cstd::pair\u003cconst int, DFHack::EventManager::EventHandler\u003e \u003e::operator=(const std::_Rb_tree_iterator\u003cstd::pair\u003cconst int, DFHack::EventManager::EventHandler\u003e \u003e\u0026)\n/src/package/game/dfhack_git/library/modules/EventManager.cpp: In function 'void DFHack::EventManager::unregister(DFHack::EventManager::EventType::EventType, DFHack::EventManager::EventHandler, DFHack::Plugin*)':\n/src/package/game/dfhack_git/library/modules/EventManager.cpp:103: error: no match for 'operator=' in 'i = handlers[((int)e)].std::multimap\u003c_Key, _Tp, _Compare, _Alloc\u003e::erase [with _Key = DFHack::Plugin*, _Tp = DFHack::EventManager::EventHandler, _Compare = std::less\u003cDFHack::Plugin*\u003e, _Alloc = std::allocator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e](i)'\n/usr/include/c++/4.4/bits/stl_tree.h:154: note: candidates are: std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e\u0026 std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e::operator=(const std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e\u0026)\n/src/package/game/dfhack_git/library/modules/EventManager.cpp: In function 'void manageTickEvent(DFHack::color_ostream\u0026)':\n/src/package/game/dfhack_git/library/modules/EventManager.cpp:352: error: no match for 'operator=' in 'a = handlers[0].std::multimap\u003c_Key, _Tp, _Compare, _Alloc\u003e::erase [with _Key = DFHack::Plugin*, _Tp = DFHack::EventManager::EventHandler, _Compare = std::less\u003cDFHack::Plugin*\u003e, _Alloc = std::allocator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e](a)'\n/usr/include/c++/4.4/bits/stl_tree.h:154: note: candidates are: std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e\u0026 std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e::operator=(const std::_Rb_tree_iterator\u003cstd::pair\u003cDFHack::Plugin* const, DFHack::EventManager::EventHandler\u003e \u003e\u0026)\nmake[2]: *** [library/CMakeFiles/dfhack.dir/modules/EventManager.cpp.o] Error 1\nmake[1]: *** [library/CMakeFiles/dfhack.dir/all] Error 2\nmake: *** [all] Error 2\n```\n\nI do have a gcc-4.5.0 installed, I can try with that; are there known minimum version requirements? I don't see anything relevant in Compile.rst.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1410707431,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1NTI4NTYw","github-url":"https://github.com/DFHack/dfhack/issues/331#issuecomment-55528560"},"message":"I'd try building with GCC 4.5. If you're only looking for a release (i.e. not for development purposes), you could try [this build](http://dffd.wimbli.com/file.php?id=9693) as well.","files":null},{"type":3,"author":{"id":"bf1e6ae4b32e6d9ba21d469d77f9658170fb7e60"},"timestamp":1411715993,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU2OTI3NjYx","github-url":"https://github.com/DFHack/dfhack/issues/331#issuecomment-56927661"},"message":"It turned out my gcc-4.5 build wasn't in a usable state, so rather than mess about trying to fix it I grabbed latest gcc-4.9.1 instead. I then found a further problem with trying to use the wrong C++ library, and after finding a workaround for that managed to complete 'make'. (I haven't yet tried running it.)\n\nI do see a bunch of warnings all of the same style; the first one is:\n\n```\n[ 39%] Building CXX object library/CMakeFiles/dfhack.dir/Core.cpp.o\nIn file included from /src/package/game/dfhack_git/library/include/df/unit.h:53:0,\n                 from /src/package/game/dfhack_git/library/include/modules/EventManager.h:13,\n                 from /src/package/game/dfhack_git/library/Core.cpp:47:\n/src/package/game/dfhack_git/library/include/df/tile_designation.h:19:38: warning: 'df::tile_designation::\u003canonymous struct\u003e::dig' is too small to hold all values of 'enum df::enums::tile_dig_designation::tile_dig_designation'\n       df::tile_dig_designation dig : 3;\n                                      ^\n```\n\nThere are a couple of g++ bug reports relating to this message, but I can't tell whether this particular case is a g++ bug or a legitimate warning of misuse.\n\nThe config invocation I ended up with looks like this:\n\n```\n/opt/cmake-2.8.0/bin/cmake \\\n  -DCMAKE_INSTALL_PREFIX:PATH=/src/package/game/df_40_10_linux \\\n  -DDL_RUBY:BOOL=OFF \\\n  -DBUILD_RUBY:BOOL=OFF \\\n  -DCMAKE_C_COMPILER=/opt/gcc-4.9.1/bin/gcc \\\n  -DCMAKE_CXX_COMPILER=/opt/gcc-4.9.1/bin/g++ \\\n  -DCMAKE_CXX_LINK_FLAGS=\"-Wl,-rpath -Wl,/opt/gcc-4.9.1/lib\" \\\n  ../dfhack_git\n```\n\nI think this issue can probably be closed: I'm confident enough that the std::hash issue of the title was caused by \"old g++ version provides too-old version of the libstdc++ templates\". I'll leave it a little while for further comments though.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1411759524,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3MDA4Nzg1","github-url":"https://github.com/DFHack/dfhack/issues/331#issuecomment-57008785"},"message":"Those struct size errors are normal in GCC 4.8+ (and possibly earlier versions as well).","files":null},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417351224,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIwMDI1MDU3Mg=="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417354705,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0OTg1NTU2","github-url":"https://github.com/DFHack/dfhack/issues/331#issuecomment-64985556"},"message":"c++11 is required to build DFHack.\n\nThose warnings are normal. Technically they are a minor issue. If possible we should signal the compiler that it's ok so it compiles without warnings. False positives lead to important warnings getting buried or ignored.","files":null},{"type":4,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1417354705,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MjAwMjU1MjQz"},"status":2},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1423168907,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDIzMTA0NjMzMw=="},"added":["build"],"removed":[]}]}