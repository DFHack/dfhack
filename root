{"version":1,"ops":[{"type":1,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1504164044,"metadata":{"github-id":"MDU6SXNzdWUyNTQyMzk1MDk=","github-url":"https://github.com/DFHack/dfhack/issues/1158","origin":"github"},"title":"Contributing.rst document comments: Describe DFHack github organization\u0026work flow","message":"I've tried making sense out of the \"How to get new code into DFHack\" section, and have basically failed. I believe the following information is needed to allow a novice to get off the ground:\n- A section somewhere to describe how the DFHack github is organized and the work flow used for it in terms understandable for someone who doesn't know github (possibly with a fast track section for those who do know github, but not how DFHack has set up its usage). If I understand it correctly, this organization is the same for both code and DF structure mapping and might be better placed in a common location with a reference from all affected documents.\n\nThis is how lethosor described the process to me in the forum thread for DFHack:\n\"Basic process:\n- create a fork of dfhack/dfhack (e.g. your-username/dfhack)\n- make a new branch based on the develop branch\n- work on your stuff there\n- make a pull request\n- someone on the DFHack team comments on / accepts the pull request (that's what the \"request\" part means - you'd be requesting that someone takes a look at your changes and merges them in)\"\n\nSome additional info I would have wanted to find (should be described by people who actually know what they're talking about, rather than just copy the indications below):\n- git add (to tell git that it should add the specified files to those considered included)\n- git commit - a -m \"commit comment\". Tells git that the changes should be considered part of the LOCAL base. It has absolutely no effect on your github branch.\n- git push. Causes the stuff commited to you local copy to be pushed into your github branch.","files":null}]}