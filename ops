{"version":1,"ops":[{"type":2,"author":{"id":"d4ba99f16422e9377de56dab81d2b84415f00388"},"timestamp":1591728439,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzQyNjM1ODk4MA=="},"title":"Command line stdin dfhack","was":"Command line stdin dfhack"},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1591728635,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTUwNDIzMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641504231"},"message":"Can you see if setting [DFHACK_DISABLE_CONSOLE](https://docs.dfhack.org/en/stable/docs/Core.html#environment-variables) fixes it?","files":null},{"type":3,"author":{"id":"d4ba99f16422e9377de56dab81d2b84415f00388"},"timestamp":1591729927,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTUxNTQ1Nw==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641515457"},"message":"In terminal for testing it seems to work:\n```bash\nexport DFHACK_DISABLE_CONSOLE=1\n./dfhack \u0026\n# or\necho \"test\" | ./dfhack\n```\nIt does print out some stuff and not others.\n\n```\n$ export DFHACK_DISABLE_CONSOLE=1\n$ echo \"test\" | ./dfhack\nLoading bindings from data/init/interface.txt\nResetting textures\nDFHack is ready. Have a nice day!\nDFHack version 0.47.04-r1 (release) on x86_64\nType in '?' or 'help' for general help, 'ls' to see all commands.\n```\nSo the `test is not a recognized command.` will not be printed, but that is okay for me.\n\nI don't know if this resolves the issue here. But at least this allows me to use dfhack from the terminal.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1591730607,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTUyMTE2Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641521166"},"message":"The DFHack console reads from /dev/tty - if it read from stdin, we would need a good way to handle EOF (ignoring it would lead to repeated output like what you saw).\n\nIf you're trying to run DFHack commands programmatically, I would recommend `./dfhack-run`","files":null},{"type":3,"author":{"id":"d4ba99f16422e9377de56dab81d2b84415f00388"},"timestamp":1591731031,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTUyNDU0NA==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641524544"},"message":"Yeah I was going to use `./dfhack-run` but I first had to open `dfhack` itself that was why I wanted to so `./dfhack \u0026` so it does not block the execution of the rest of the bash script. But because of the issue above this was not really possible.\nSo now I can do both :smile:\nThanks for the help.","files":null},{"type":3,"author":{"id":"d4ba99f16422e9377de56dab81d2b84415f00388"},"timestamp":1591755111,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTY3NzE3Nw==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641677177"},"message":"The fact that you use the `/dev/tty` was kind of annoying as I switch from detecting in lua if the script is done to capturing the output and just waiting for a message to match my search token.\nBut I manged.\n\nIf someone ever finds this and has the same problem:\n```bash\nscript -q -a -f -c \"./dfhack +load-legends-mode region$WORLDID\" \"$TEMP_OUPUT\" \u0026\n```\nThis will quietly (-q) (although still output everything in terminal you opened the command in) append (-a) all the output as it comes in (-f) to \"$TEMP_OUPUT\" (which is just a path to a file) coming from from the command (-c \"some command\"). The \"\u0026\" will not block the script.\n\nBut I have another question:\nWill the [`die`](https://docs.dfhack.org/en/stable/docs/Core.html#die) command cleanly shut dwarf fortress down or will it just terminate instantly? (will it clean up memory so?)\nOr should I write a script that nicely closes everything? Similar to this maybe: https://github.com/DFHack/dfhack/blob/5d05cfc7ccadbad5dceab045f8e66bb064a2c43c/test/main.lua#L94-L112","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1591764440,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTcxODAzMg==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641718032"},"message":"That's not really related to /dev/tty - it's just that exportlegends spins off a separate coroutine before it returns (which it needs to do so that the changes it makes to the legends viewscreen have time to take effect). You would run into the same issue if it were printing directly to stdout.\n\nAlso, I'm not really sure what your question about \"die\" is, or how the test/main snippet is related (I don't think it's doing any cleanup there). \"die\" exits DF pretty much instantly, but the OS is responsible for cleaning up memory in any case, so it doesn't matter if \"die\" cleans anything up.","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1591771462,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY0MTc2NDE5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/1587#issuecomment-641764196"},"message":"\"die\" causes things to be cleaned up, as opposed to some crashes (and, I think, using the Windows task manager to kill DF). In the latter case I tend to get zombie threads (confusing DT) and locked files (SDL.dll, blocking switches between using DFHack and vanilla [can be worked around by renaming the locked SDL.dll so you can copy the one you want in its stead]).","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1599002855,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM3MTcyMDg2MDc="},"added":["bug"],"removed":[]}]}