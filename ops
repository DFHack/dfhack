{"version":1,"ops":[{"type":3,"author":{"id":"0541b7dd92e4d9285c31215454cda686ef6b8a4e"},"timestamp":1500026049,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMxNTMyMDUyMQ==","github-url":"https://github.com/DFHack/dfhack/issues/1123#issuecomment-315320521"},"message":"FYI, dfhack console on Windows has done this for as long as I can recall (at least 3 years), on both Windows 7 and Windows 10.","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1504890640,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMyODE2MTU4OA==","github-url":"https://github.com/DFHack/dfhack/issues/1123#issuecomment-328161588"},"message":"I've made some headway on the issue, but I'm not sure it's good enough.\nAccording to this page [https://docs.microsoft.com/en-us/windows/console/writeconsoleoutputcharacter](url)\n\"The attribute values at the positions written to are not changed.\", which matches what I've seen, i.e. the console behaves somewhat like a DFHack pen array (but with much worse control). However, just replacing usage of that function with the pair\n`            SetConsoleCursorPosition(console_out, pos);\n            WriteConsoleA(console_out, str, len - 1, \u0026count, NULL);\n`\ndoesn't work properly either, because that function apparently advances the cursor, causing the window to scroll down when the line is blanked out. My best work around is to create a special blanking function that uses WriteConsoleA up to the last character and then blanks the last one with WriteConsoleOutputCharacterA.\nThe results seems to be that the color contamination of the DFHack prompt is blocked, but the DFHack help text when typing garbage still takes on the \"script assigned\" color.\n\nEdit: I forgot to mention that I can no longer replicate the original problem using the script posted using the latest DFHack version (not my compilation of it, but I can't get the issue with that either). Is it possible the small soft one has fixed a race condition in one of its updates?","files":null},{"type":3,"author":{"id":"df7feee793b3a4f60453609739052ef8e882d092"},"timestamp":1506418966,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDMzMjE0NDk2NA==","github-url":"https://github.com/DFHack/dfhack/issues/1123#issuecomment-332144964"},"message":"The following change gets rid of the color contamination caused by the \"err\" script:\nIn Console-windows.cpp function output, replace the call to \"WriteConsoleOutputCharacterA\" with\n`            CONSOLE_SCREEN_BUFFER_INFO inf = { 0 };\n            GetConsoleScreenBufferInfo(console_out, \u0026inf);\n            SetConsoleCursorPosition(console_out, pos);\n            WriteConsoleA(console_out, str, len, \u0026count, NULL);`\n\nand I haven't been able to reproduce the original color confusion/bleeding with that code in place, but I am able to do it with the original code, so I suspect the random point at which contamination happens is caused by a race condition determining whether the output of the DFHack prompt ends up on a \"new\" line or reusing the line from the previous output.\n\nThe change causes characters placed into the screen buffer to always use the currently defined attributes, rather than keep the attributes that happened to be present at those locations.\n\nI suspect that if dfhack were to support console background colors (I couldn't find this with a quick look), the clearline function would have to be updated to replace attributes, as you could keep the wrong background color otherwise.\n\nAnd, while changing the file, remove the semicolon from the end of \"#define MAX_CONSOLE_LINES 999;\" as that makes MAX_CONSOLE_LINES useless as a constant where you don't actually want a semicolon at the end of it [such as trying to calculate how far away from the end of the buffer you are] (or, if you do want to keep it, remove the redundant semicolon after the usage of MAX_CONSOLE_LINES).","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1513878246,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTM5ODQwOTAxMg=="},"status":2}]}