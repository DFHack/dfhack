{"version":1,"ops":[{"type":1,"author":{"id":"50f59a96b9b7e087929d72d59e95c4aa34b5cdc8"},"timestamp":1589919600,"metadata":{"github-id":"MDU6SXNzdWU2MjEyNTg5NDQ=","github-url":"https://github.com/DFHack/dfhack/issues/1574","origin":"github"},"title":"Document how function ids are assigned for RemoteFortressReader/RPC clients","message":"In a RemoteFortressReader connection, server functions are queried based on their `int16_t id`, which is specified in the `RPCMessageHeader.id` and looked up in [ServerConnection::threadFn()](https://github.com/DFHack/dfhack/blob/develop/library/RemoteServer.cpp#L317).\n\nIt appears to be populated by repeatedly calling [RPCService::finalize](https://github.com/DFHack/dfhack/blob/develop/library/RemoteServer.cpp#L120) to fill `functions` with various plugins' methods, but there is no indication what order they are populated in.  This seems like an incredibly brittle way of specifying an RPC API.  `devel/dump-rpc` provides some information, but not enough to discern what `RPCMessageHeader.id` should be.\n\nAre `devel/dump-rpc`'s outputs all and exactly the functions available to RemoteFortressReader clients, in order?   And how are remote clients meant to discover this?","files":null}]}