{"version":1,"ops":[{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443327085,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQyMDA2MzQyOA=="},"added":["idea"],"removed":[]},{"type":5,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443327085,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQyMDA2MzQyOQ=="},"added":["documentation"],"removed":[]},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443329066,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUxODM5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143518396"},"message":"The only thing the above adds is it lets us have multiple separate comments which will all be included.\n\nIf we use @PeridexisErrant 's suggestion in #670 [here](https://github.com/DFHack/dfhack/issues/670#issuecomment-143390691) then we can include just one big comment at the top, which is fine for now.\n\nI'd also like to make it so that we don't even have to manually change Scripts.rst with each new script. Maybe some CMake magic with configure_file would work.\n\nWe could also use USERDOC_START/USERDOC_END and CONTRIBUTORDOC_START/CONTRIBUTORDOC_END if we want to have html generated for information useful to scripters but not users, like functions usable with reqscript.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1443331115,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUxOTg1Mg==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143519852"},"message":"I'll stick to high-level comments here; see above for some detailed examples.\n\nThe first link above looks good to me too.  I do think it would be good though to integrate this with standard help functions in the terminal somehow, implying that (a) the string should probably be a variable rather than a comment, which has no impact on the rst text, and (b) it should be _strictly_ wrapped to 72 or 80 characters, which obviously does.\n\nMy inclination is always to document for users, and comment for developers.  This gets hazy with autodoc and the modtools, but I'd say document anything that doesn't require editing a script and comment everything that does.  USERDOC / CONTRIBUTORDOC just sounds like it's getting overly complex and verbose to me - maybe get the user stuff up and running first, then revisit?\n\nThe easiest way to do this is probably add `scripts/**autogen.rst` to `.gitignore`, then in `docs/Scripts.rst` use a `.. include::` directive if we want a single document, or `toctree` with glob option if we want each page separate.  I can easily write a function to go in conf.py that generates those pages based on the contents of the script folders at build time.  This seems hacky, but it's going to be more reliable and readable than the other options.  Happy to get this working once we've decided which extension to pull data from files with.\n\nMoving documentation to scripts also requires that we host the built documentation online so _potential_ users can find and read it without having to build anything (actual users also have the offline html).  I've already mentioned that readthedocs.org is perfect for this.\n\nFinally, linting.  This is a perfect match for forcing everything to be checked via (travis) scripts, which is lucky because the whole thing will become unusable if we don't.  My vote is for as much linting as often as possible, and requiring any documentation to meet style and completeness standards before we accept it.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443337630,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUyNjEwMg==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143526102"},"message":"Yeah, we can revisit developer docs later.\n\nI just wrote an attempt at making Sphinx auto-extract special comment headers from all lua files in all subdirectories of scripts/. It currently breaks your python script that checks that all scripts are documented and it does not correctly rerun Sphinx when lua files are changed but it's a start.\n\nAs for hosting online, see [this link.](http://expwnent.github.io/dfhack/) I'll move it to dfhack as part of the next release process.\n\nI agree linting is good. It's tedious and error-prone to do it manually.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443337789,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUyNjE3MA==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143526170"},"message":"PS: the problem with integrating it with the terminal is that if we do it that way then they can't do rst/Sphinx markup in the BEGIN_DOCS header.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1443348154,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUzNDU1NA==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143534554"},"message":"Breaking that linter isn't an issue; it was only ever a placeholder anyway.  I can write a better one for the new system.  I guess you could force it to re-read scripts every time by `touch`ing Scripts.rst every time conf.py is run, but that's hardly elegant.\n\nI do think [readthedocs](https://docs.readthedocs.org/en/latest/getting_started.html#import-your-docs) has advantages - such as rebuild-on-push webhooks, **per-branch documentation**, and so on - but I've pushed it enough that I'll shut up now.  It's just that using Github Pages, docs are going to have to be updated manually and eventually someone _won't_.  See [here](https://daler.github.io/sphinxdoc-test/includeme.html) and [here](http://blog.nikhilism.com/2012/08/automatic-github-pages-generation-from.html) for the best workarounds I've found.","files":null},{"type":3,"author":{"id":"be523fe0f95fc478bda36c722e6f106f8f7a41b5"},"timestamp":1443348327,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE0MzUzNjM1Mg==","github-url":"https://github.com/DFHack/dfhack/issues/703#issuecomment-143536352"},"message":"I'll look into it.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1444579437,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDMyMzk4MzM5"},"status":2},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1526324034,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE2MjU1NTUzNTc="},"added":["bug"],"removed":[]},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1526324034,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE2MjU1NTUzNjU="},"added":["structures"],"removed":[]}]}