{"version":1,"ops":[{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447641097,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MTQ1NA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156891454"},"message":"It could definitely be optimized. For comparison, how long does reveal take? (Also, does fix-unit-occupancy take longer after revealing everything? I thought I only had it check revealed blocks, but that could be a major improvement if not.)","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447641593,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ2NDk3NTM5NQ=="},"added":["performance"],"removed":[]},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447641642,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MjQ3OA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156892478"},"message":"It does only check revealed blocks(tiles?), but this runs inside the 16x16 inner loops, so it still loops 256 times for each `world-\u003emap.map_blocks`, but  this stops it checking occupancy versus `world-\u003eunits.active`   : \n\n``` C++\n    if (block-\u003edesignation[x][y].bits.hidden)\n                    continue;\n```\n\nreveal is basically instantaneous!","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447641739,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5MjY4MA==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156892680"},"message":"After running reveal, fix-unit-occupancy time increases from 6.0s to 8.9s","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447642134,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1Njg5NDk2Mw==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156894963"},"message":"I can see that reveal does the same 16x16 loops for each map_block, so that part must be super fast.\n\nMaybe it's the check of each tile against `world-\u003eunits.active` that's so slow?  I can test again with the same map but fewer dwarves.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447642918,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwMDQwNQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156900405"},"message":"Interesting.  With total number of alive dwarves reduced from 268 to 193  (27% reduction), total time for fix-unit-occupancy reduces by only 0.05s!  From 6.0s to 5.95s, barely anything.\n\nSo it's not the time it takes to loop through map blocks (which reveal does instantaneously), and it doesn't seem to be the unit checking.\n\nI can't see any other calls that look like they might be major time sinks, but I don't know enough about everything to be sure.   I'll put some timing logging in to see exactly where the time is spent.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1447644413,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwMzk1NQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156903955"},"message":"units.active includes all wildlife as well.","files":null},{"type":3,"author":{"id":"6a08ce56ad514124fb3932e81e3105edd8abfb04"},"timestamp":1447646183,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1NjkwOTQxOQ==","github-url":"https://github.com/DFHack/dfhack/issues/749#issuecomment-156909419"},"message":"Ah, good to know.   I have zero pets and tame animals in this save (I slaughtered them en-masse to save FPS for some other testing), but I suppose there must be a few animals in the wild.\n\nActually, 24 according to Units-\u003eOthers.\n\nSo it was around 6.0s with 268 + 24 = 292 units, versus 5.95s with 193 + 24 = 217 units, a 25% reduction in unit count but a basically negligible performance improvement.\n\nWhich is odd because, as you probably already know, findUnit() takes all the time:\n\nfix-unit-occupancy: elapsed time: 10.1065 secs\nfix-unit-occupancy: time hidden: 0.164711 secs\nfix-unit-occupancy: time findUnit: 9.05713 secs\nfix-unit-occupancy: time cur_occup: 0.148844 secs\n\n('hidden' and 'cur_occup' are all the rest of the code that occur before and after the findUnit() call respectively, in the inner loop)","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1448054754,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1ODUyODUxNQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-158528515"},"message":"DFHack's lack of access to argc/argv is the main obstacle here, but maybe a simple way to pass arguments to DFHack and have it handle them would be possible - I think parsing them in three different launcher scripts (in two different languages) would be harder to maintain.\n`:lua df.global.save_on_exit=0` should let you quit without saving. That's one of the globals that isn't located automatically, though, so you can't count on it being available in all DF/DFHack versions.","files":null},{"type":5,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1448054768,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDQ3MDg3MzgwMg=="},"added":["idea"],"removed":[]},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1448095076,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1ODYxMzAzMA==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-158613030"},"message":"I think all that's needed for this functionality is a command, usable at the main menu, to load the most recent save. Here's an example shell script:\n\n```\n./$df_executable\n./dfhack-run \"loadgame\"\n./dfhack-run \"script\\ commands.txt\"\n```\n\nYou can put arbitrary commands in the text file.  Direct passing might be useful to some people, but I think until we hear from someone who actually needs that, `echo $commands \u003e commands.txt \u0026\u0026 ./the_above.sh` will do.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1448112222,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1ODY0MDA3MQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-158640071"},"message":"That'll wait for DF to exit before running dfhack-run. You could run DF in the background, but that would almost certainly cause dfhack-run to run before DF has started.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1448112606,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE1ODY0MDQ5OQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-158640499"},"message":"Hmm.  I'd still just use init files plus the basic load-game-from-menu script (which I'd love to get), but I can see a potential case for more.","files":null},{"type":3,"author":{"id":"5221f59e75ea9db114593bbdfb180b7354aef9ed"},"timestamp":1449089363,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE2MTQyOTkzMw==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-161429933"},"message":"If I recall correctly, ui_sidebar_menus contains the full command-line along with a string vector of individual parameters, used for commandline world generation - I conclusively identified it in version 0.23, and in the current version it should be the first 2 fields of the \"unk\" compound at the end (immediately before unk_17c0).\n\nI don't recall exactly _when_ those fields are populated and subsequently checked, however - if any viewscreens are opened (and executed) prior to world generation being started, it might be possible to insert a hook there (to suppress auto-worldgen and later redirect to the loadgame process).","files":null},{"type":3,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1450033232,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE2NDI4NzkxMg==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-164287912"},"message":"Perhaps this should be like how vim works with `+foo bar` running `:foo bar` on the document right after it's loaded? So `./dfhack +script commands.txt` would be equivalent to running `./dfhack` in one shell and then immediately after the game is started, `./dfhack-run \"foo\\ bar\"` in another.","files":null},{"type":3,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1454106124,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE3Njk5NjY2NQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-176996665"},"message":"Ok, now that we have the `./dfhack +foo bar`, what do we still want/need? Just a command that continues a game from the main menu? [That can be done by setting a variable to an index in a vector and sending the SELECT key.](https://github.com/BenLubar/df-ai/blob/2671f5501c67b473a16511cc5ff9469b3595f727/df-ai/embark.cpp#L130-L141)\n\nA command like \"wait n seconds\" or \"wait for the viewscreen to be viewscreen_dwarfmodest\" would be significantly harder to write, since it would be a pretty major change to how scripts are executed, but it's still possible by keeping track of the fact that you want to wait and storing commands in a vector somewhere instead of executing them. It would probably have some complications around dfhack-run, though.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1458179342,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5NzY0NTU1NQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-197645555"},"message":"Alright, we need:\n- [ ] Documentation for #767 - I'll do this in `docs/Core.rst`.  @BenLubar - I assume it also doesn't handle the `foo: one arg with spaces` case either?\n- [ ] New script `continue-game`, which continues the most recent game from the main title screen (or prints an error).  Most recent game should be by file age.  Could take one optional argument for which region to continue with.  Someone else should do this.","files":null},{"type":3,"author":{"id":"fefd87bd170e69ba989c5932b26d53a6f30e8666"},"timestamp":1458179874,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5NzY0OTMzNw==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-197649337"},"message":"No, `+:lua` doesn't do anything special. It uses shell argument splitting. Also, it doesn't work if you include `\"` inside an argument because it has to re-parse what Dwarf Fortress spits out which uses double quotes around arguments and spaces to separate arguments with no escaping of any double quotes inside arguments.","files":null},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1458181463,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5NzY1ODMwNg==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-197658306"},"message":"Why `modtools`? It's not a mod tool at all, as far as I can tell.","files":null},{"type":3,"author":{"id":"f7b5a7930d0e1264ae1e4a774b03a7e78c2b7858"},"timestamp":1458181996,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDE5NzY2MTg3OQ==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-197661879"},"message":"Ok, will add to docs.  Good point lethosor.","files":null},{"type":4,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1470933853,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NzUyOTM3NDM2"},"status":2},{"type":3,"author":{"id":"e77d0a5f059ed8eaaa1afef6624480d02a2f025a"},"timestamp":1470933910,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDIzOTIxOTA5Ng==","github-url":"https://github.com/DFHack/dfhack/issues/755#issuecomment-239219096"},"message":"The basic script which works with the command-line syntax is done in DFHack/scripts@274e7c3. I'll move the additional features to another issue.","files":null}]}